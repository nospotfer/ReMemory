/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTable;
import javax.swing.UIManager;
import controlador.ButtonColumn;
import model.Pacient;
import controlador.Utils;
import controlador.VerticalTableHeaderCellRenderer;

import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.jdesktop.swingx.decorator.HighlighterFactory;

/**
 *
 * @author USER
 */
public class Sessio1 extends javax.swing.JFrame {

    private final String valoracio;
    int pagina = 0;
    int numPaginesTotal = 2;
    Pacient pacientActual;
    private HashMap<String, HashMap<Integer, List<Object>>> taulaDigitsDD;
    private HashMap<String, HashMap<Integer, List<Object>>> taulaDigitsDI;
    private HashMap<String, HashMap<Integer, List<Object>>> taulaBNTA;
    private HashMap<String, HashMap<Integer, List<Object>>> taulaBNTB;
    private HashMap<String, HashMap<Integer, List<Object>>> taulaBNTC;
    private Timer timer;
    private Timer timerColor;
    private Timer timerColor2;
    private long startTime;
    DecimalFormat timeFormatter;
    JButton[] llistaBtn5digits;
    String edatPacient;
    long secondsColor1 = 0;
    long secondsColor2 = 0;
    Frame parent;
    
    /**
     * Creates new form Sessio1
     */
    public Sessio1(Frame parent, Pacient pacientActual, String valoracio) {
        Utils.setIcon(this);

        this.parent = parent;
        
        initComponents();

        this.setTitle(this.getTitle()+" | T"+valoracio);
        
        this.pacientActual = pacientActual;

        this.valoracio = valoracio;
        
        convertEdat();
        
        initTabs();
        
        initDigitsDirecteTable();
        initDigitsInversTable();
        
        initML1ATable();
        initML1BTable();
        
        initML2ATable();
        initML2BTable();
        initML2RecTable();
        
        initBNTATable();
        initBNTBTable();
        initBNTCTable();
        
        initColorTrails();
        
        initFluenciaVerbalTable();
        
        initTimer();
        
        initHashDD();
        initHashDI();
        
        initHashBNTA();
        initHashBNTB();
        initHashBNTC();
        
        initCogstateButtons();
        
        anteriorBtn.setEnabled(false);

        Utils.carregar(dataPanel,pacientActual.getId(), "Sessio1"+valoracio);

        this.toFront();
        this.repaint();
    
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        tabbedPanel = new javax.swing.JTabbedPane();
        digitsTab = new javax.swing.JPanel();
        digitsDirecteScroll = new javax.swing.JScrollPane();
        digitsDirectePanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        digitsDirecteTable = new org.jdesktop.swingx.JXTable();
        jPanel9 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel85 = new javax.swing.JLabel();
        percentilDD = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        nssaDD = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        puntuacioDirectaDD = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        spanDD = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        resetDD = new javax.swing.JButton();
        dataDD = new javax.swing.JLabel();
        digitsInversScroll = new javax.swing.JScrollPane();
        digitsInversPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        digitsInversTable = new org.jdesktop.swingx.JXTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel89 = new javax.swing.JLabel();
        puntuacioDirectaDI = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        spanDI = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel91 = new javax.swing.JLabel();
        percentilDI = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        nssaDI = new javax.swing.JLabel();
        resetDI = new javax.swing.JButton();
        dataDI = new javax.swing.JLabel();
        ML1Tab = new javax.swing.JPanel();
        ML1Scroll = new javax.swing.JScrollPane();
        ML1Panel = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ML1ATable = new org.jdesktop.swingx.JXTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        historiaAprimerTotal = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        historiaAsegonTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textHistoriaAprimer = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textHistoriaAsegon = new javax.swing.JTextArea();
        resetHistoriaA = new javax.swing.JButton();
        ML1Scroll2 = new javax.swing.JScrollPane();
        ML1Panel1 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        ML1BTable = new org.jdesktop.swingx.JXTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        textHistoriaBprimer = new javax.swing.JTextArea();
        jLabel43 = new javax.swing.JLabel();
        resetHistoriaB = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        puntuacioML1 = new javax.swing.JLabel();
        ML1Total = new javax.swing.JLabel();
        historiaBprimerTotal = new javax.swing.JLabel();
        dataMl1 = new javax.swing.JLabel();
        cogstateTab = new javax.swing.JPanel();
        digitsDirecteScroll3 = new javax.swing.JScrollPane();
        digitsDirectePanel3 = new javax.swing.JPanel();
        jLabel165 = new javax.swing.JLabel();
        obrePdfBtn = new javax.swing.JButton();
        obreExcelBtn = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        ML2Tab = new javax.swing.JPanel();
        ML2Scroll1 = new javax.swing.JScrollPane();
        ML2Panel2 = new javax.swing.JPanel();
        jLabel109 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        ML2ATable = new org.jdesktop.swingx.JXTable();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        historiaAprimerTotal2 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        textHistoriaAprimer2 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        resetHistoriaA1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ML2Scroll3 = new javax.swing.JScrollPane();
        MLPanel3 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        ML2BTable = new org.jdesktop.swingx.JXTable();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        textHistoriaBprimer2 = new javax.swing.JTextArea();
        jLabel54 = new javax.swing.JLabel();
        resetHistoriaB1 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        puntuacioML2 = new javax.swing.JLabel();
        ML2Total = new javax.swing.JLabel();
        historiaBprimerTotal2 = new javax.swing.JLabel();
        dataMl2 = new javax.swing.JLabel();
        ML2Scroll4 = new javax.swing.JScrollPane();
        ML2Panel4 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        ML2RecTableA = new org.jdesktop.swingx.JXTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        totalRecA = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        ML2RecTableB = new org.jdesktop.swingx.JXTable();
        jLabel59 = new javax.swing.JLabel();
        totalRecB = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        totalRec = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BNTTab = new javax.swing.JPanel();
        BNTScroll5 = new javax.swing.JScrollPane();
        MLPanel4 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        BNTATable = new org.jdesktop.swingx.JXTable();
        jLabel62 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        resetHistoriaB2 = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        semanticaBntA = new javax.swing.JLabel();
        correctesBntA = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        totalBntA = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel81 = new javax.swing.JLabel();
        percentilBNTA = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        nssaBNTA = new javax.swing.JLabel();
        dataBnt1 = new javax.swing.JLabel();
        BNTScroll6 = new javax.swing.JScrollPane();
        MLPanel5 = new javax.swing.JPanel();
        jLabel112 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        BNTBTable = new org.jdesktop.swingx.JXTable();
        jLabel63 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        resetHistoriaB3 = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        percentilBNTB = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        nssaBNTB = new javax.swing.JLabel();
        semanticaBntB = new javax.swing.JLabel();
        correctesBntB = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        totalBntB = new javax.swing.JLabel();
        dataBnt2 = new javax.swing.JLabel();
        BNTScroll7 = new javax.swing.JScrollPane();
        MLPanel6 = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        BNTCTable = new org.jdesktop.swingx.JXTable();
        jLabel64 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        resetHistoriaB4 = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        semanticaBntC = new javax.swing.JLabel();
        correctesBntC = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        totalBntC = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel83 = new javax.swing.JLabel();
        percentilBNTC = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        nssaBNTC = new javax.swing.JLabel();
        dataBnt3 = new javax.swing.JLabel();
        colorTrailsTab = new javax.swing.JPanel();
        digitsDirecteScroll1 = new javax.swing.JScrollPane();
        digitsDirectePanel1 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        colorTrailsTable = new org.jdesktop.swingx.JXTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        colorTrailsCronoBtn = new javax.swing.JButton();
        colorTrailsCronoLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        dataColor = new javax.swing.JLabel();
        colorTrailsCronoBtn1 = new javax.swing.JButton();
        colorTrailsCronoLabel1 = new javax.swing.JLabel();
        jButton20 = new javax.swing.JButton();
        fiveDigitsTab = new javax.swing.JPanel();
        fiveDigitsScroll = new javax.swing.JScrollPane();
        Panel = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        fiveDigitStart1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        temps1 = new javax.swing.JLabel();
        temps2 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        fiveDigitsScroll1 = new javax.swing.JScrollPane();
        Panel1 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel94 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        fiveDigitStart2 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel119 = new javax.swing.JLabel();
        temps3 = new javax.swing.JLabel();
        temps4 = new javax.swing.JLabel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        fiveDigitsScroll2 = new javax.swing.JScrollPane();
        Panel2 = new javax.swing.JPanel();
        jLabel122 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        fiveDigitStart3 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jLabel136 = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        temps5 = new javax.swing.JLabel();
        temps6 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        fiveDigitsScroll3 = new javax.swing.JScrollPane();
        Panel3 = new javax.swing.JPanel();
        jLabel141 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        fiveDigitStart4 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jLabel146 = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jLabel148 = new javax.swing.JLabel();
        jLabel149 = new javax.swing.JLabel();
        jLabel150 = new javax.swing.JLabel();
        jLabel151 = new javax.swing.JLabel();
        jLabel152 = new javax.swing.JLabel();
        jLabel153 = new javax.swing.JLabel();
        jLabel154 = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel156 = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        temps7 = new javax.swing.JLabel();
        temps8 = new javax.swing.JLabel();
        jLabel158 = new javax.swing.JLabel();
        jLabel159 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        fiveDigitsScroll4 = new javax.swing.JScrollPane();
        Panel4 = new javax.swing.JPanel();
        jLabel160 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel161 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        jLabel163 = new javax.swing.JLabel();
        lecturaTemps = new javax.swing.JLabel();
        jLabel166 = new javax.swing.JLabel();
        jLabel167 = new javax.swing.JLabel();
        lecturaTempsPC = new javax.swing.JLabel();
        lecturaErrorsPC = new javax.swing.JLabel();
        jLabel170 = new javax.swing.JLabel();
        jLabel171 = new javax.swing.JLabel();
        jLabel172 = new javax.swing.JLabel();
        compteigTemps = new javax.swing.JLabel();
        compteigTempsPC = new javax.swing.JLabel();
        compteigErrorsPC = new javax.swing.JLabel();
        jLabel176 = new javax.swing.JLabel();
        jLabel177 = new javax.swing.JLabel();
        jLabel179 = new javax.swing.JLabel();
        jLabel180 = new javax.swing.JLabel();
        jLabel181 = new javax.swing.JLabel();
        eleccioTemps = new javax.swing.JLabel();
        eleccioTempsPC = new javax.swing.JLabel();
        eleccioErrorsPC = new javax.swing.JLabel();
        jLabel185 = new javax.swing.JLabel();
        jLabel186 = new javax.swing.JLabel();
        jLabel188 = new javax.swing.JLabel();
        jLabel189 = new javax.swing.JLabel();
        jLabel190 = new javax.swing.JLabel();
        alternTemps = new javax.swing.JLabel();
        alternTempsPC = new javax.swing.JLabel();
        alternErrorsPC = new javax.swing.JLabel();
        jLabel194 = new javax.swing.JLabel();
        jLabel195 = new javax.swing.JLabel();
        lecturaTempsPCField = new javax.swing.JTextField();
        lecturaErrorsPCField = new javax.swing.JTextField();
        compteigTempsPCField = new javax.swing.JTextField();
        compteigErrorsPCField = new javax.swing.JTextField();
        eleccioTempsPCField = new javax.swing.JTextField();
        eleccioErrorsPCField = new javax.swing.JTextField();
        alternTempsPCField = new javax.swing.JTextField();
        alternErrorsPCField = new javax.swing.JTextField();
        lecturaErrors = new javax.swing.JTextField();
        compteigErrors = new javax.swing.JTextField();
        eleccioErrors = new javax.swing.JTextField();
        alternErrors = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel198 = new javax.swing.JLabel();
        jLabel199 = new javax.swing.JLabel();
        eleccioTemps2 = new javax.swing.JLabel();
        lecturaTemps2 = new javax.swing.JLabel();
        jLabel233 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel202 = new javax.swing.JLabel();
        inhibicioPD = new javax.swing.JLabel();
        inhibicioPC = new javax.swing.JLabel();
        jLabel205 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        eleccioTemps2Field = new javax.swing.JTextField();
        lecturaTemps2Field = new javax.swing.JTextField();
        inhibicioPDField = new javax.swing.JTextField();
        inhibicioPCField = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel206 = new javax.swing.JLabel();
        alternanTemps2 = new javax.swing.JLabel();
        compteigTemps2 = new javax.swing.JLabel();
        jLabel234 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel210 = new javax.swing.JLabel();
        flexibilitatPD = new javax.swing.JLabel();
        flexibilitatPC = new javax.swing.JLabel();
        jLabel213 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel207 = new javax.swing.JLabel();
        alternanTemps2Field = new javax.swing.JTextField();
        compteigTemps2Field = new javax.swing.JTextField();
        flexibilitatPDField = new javax.swing.JTextField();
        flexibilitatPCField = new javax.swing.JTextField();
        calculPercentilsFiveDigit = new javax.swing.JButton();
        dataFive = new javax.swing.JLabel();
        jButton22 = new javax.swing.JButton();
        colorTrailsTab1 = new javax.swing.JPanel();
        digitsDirecteScroll2 = new javax.swing.JScrollPane();
        digitsDirectePanel2 = new javax.swing.JPanel();
        jLabel164 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        fluenciaVerbalTable = new org.jdesktop.swingx.JXTable();
        jButton17 = new javax.swing.JButton();
        dataFluencia = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        acceptaBtn = new javax.swing.JButton();
        cancelaBtn = new javax.swing.JButton();
        anteriorBtn = new javax.swing.JButton();
        seguentBtn = new javax.swing.JButton();
        paginaLabel = new javax.swing.JLabel();
        paginaLabel2 = new javax.swing.JLabel();
        sepBottom = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sessió 1");
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        mainPanel.setLayout(new java.awt.BorderLayout());

        dataPanel.setLayout(new java.awt.BorderLayout());

        tabbedPanel.setToolTipText("");
        tabbedPanel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        digitsTab.setLayout(new java.awt.CardLayout());

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Dígits directe");

        digitsDirecteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digitsDirecteTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        digitsDirecteTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        digitsDirecteTable.setRowSelectionAllowed(false);
        digitsDirecteTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        digitsDirecteTable.setSortable(false);
        digitsDirecteTable.setSortsOnUpdates(false);
        jScrollPane4.setViewportView(digitsDirecteTable);
        if (digitsDirecteTable.getColumnModel().getColumnCount() > 0) {
            digitsDirecteTable.getColumnModel().getColumn(0).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(1).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(3).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel9.setBackground(new java.awt.Color(250, 150, 70));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setText("Calcular");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel85.setText("<html>Percentil<br>range:");

        percentilDD.setBackground(new java.awt.Color(255, 255, 255));
        percentilDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilDD.setText("0");
        percentilDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilDD.setOpaque(true);

        jLabel86.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel86.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaDD.setBackground(new java.awt.Color(255, 255, 255));
        nssaDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaDD.setText("0");
        nssaDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaDD.setOpaque(true);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addGap(22, 22, 22)
                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(percentilDD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nssaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(percentilDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nssaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(220, 218, 195));

        jLabel87.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel87.setText("<html>Puntuació directa<br>ordre directe (DD)");

        puntuacioDirectaDD.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioDirectaDD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        puntuacioDirectaDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioDirectaDD.setText("0");
        puntuacioDirectaDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioDirectaDD.setOpaque(true);

        jLabel11.setText("(Max = 9)");

        jLabel88.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel88.setText("SpanDD");

        spanDD.setBackground(new java.awt.Color(255, 255, 255));
        spanDD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spanDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spanDD.setText("0");
        spanDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        spanDD.setOpaque(true);

        jLabel12.setText("(Max = 16)");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(puntuacioDirectaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spanDD, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel88))
                    .addComponent(jLabel87, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puntuacioDirectaDD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        resetDD.setText("Reset");
        resetDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetDDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digitsDirectePanelLayout = new javax.swing.GroupLayout(digitsDirectePanel);
        digitsDirectePanel.setLayout(digitsDirectePanelLayout);
        digitsDirectePanelLayout.setHorizontalGroup(
            digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resetDD)
                            .addComponent(dataDD))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        digitsDirectePanelLayout.setVerticalGroup(
            digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsDirectePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetDD)
                        .addGap(18, 18, 18)
                        .addComponent(dataDD))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        digitsDirecteScroll.setViewportView(digitsDirectePanel);

        digitsTab.add(digitsDirecteScroll, "card1");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Dígits invers");

        digitsInversTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digitsInversTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        digitsInversTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        digitsInversTable.setRowSelectionAllowed(false);
        digitsInversTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        digitsInversTable.setSortable(false);
        digitsInversTable.setSortsOnUpdates(false);
        jScrollPane5.setViewportView(digitsInversTable);
        if (digitsInversTable.getColumnModel().getColumnCount() > 0) {
            digitsInversTable.getColumnModel().getColumn(0).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(1).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(3).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel11.setBackground(new java.awt.Color(220, 218, 195));

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel89.setText("<html>Puntuació directe<br>ordre invers (DI)");

        puntuacioDirectaDI.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioDirectaDI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        puntuacioDirectaDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioDirectaDI.setText("0");
        puntuacioDirectaDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioDirectaDI.setOpaque(true);

        jLabel13.setText("(Max = 9)");

        jLabel90.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel90.setText("SpanDI");

        spanDI.setBackground(new java.awt.Color(255, 255, 255));
        spanDI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spanDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spanDI.setText("0");
        spanDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        spanDI.setOpaque(true);

        jLabel14.setText("(Max = 16)");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(puntuacioDirectaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spanDI, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel90))
                    .addComponent(jLabel89, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puntuacioDirectaDI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(250, 150, 70));

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setText("Calcular");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel91.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel91.setText("<html>Percentil<br>range:");

        percentilDI.setBackground(new java.awt.Color(255, 255, 255));
        percentilDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilDI.setText("0");
        percentilDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilDI.setOpaque(true);

        jLabel92.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel92.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaDI.setBackground(new java.awt.Color(255, 255, 255));
        nssaDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaDI.setText("0");
        nssaDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaDI.setOpaque(true);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(percentilDI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nssaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(nssaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(percentilDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        resetDI.setText("Reset");

        javax.swing.GroupLayout digitsInversPanelLayout = new javax.swing.GroupLayout(digitsInversPanel);
        digitsInversPanel.setLayout(digitsInversPanelLayout);
        digitsInversPanelLayout.setHorizontalGroup(
            digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsInversPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addGroup(digitsInversPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resetDI)
                            .addComponent(dataDI))))
                .addContainerGap(697, Short.MAX_VALUE))
        );
        digitsInversPanelLayout.setVerticalGroup(
            digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsInversPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(digitsInversPanelLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetDI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataDI)))
                .addContainerGap(254, Short.MAX_VALUE))
        );

        digitsInversScroll.setViewportView(digitsInversPanel);

        digitsTab.add(digitsInversScroll, "card2");

        tabbedPanel.addTab("DIGITS", digitsTab);

        ML1Tab.setLayout(new java.awt.CardLayout());

        jLabel106.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel106.setText("<html><center><b>Memoria Lògica I</b>");

        ML1ATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML1ATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML1ATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML1ATable.setRowSelectionAllowed(false);
        ML1ATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML1ATable.setSortable(false);
        ML1ATable.setSortsOnUpdates(false);
        jScrollPane6.setViewportView(ML1ATable);
        if (ML1ATable.getColumnModel().getColumnCount() > 0) {
            ML1ATable.getColumnModel().getColumn(0).setResizable(false);
            ML1ATable.getColumnModel().getColumn(1).setResizable(false);
            ML1ATable.getColumnModel().getColumn(3).setResizable(false);
            ML1ATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(65, 110, 160));
        jLabel32.setText("Total Historia A. Primer record:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(65, 110, 160));
        jLabel34.setText("Historia A");

        jLabel1.setText("La Maria i el Pedro són amics des de fa 30 anys. Cada dimarts queden per esmorzar al bar Cervantes.");

        jLabel3.setText("Després surten junts a passejar pel parc del Retiro.");

        historiaAprimerTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaAprimerTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAprimerTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAprimerTotal.setText("0");
        historiaAprimerTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAprimerTotal.setOpaque(true);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(65, 110, 160));
        jLabel36.setText("Total Historia A. Segon record:");

        historiaAsegonTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaAsegonTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAsegonTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAsegonTotal.setText("0");
        historiaAsegonTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAsegonTotal.setOpaque(true);

        textHistoriaAprimer.setColumns(20);
        textHistoriaAprimer.setRows(5);
        jScrollPane2.setViewportView(textHistoriaAprimer);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Transcripció primer record:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Transcripció segon record:");

        textHistoriaAsegon.setColumns(20);
        textHistoriaAsegon.setRows(5);
        jScrollPane3.setViewportView(textHistoriaAsegon);

        resetHistoriaA.setText("Reset");
        resetHistoriaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ML1PanelLayout = new javax.swing.GroupLayout(ML1Panel);
        ML1Panel.setLayout(ML1PanelLayout);
        ML1PanelLayout.setHorizontalGroup(
            ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML1PanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane3)
                                    .addGroup(ML1PanelLayout.createSequentialGroup()
                                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel35)
                                            .addComponent(resetHistoriaA)
                                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel32)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel36)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAsegonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 775, Short.MAX_VALUE))))
                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))))))
                .addContainerGap())
        );
        ML1PanelLayout.setVerticalGroup(
            ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1PanelLayout.createSequentialGroup()
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(historiaAprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(historiaAsegonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaA))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(273, Short.MAX_VALUE))
        );

        ML1Scroll.setViewportView(ML1Panel);

        ML1Tab.add(ML1Scroll, "card1");

        jLabel107.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel107.setText("<html><center><b>Memoria Lògica I</b>");

        ML1BTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML1BTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML1BTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML1BTable.setRowSelectionAllowed(false);
        ML1BTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML1BTable.setSortable(false);
        ML1BTable.setSortsOnUpdates(false);
        jScrollPane7.setViewportView(ML1BTable);
        if (ML1BTable.getColumnModel().getColumnCount() > 0) {
            ML1BTable.getColumnModel().getColumn(0).setResizable(false);
            ML1BTable.getColumnModel().getColumn(1).setResizable(false);
            ML1BTable.getColumnModel().getColumn(3).setResizable(false);
            ML1BTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(65, 110, 160));
        jLabel37.setText("Total Historia B. Primer record:");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(65, 110, 160));
        jLabel38.setText("Historia B");

        jLabel39.setText("<html>Elena Pérez, del sud de Madrid, treballadora com a cuinera al menjador d'una escola, va denunciar a la comissaria de <br> policia que havia estat assaltada la nit anterior al carrer Padilla, i que li havien robat 56 euros. Tenia quatre <br> nens petits, no havia pogut pagar el lloguer i portaven dos dies sense menjar. La policia, commoguda per la història <br> de la dona, va realitzar una col·lecta per ajudar-la.");

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(65, 110, 160));
        jLabel42.setText("Puntuació directa ML1:");

        textHistoriaBprimer.setColumns(20);
        textHistoriaBprimer.setRows(5);
        jScrollPane8.setViewportView(textHistoriaBprimer);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Transcripció record:");

        resetHistoriaB.setText("Reset");
        resetHistoriaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaBActionPerformed(evt);
            }
        });

        jLabel45.setText("(max. 25)");

        jLabel46.setText("(max. 53)");

        jLabel47.setText("<html><b>Nota:</b> <i>Memoria lógica II</i> debe aplicarse transcurridos entre 20 y <br>30 minutos desde la aplicación de <i>Memoria lógica I</i>. ");

        jPanel1.setBackground(new java.awt.Color(38, 79, 131));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(105, 150, 200));
        jLabel44.setText("Puntuació escalar ML1:");

        puntuacioML1.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML1.setText("0");
        puntuacioML1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML1.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(puntuacioML1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(puntuacioML1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        ML1Total.setBackground(new java.awt.Color(255, 255, 255));
        ML1Total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ML1Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ML1Total.setText("0");
        ML1Total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ML1Total.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ML1Total.setOpaque(true);

        historiaBprimerTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaBprimerTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaBprimerTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal.setText("0");
        historiaBprimerTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaBprimerTotal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal.setOpaque(true);

        javax.swing.GroupLayout ML1Panel1Layout = new javax.swing.GroupLayout(ML1Panel1);
        ML1Panel1.setLayout(ML1Panel1Layout);
        ML1Panel1Layout.setHorizontalGroup(
            ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8)
                                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                                .addComponent(jLabel42)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ML1Total, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel46))
                                            .addComponent(jLabel43)
                                            .addComponent(resetHistoriaB)
                                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                                .addComponent(jLabel37)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaBprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel45))
                                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dataMl1))
                                        .addGap(0, 634, Short.MAX_VALUE))))
                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        ML1Panel1Layout.setVerticalGroup(
            ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(jLabel45)
                            .addComponent(historiaBprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(ML1Total, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataMl1)
                .addContainerGap(295, Short.MAX_VALUE))
        );

        ML1Scroll2.setViewportView(ML1Panel1);

        ML1Tab.add(ML1Scroll2, "card2");

        tabbedPanel.addTab("ML1", ML1Tab);

        cogstateTab.setLayout(new java.awt.CardLayout());

        digitsDirectePanel3.setEnabled(false);

        jLabel165.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel165.setText("Cogstate");

        obrePdfBtn.setText("Obre pdf");
        obrePdfBtn.setEnabled(false);
        obrePdfBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrePdfBtnActionPerformed(evt);
            }
        });

        obreExcelBtn.setText("Obre excel");
        obreExcelBtn.setEnabled(false);
        obreExcelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obreExcelBtnActionPerformed(evt);
            }
        });

        jButton18.setText("Importar pdf");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Importar excel");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digitsDirectePanel3Layout = new javax.swing.GroupLayout(digitsDirectePanel3);
        digitsDirectePanel3.setLayout(digitsDirectePanel3Layout);
        digitsDirectePanel3Layout.setHorizontalGroup(
            digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsDirectePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel165)
                    .addGroup(digitsDirectePanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton18)
                            .addComponent(obrePdfBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(obreExcelBtn)
                            .addComponent(jButton19))))
                .addContainerGap(1186, Short.MAX_VALUE))
        );
        digitsDirectePanel3Layout.setVerticalGroup(
            digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsDirectePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel165)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(obrePdfBtn)
                    .addComponent(obreExcelBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(digitsDirectePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton18)
                    .addComponent(jButton19))
                .addContainerGap(727, Short.MAX_VALUE))
        );

        digitsDirecteScroll3.setViewportView(digitsDirectePanel3);

        cogstateTab.add(digitsDirecteScroll3, "card1");

        tabbedPanel.addTab("COGSTATE", cogstateTab);

        ML2Tab.setLayout(new java.awt.CardLayout());

        jLabel109.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel109.setText("<html><center><b>Memoria Lògica II</b>");

        ML2ATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2ATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2ATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2ATable.setRowSelectionAllowed(false);
        ML2ATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2ATable.setSortable(false);
        ML2ATable.setSortsOnUpdates(false);
        jScrollPane10.setViewportView(ML2ATable);
        if (ML2ATable.getColumnModel().getColumnCount() > 0) {
            ML2ATable.getColumnModel().getColumn(0).setResizable(false);
            ML2ATable.getColumnModel().getColumn(1).setResizable(false);
            ML2ATable.getColumnModel().getColumn(3).setResizable(false);
            ML2ATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(65, 110, 160));
        jLabel40.setText("Total Historia A (max 14):");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(65, 110, 160));
        jLabel41.setText("Historia A");

        jLabel2.setText("<html><b>Nota:</b> Memoria lógica II debe aplicarse transcurridos entre 20 y 30 minutos desde la aplicación de Memoria lógica I. ");

        historiaAprimerTotal2.setBackground(new java.awt.Color(255, 255, 255));
        historiaAprimerTotal2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAprimerTotal2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAprimerTotal2.setText("0");
        historiaAprimerTotal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAprimerTotal2.setOpaque(true);

        textHistoriaAprimer2.setColumns(20);
        textHistoriaAprimer2.setRows(5);
        jScrollPane11.setViewportView(textHistoriaAprimer2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Transcripció record:");

        resetHistoriaA1.setText("Reset");
        resetHistoriaA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaA1ActionPerformed(evt);
            }
        });

        jLabel8.setText("La Maria i el Pedro són amics des de fa 30 anys. Cada dimarts queden per esmorzar al bar Cervantes.");

        jLabel9.setText("Després surten junts a passejar pel parc del Retiro.");

        javax.swing.GroupLayout ML2Panel2Layout = new javax.swing.GroupLayout(ML2Panel2);
        ML2Panel2.setLayout(ML2Panel2Layout);
        ML2Panel2Layout.setHorizontalGroup(
            ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane11)
                                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                                .addComponent(jLabel40)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(resetHistoriaA1)
                                            .addComponent(jLabel7))
                                        .addGap(0, 804, Short.MAX_VALUE))))
                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        ML2Panel2Layout.setVerticalGroup(
            ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(historiaAprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaA1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ML2Scroll1.setViewportView(ML2Panel2);

        ML2Tab.add(ML2Scroll1, "card1");

        jLabel110.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel110.setText("<html><center><b>Memoria Lògica II</b>");

        ML2BTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2BTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2BTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2BTable.setRowSelectionAllowed(false);
        ML2BTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2BTable.setSortable(false);
        ML2BTable.setSortsOnUpdates(false);
        jScrollPane13.setViewportView(ML2BTable);
        if (ML2BTable.getColumnModel().getColumnCount() > 0) {
            ML2BTable.getColumnModel().getColumn(0).setResizable(false);
            ML2BTable.getColumnModel().getColumn(1).setResizable(false);
            ML2BTable.getColumnModel().getColumn(3).setResizable(false);
            ML2BTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(65, 110, 160));
        jLabel50.setText("Total Historia B:");

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(65, 110, 160));
        jLabel51.setText("Historia B");

        jLabel52.setText("<html>Elena Pérez, del sud de Madrid, treballadora com a cuinera al menjador d'una escola, va denunciar a la comissaria de <br> policia que havia estat assaltada la nit anterior al carrer Padilla, i que li havien robat 56 euros. Tenia quatre <br> nens petits, no havia pogut pagar el lloguer i portaven dos dies sense menjar. La policia, commoguda per la història <br> de la dona, va realitzar una col·lecta per ajudar-la.");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(65, 110, 160));
        jLabel53.setText("Puntuació directa MLII:");

        textHistoriaBprimer2.setColumns(20);
        textHistoriaBprimer2.setRows(5);
        jScrollPane14.setViewportView(textHistoriaBprimer2);

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel54.setText("Transcripció record:");

        resetHistoriaB1.setText("Reset");
        resetHistoriaB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB1ActionPerformed(evt);
            }
        });

        jLabel55.setText("(max. 25)");

        jLabel56.setText("(max. 39)");

        jPanel2.setBackground(new java.awt.Color(38, 79, 131));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Calcular");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(105, 150, 200));
        jLabel58.setText("Puntuació escalar MLII:");

        puntuacioML2.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML2.setText("0");
        puntuacioML2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML2.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(puntuacioML2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58)
                    .addComponent(puntuacioML2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        ML2Total.setBackground(new java.awt.Color(255, 255, 255));
        ML2Total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ML2Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ML2Total.setText("0");
        ML2Total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ML2Total.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ML2Total.setOpaque(true);

        historiaBprimerTotal2.setBackground(new java.awt.Color(255, 255, 255));
        historiaBprimerTotal2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaBprimerTotal2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal2.setText("0");
        historiaBprimerTotal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaBprimerTotal2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal2.setOpaque(true);

        javax.swing.GroupLayout MLPanel3Layout = new javax.swing.GroupLayout(MLPanel3);
        MLPanel3.setLayout(MLPanel3Layout);
        MLPanel3Layout.setHorizontalGroup(
            MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MLPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane14)
                                    .addGroup(MLPanel3Layout.createSequentialGroup()
                                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel53)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ML2Total, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel56))
                                            .addComponent(jLabel54)
                                            .addComponent(resetHistoriaB1)
                                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel50)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaBprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel55))
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dataMl2))
                                        .addGap(0, 688, Short.MAX_VALUE))))
                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        MLPanel3Layout.setVerticalGroup(
            MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel3Layout.createSequentialGroup()
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(jLabel55)
                            .addComponent(historiaBprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel53)
                            .addComponent(ML2Total, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dataMl2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))
                .addContainerGap())
        );

        ML2Scroll3.setViewportView(MLPanel3);

        ML2Tab.add(ML2Scroll3, "card2");

        jLabel113.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel113.setText("<html><center><b>Memoria Lògica II</b>");

        ML2RecTableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2RecTableA.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2RecTableA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2RecTableA.setRowSelectionAllowed(false);
        ML2RecTableA.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2RecTableA.setSortable(false);
        ML2RecTableA.setSortsOnUpdates(false);
        jScrollPane12.setViewportView(ML2RecTableA);
        if (ML2RecTableA.getColumnModel().getColumnCount() > 0) {
            ML2RecTableA.getColumnModel().getColumn(0).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(1).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(3).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(65, 110, 160));
        jLabel48.setText("Total Reconeixement Historia A:");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(65, 110, 160));
        jLabel49.setText("Historia A");

        totalRecA.setBackground(new java.awt.Color(255, 255, 255));
        totalRecA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRecA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRecA.setText("0");
        totalRecA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRecA.setOpaque(true);

        ML2RecTableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2RecTableB.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2RecTableB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2RecTableB.setRowSelectionAllowed(false);
        ML2RecTableB.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2RecTableB.setSortable(false);
        ML2RecTableB.setSortsOnUpdates(false);
        jScrollPane15.setViewportView(ML2RecTableB);
        if (ML2RecTableB.getColumnModel().getColumnCount() > 0) {
            ML2RecTableB.getColumnModel().getColumn(0).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(1).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(3).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(65, 110, 160));
        jLabel59.setText("Total Reconeixement Historia B:");

        totalRecB.setBackground(new java.awt.Color(255, 255, 255));
        totalRecB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRecB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRecB.setText("0");
        totalRecB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRecB.setOpaque(true);

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(65, 110, 160));
        jLabel61.setText("Historia B");

        jPanel3.setBackground(new java.awt.Color(220, 218, 195));

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(65, 110, 160));
        jLabel60.setText("Puntuació directa ML II-Reconexement");

        totalRec.setBackground(new java.awt.Color(255, 255, 255));
        totalRec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRec.setText("0");
        totalRec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRec.setOpaque(true);

        jLabel4.setText("(Historia A + Historia B)");

        jLabel6.setText("(Màxim = 23)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalRec, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(totalRec, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout ML2Panel4Layout = new javax.swing.GroupLayout(ML2Panel4);
        ML2Panel4.setLayout(ML2Panel4Layout);
        ML2Panel4Layout.setHorizontalGroup(
            ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel4Layout.createSequentialGroup()
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML2Panel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel49))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ML2Panel4Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalRecA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ML2Panel4Layout.createSequentialGroup()
                                .addComponent(jLabel59)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalRecB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel61)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(630, Short.MAX_VALUE))
        );
        ML2Panel4Layout.setVerticalGroup(
            ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ML2Panel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(totalRecA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(totalRecB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        ML2Scroll4.setViewportView(ML2Panel4);

        ML2Tab.add(ML2Scroll4, "card3");

        tabbedPanel.addTab("ML2", ML2Tab);

        BNTTab.setName("BNT"); // NOI18N
        BNTTab.setLayout(new java.awt.CardLayout());

        jLabel111.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel111.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTATable.setRowSelectionAllowed(false);
        BNTATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTATable.setSortable(false);
        BNTATable.setSortsOnUpdates(false);
        jScrollPane16.setViewportView(BNTATable);
        if (BNTATable.getColumnModel().getColumnCount() > 0) {
            BNTATable.getColumnModel().getColumn(0).setResizable(false);
            BNTATable.getColumnModel().getColumn(1).setResizable(false);
            BNTATable.getColumnModel().getColumn(3).setResizable(false);
            BNTATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(65, 110, 160));
        jLabel62.setText("Correctes:");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(65, 110, 160));
        jLabel65.setText("Ajuda semàntica:");

        resetHistoriaB2.setText("Reset");
        resetHistoriaB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB2ActionPerformed(evt);
            }
        });

        jLabel67.setText("(max. 25)");

        jLabel68.setText("(max. 53)");

        semanticaBntA.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntA.setText("0");
        semanticaBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntA.setOpaque(true);

        correctesBntA.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntA.setText("0");
        correctesBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntA.setOpaque(true);

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(65, 110, 160));
        jLabel71.setText("TOTAL:");

        totalBntA.setBackground(new java.awt.Color(255, 255, 255));
        totalBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntA.setText("0");
        totalBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntA.setOpaque(true);

        jPanel7.setBackground(new java.awt.Color(250, 150, 70));

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setText("Calcular");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel81.setText("<html>Percentil<br>range:");

        percentilBNTA.setBackground(new java.awt.Color(255, 255, 255));
        percentilBNTA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilBNTA.setText("0");
        percentilBNTA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilBNTA.setOpaque(true);

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel82.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaBNTA.setBackground(new java.awt.Color(255, 255, 255));
        nssaBNTA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaBNTA.setText("0");
        nssaBNTA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaBNTA.setOpaque(true);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addGap(22, 22, 22)
                .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(percentilBNTA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nssaBNTA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(percentilBNTA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nssaBNTA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MLPanel4Layout = new javax.swing.GroupLayout(MLPanel4);
        MLPanel4.setLayout(MLPanel4Layout);
        MLPanel4Layout.setHorizontalGroup(
            MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel68))
                            .addComponent(resetHistoriaB2)
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel67))
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataBnt1)))
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel4Layout.setVerticalGroup(
            MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel4Layout.createSequentialGroup()
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel62)
                            .addComponent(jLabel67)
                            .addComponent(correctesBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(semanticaBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel68))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(totalBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dataBnt1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE))
                .addContainerGap())
        );

        BNTScroll5.setViewportView(MLPanel4);

        BNTTab.add(BNTScroll5, "card1");

        jLabel112.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel112.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTBTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTBTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTBTable.setRowSelectionAllowed(false);
        BNTBTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTBTable.setSortable(false);
        BNTBTable.setSortsOnUpdates(false);
        jScrollPane17.setViewportView(BNTBTable);
        if (BNTBTable.getColumnModel().getColumnCount() > 0) {
            BNTBTable.getColumnModel().getColumn(0).setResizable(false);
            BNTBTable.getColumnModel().getColumn(1).setResizable(false);
            BNTBTable.getColumnModel().getColumn(3).setResizable(false);
            BNTBTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(65, 110, 160));
        jLabel63.setText("Correctes:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(65, 110, 160));
        jLabel66.setText("Ajuda semàntica:");

        resetHistoriaB3.setText("Reset");
        resetHistoriaB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB3ActionPerformed(evt);
            }
        });

        jLabel69.setText("(max. 25)");

        jLabel72.setText("(max. 53)");

        jPanel5.setBackground(new java.awt.Color(250, 150, 70));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("Calcular");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel73.setText("<html>Percentil<br>range:");

        percentilBNTB.setBackground(new java.awt.Color(255, 255, 255));
        percentilBNTB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilBNTB.setText("0");
        percentilBNTB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilBNTB.setOpaque(true);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel80.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaBNTB.setBackground(new java.awt.Color(255, 255, 255));
        nssaBNTB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaBNTB.setText("0");
        nssaBNTB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaBNTB.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addGap(22, 22, 22)
                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(percentilBNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nssaBNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(percentilBNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nssaBNTB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        semanticaBntB.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntB.setText("0");
        semanticaBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntB.setOpaque(true);

        correctesBntB.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntB.setText("0");
        correctesBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntB.setOpaque(true);

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(65, 110, 160));
        jLabel74.setText("TOTAL:");

        totalBntB.setBackground(new java.awt.Color(255, 255, 255));
        totalBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntB.setText("0");
        totalBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntB.setOpaque(true);

        javax.swing.GroupLayout MLPanel5Layout = new javax.swing.GroupLayout(MLPanel5);
        MLPanel5.setLayout(MLPanel5Layout);
        MLPanel5Layout.setHorizontalGroup(
            MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel66)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel72))
                            .addComponent(resetHistoriaB3)
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel63)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel69))
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataBnt2)))
                    .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel5Layout.setVerticalGroup(
            MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel5Layout.createSequentialGroup()
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(jLabel69)
                            .addComponent(correctesBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(semanticaBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel72))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel74)
                            .addComponent(totalBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB3)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dataBnt2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE))
                .addContainerGap())
        );

        BNTScroll6.setViewportView(MLPanel5);

        BNTTab.add(BNTScroll6, "card2");

        jLabel114.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel114.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTCTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTCTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTCTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTCTable.setRowSelectionAllowed(false);
        BNTCTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTCTable.setSortable(false);
        BNTCTable.setSortsOnUpdates(false);
        jScrollPane18.setViewportView(BNTCTable);
        if (BNTCTable.getColumnModel().getColumnCount() > 0) {
            BNTCTable.getColumnModel().getColumn(0).setResizable(false);
            BNTCTable.getColumnModel().getColumn(1).setResizable(false);
            BNTCTable.getColumnModel().getColumn(3).setResizable(false);
            BNTCTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(65, 110, 160));
        jLabel64.setText("Correctes:");

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(65, 110, 160));
        jLabel75.setText("Ajuda semàntica:");

        resetHistoriaB4.setText("Reset");
        resetHistoriaB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB4ActionPerformed(evt);
            }
        });

        jLabel76.setText("(max. 15)");

        jLabel77.setText("(max. 15)");

        semanticaBntC.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntC.setText("0");
        semanticaBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntC.setOpaque(true);

        correctesBntC.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntC.setText("0");
        correctesBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntC.setOpaque(true);

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(65, 110, 160));
        jLabel79.setText("TOTAL:");

        totalBntC.setBackground(new java.awt.Color(255, 255, 255));
        totalBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntC.setText("0");
        totalBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntC.setOpaque(true);

        jPanel8.setBackground(new java.awt.Color(250, 150, 70));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("Calcular");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel83.setText("<html>Percentil<br>range:");

        percentilBNTC.setBackground(new java.awt.Color(255, 255, 255));
        percentilBNTC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilBNTC.setText("0");
        percentilBNTC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilBNTC.setOpaque(true);

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel84.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaBNTC.setBackground(new java.awt.Color(255, 255, 255));
        nssaBNTC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaBNTC.setText("0");
        nssaBNTC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaBNTC.setOpaque(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(22, 22, 22)
                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(percentilBNTC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nssaBNTC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(percentilBNTC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nssaBNTC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MLPanel6Layout = new javax.swing.GroupLayout(MLPanel6);
        MLPanel6.setLayout(MLPanel6Layout);
        MLPanel6Layout.setHorizontalGroup(
            MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel75)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel77))
                            .addComponent(resetHistoriaB4)
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel76))
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel79)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dataBnt3)))
                    .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel6Layout.setVerticalGroup(
            MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel6Layout.createSequentialGroup()
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(jLabel76)
                            .addComponent(correctesBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel75)
                            .addComponent(semanticaBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel79)
                            .addComponent(totalBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB4)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dataBnt3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE))
                .addContainerGap())
        );

        BNTScroll7.setViewportView(MLPanel6);

        BNTTab.add(BNTScroll7, "card3");

        tabbedPanel.addTab("BNT", BNTTab);

        colorTrailsTab.setLayout(new java.awt.CardLayout());

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Color Trails");

        colorTrailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        colorTrailsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        colorTrailsTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colorTrailsTable.setRowSelectionAllowed(false);
        colorTrailsTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        colorTrailsTable.setSortable(false);
        colorTrailsTable.setSortsOnUpdates(false);
        jScrollPane9.setViewportView(colorTrailsTable);
        if (colorTrailsTable.getColumnModel().getColumnCount() > 0) {
            colorTrailsTable.getColumnModel().getColumn(0).setResizable(false);
            colorTrailsTable.getColumnModel().getColumn(1).setResizable(false);
            colorTrailsTable.getColumnModel().getColumn(3).setResizable(false);
            colorTrailsTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Normative table:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Notes:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        colorTrailsCronoBtn.setText("<html><center>Comença Crono Color Trails 1");
        colorTrailsCronoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorTrailsCronoBtnActionPerformed(evt);
            }
        });

        colorTrailsCronoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colorTrailsCronoLabel.setText("00:00:00");

        jButton3.setText("Marcar data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        dataColor.setText("Data: \"encara no s'ha fet el test\"");

        colorTrailsCronoBtn1.setText("<html><center>Comença Crono Color Trails 2");
        colorTrailsCronoBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorTrailsCronoBtn1ActionPerformed(evt);
            }
        });

        colorTrailsCronoLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        colorTrailsCronoLabel1.setText("00:00:00");

        jButton20.setText("Veure Taula");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digitsDirectePanel1Layout = new javax.swing.GroupLayout(digitsDirectePanel1);
        digitsDirectePanel1.setLayout(digitsDirectePanel1Layout);
        digitsDirectePanel1Layout.setHorizontalGroup(
            digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel17)
                            .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                                        .addComponent(colorTrailsCronoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(colorTrailsCronoLabel))
                                    .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dataColor))
                                    .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                                        .addComponent(colorTrailsCronoBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(colorTrailsCronoLabel1))
                                    .addComponent(jButton20)))))
                    .addComponent(jLabel30))
                .addContainerGap(462, Short.MAX_VALUE))
        );
        digitsDirectePanel1Layout.setVerticalGroup(
            digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsDirectePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(digitsDirectePanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(colorTrailsCronoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(colorTrailsCronoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(colorTrailsCronoBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colorTrailsCronoLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(digitsDirectePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(dataColor))
                        .addGap(18, 18, 18)
                        .addComponent(jButton20))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(413, Short.MAX_VALUE))
        );

        digitsDirecteScroll1.setViewportView(digitsDirectePanel1);

        colorTrailsTab.add(digitsDirecteScroll1, "card1");

        tabbedPanel.addTab("COLOR TRAILS", colorTrailsTab);

        fiveDigitsTab.setLayout(new java.awt.CardLayout());

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setText("Five digit test");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Part 1. Processos Automàtics: LECTURA"));

        jLabel15.setText("1a fila: \"Vull que llegeixi un nombre en cada quadre: un, dos ...\" (... tres, quatre, cinc).");

        jLabel16.setText("2a fila: \"Continuï\" (Repetiu la tasca fins que l'examinat no cometi cap error).");

        jLabel18.setText("\"D'acord, ara comenci aquí dalt i treballi el més de pressa que pugui\" (comenci a cronometrar el temps)");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("<html>1 2 3 4 5<br>5 2 3 1 4");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fiveDigitStart1.setText("<html><center>Comença Crono<br>Lectura");
        fiveDigitStart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveDigitStart1ActionPerformed(evt);
            }
        });

        jButton5.setText("Marcar Temps");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton10.setText("Parar Crono");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("1 4 3 2 5");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("4 3 1 5 2");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("5 4 2 3 1");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("2 5 1 4 3");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel24.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("1 3 2 5 4");
        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("3 5 4 1 2");
        jLabel26.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("1 4 3 2 5");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel27.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("4 1 5 3 2");
        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel28.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel57.setText("5 2 1 4 3");
        jLabel57.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel57.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel70.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel70.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel70.setText("2 5 3 1 4");
        jLabel70.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel70.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel20.setText("Temps:");

        jLabel78.setText("Temps:");

        temps1.setText("00:00:00");

        temps2.setText("00:00:00");

        jLabel95.setText("Errors:");

        jLabel96.setText("Errors:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fiveDigitStart1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps1))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel70, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel78)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps2)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel95)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel96)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(fiveDigitStart1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel20)
                    .addComponent(temps1)
                    .addComponent(jLabel95)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel57)
                    .addComponent(jLabel70)
                    .addComponent(jLabel78)
                    .addComponent(temps2)
                    .addComponent(jLabel96)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(671, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(527, Short.MAX_VALUE))
        );

        fiveDigitsScroll.setViewportView(Panel);

        fiveDigitsTab.add(fiveDigitsScroll, "card1");

        jLabel93.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel93.setText("Five digit test");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Part 2. Processos Automàtics: COMPTEIG"));

        jLabel94.setText("1a fila: \"Vull que compti un nombre en cada quadre: un, dos ...\" (... tres, quatre, cinc).");

        jLabel97.setText("2a fila: \"Continuï\" (Repetiu la tasca fins que l'examinat no cometi cap error).");

        jLabel98.setText("\"D'acord, ara comenci aquí dalt i treballi el més de pressa que pugui\" (comenci a cronometrar el temps)");

        jLabel99.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel99.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel99.setText("<html>1 2 3 4 5<br>5 2 3 1 4");
        jLabel99.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel99.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fiveDigitStart2.setText("<html><center>Comença Crono<br>Compteig");
        fiveDigitStart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveDigitStart2ActionPerformed(evt);
            }
        });

        jButton11.setText("Marcar Temps");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Parar Crono");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel100.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel100.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel100.setText("1 4 3 2 5");
        jLabel100.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel100.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel101.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel101.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel101.setText("4 3 1 5 2");
        jLabel101.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel101.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel102.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel102.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel102.setText("5 4 2 3 1");
        jLabel102.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel102.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel103.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel103.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel103.setText("2 5 1 4 3");
        jLabel103.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel103.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel104.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel104.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel104.setText("1 3 2 5 4");
        jLabel104.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel104.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel105.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel105.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel105.setText("3 5 4 1 2");
        jLabel105.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel105.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel108.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel108.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel108.setText("1 4 3 2 5");
        jLabel108.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel108.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel115.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel115.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel115.setText("4 1 5 3 2");
        jLabel115.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel115.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel116.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel116.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel116.setText("5 2 1 4 3");
        jLabel116.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel116.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel117.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel117.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel117.setText("2 5 3 1 4");
        jLabel117.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel117.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel118.setText("Temps:");

        jLabel119.setText("Temps:");

        temps3.setText("00:00:00");

        temps4.setText("00:00:00");

        jLabel120.setText("Errors:");

        jLabel121.setText("Errors:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel97)
                    .addComponent(jLabel94)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fiveDigitStart2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel98)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel100, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel101, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel102, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel103, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel104, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel118)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps3))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel105, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel108, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel115, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel116, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel117, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel119)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps4)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel120)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel121)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel94)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel97)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel99, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel98)
                    .addComponent(fiveDigitStart2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jLabel100)
                    .addComponent(jLabel101)
                    .addComponent(jLabel102)
                    .addComponent(jLabel103)
                    .addComponent(jLabel104)
                    .addComponent(jLabel118)
                    .addComponent(temps3)
                    .addComponent(jLabel120)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jLabel105)
                    .addComponent(jLabel108)
                    .addComponent(jLabel115)
                    .addComponent(jLabel116)
                    .addComponent(jLabel117)
                    .addComponent(jLabel119)
                    .addComponent(temps4)
                    .addComponent(jLabel121)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel93)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(671, Short.MAX_VALUE))
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel93)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(527, Short.MAX_VALUE))
        );

        fiveDigitsScroll1.setViewportView(Panel1);

        fiveDigitsTab.add(fiveDigitsScroll1, "card2");

        jLabel122.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel122.setText("Five digit test");

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Part 3. Processos Automàtics: ELECCIÓ"));

        jLabel123.setText("<html>1a fila: \"Ara vull que compti quants números hi ha en cada quadre. <br> Recordi que ha de comptar els nombres en lloc de llegir-los: un, dos, tres ... \"(quatre, cinc).");

        jLabel124.setText("2a fila: \"Continuï\" (Repetiu la tasca fins que l'examinat no cometi cap error).");

        jLabel125.setText("\"D'acord, ara comenci aquí dalt i treballi el més de pressa que pugui\" (comenci a cronometrar el temps)");

        jLabel126.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel126.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel126.setText("<html>1 2 3 4 5<br>5 2 3 1 4");
        jLabel126.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel126.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fiveDigitStart3.setText("<html><center>Comença Crono<br>Elecció");
        fiveDigitStart3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveDigitStart3ActionPerformed(evt);
            }
        });

        jButton13.setText("Marcar Temps");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Parar Crono");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel127.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel127.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel127.setText("1 4 3 2 5");
        jLabel127.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel127.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel128.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel128.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel128.setText("4 3 1 5 2");
        jLabel128.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel128.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel129.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel129.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel129.setText("5 4 2 3 1");
        jLabel129.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel129.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel130.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel130.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel130.setText("2 5 1 4 3");
        jLabel130.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel130.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel131.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel131.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel131.setText("1 3 2 5 4");
        jLabel131.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel131.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel132.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel132.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel132.setText("3 5 4 1 2");
        jLabel132.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel132.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel133.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel133.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel133.setText("1 4 3 2 5");
        jLabel133.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel133.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel134.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel134.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel134.setText("4 1 5 3 2");
        jLabel134.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel134.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel135.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel135.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel135.setText("5 2 1 4 3");
        jLabel135.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel135.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel136.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel136.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel136.setText("2 5 3 1 4");
        jLabel136.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel136.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel137.setText("Temps:");

        jLabel138.setText("Temps:");

        temps5.setText("00:00:00");

        temps6.setText("00:00:00");

        jLabel139.setText("Errors:");

        jLabel140.setText("Errors:");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel124)
                    .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fiveDigitStart3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel125)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel127, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel128, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel129, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel130, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel131, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel137)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps5))
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel132, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel133, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel134, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel135, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel136, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel138)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps6)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel139)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel140)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel123, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel124)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel126, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel125)
                    .addComponent(fiveDigitStart3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jLabel127)
                    .addComponent(jLabel128)
                    .addComponent(jLabel129)
                    .addComponent(jLabel130)
                    .addComponent(jLabel131)
                    .addComponent(jLabel137)
                    .addComponent(temps5)
                    .addComponent(jLabel139)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jLabel132)
                    .addComponent(jLabel133)
                    .addComponent(jLabel134)
                    .addComponent(jLabel135)
                    .addComponent(jLabel136)
                    .addComponent(jLabel138)
                    .addComponent(temps6)
                    .addComponent(jLabel140)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Panel2Layout = new javax.swing.GroupLayout(Panel2);
        Panel2.setLayout(Panel2Layout);
        Panel2Layout.setHorizontalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel122)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(671, Short.MAX_VALUE))
        );
        Panel2Layout.setVerticalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel122)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(513, Short.MAX_VALUE))
        );

        fiveDigitsScroll2.setViewportView(Panel2);

        fiveDigitsTab.add(fiveDigitsScroll2, "card3");

        jLabel141.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel141.setText("Five digit test");

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Part 1. Processos Automàtics: ALTERNANÇA"));

        jLabel142.setText("<html>1a fila: \"Ara ha de comptar els números com ha fet abans, però quan arribi a un quadre amb la vora més gruixuda (assenyalar) <br> ha de canviar la regla i llegir el número: un, dos, tres ...\" (quatre, cinc).");

        jLabel143.setText("2a fila: \"Continuï\" (Repetiu la tasca fins que l'examinat no cometi cap error).");

        jLabel144.setText("\"D'acord, ara comenci aquí dalt i treballi el més de pressa que pugui\" (comenci a cronometrar el temps)");

        jLabel145.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel145.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel145.setText("<html>1 2 3 4 5<br>5 2 3 1 4");
        jLabel145.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel145.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fiveDigitStart4.setText("<html><center>Comença Crono<br>Alternança");
        fiveDigitStart4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveDigitStart4ActionPerformed(evt);
            }
        });

        jButton15.setText("Marcar Temps");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Parar Crono");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jLabel146.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel146.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel146.setText("1 4 3 2 5");
        jLabel146.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel146.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel147.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel147.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel147.setText("4 3 1 5 2");
        jLabel147.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel147.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel148.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel148.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel148.setText("5 4 2 3 1");
        jLabel148.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel148.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel149.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel149.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel149.setText("2 5 1 4 3");
        jLabel149.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel149.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel150.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel150.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel150.setText("1 3 2 5 4");
        jLabel150.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel150.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel151.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel151.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel151.setText("3 5 4 1 2");
        jLabel151.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel151.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel152.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel152.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel152.setText("1 4 3 2 5");
        jLabel152.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel152.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel153.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel153.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel153.setText("4 1 5 3 2");
        jLabel153.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel153.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel154.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel154.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel154.setText("5 2 1 4 3");
        jLabel154.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel154.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel155.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel155.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel155.setText("2 5 3 1 4");
        jLabel155.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel155.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel156.setText("Temps:");

        jLabel157.setText("Temps:");

        temps7.setText("00:00:00");

        temps8.setText("00:00:00");

        jLabel158.setText("Errors:");

        jLabel159.setText("Errors:");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel143)
                    .addComponent(jLabel142, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel145, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fiveDigitStart4, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel144)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel146, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel147, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel148, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel149, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel150, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel156)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps7))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel151, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel152, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel153, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel154, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel155, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel157)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(temps8)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel158)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel14Layout.createSequentialGroup()
                                        .addComponent(jLabel159)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel142, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel143)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel145, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel144)
                    .addComponent(fiveDigitStart4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton15)
                    .addComponent(jLabel146)
                    .addComponent(jLabel147)
                    .addComponent(jLabel148)
                    .addComponent(jLabel149)
                    .addComponent(jLabel150)
                    .addComponent(jLabel156)
                    .addComponent(temps7)
                    .addComponent(jLabel158)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jLabel151)
                    .addComponent(jLabel152)
                    .addComponent(jLabel153)
                    .addComponent(jLabel154)
                    .addComponent(jLabel155)
                    .addComponent(jLabel157)
                    .addComponent(temps8)
                    .addComponent(jLabel159)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Panel3Layout = new javax.swing.GroupLayout(Panel3);
        Panel3.setLayout(Panel3Layout);
        Panel3Layout.setHorizontalGroup(
            Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel141)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(671, Short.MAX_VALUE))
        );
        Panel3Layout.setVerticalGroup(
            Panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel141)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(513, Short.MAX_VALUE))
        );

        fiveDigitsScroll3.setViewportView(Panel3);

        fiveDigitsTab.add(fiveDigitsScroll3, "card4");

        jLabel160.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel160.setText("RESUM DE PUNTUACIONS");

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Processos Automàtics"));

        jLabel161.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel161.setText("Lectura:");

        jLabel162.setText("Temps:");

        jLabel163.setText("Errors:");

        lecturaTemps.setText("00:00:00");

        jLabel166.setText("PC:");

        jLabel167.setText("PC:");

        lecturaTempsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lecturaTempsPC.setText("0");

        lecturaErrorsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lecturaErrorsPC.setText("0");

        jLabel170.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel170.setText("Compteig:");

        jLabel171.setText("Temps:");

        jLabel172.setText("PC:");

        compteigTemps.setText("00:00:00");

        compteigTempsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        compteigTempsPC.setText("0");

        compteigErrorsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        compteigErrorsPC.setText("0");

        jLabel176.setText("PC:");

        jLabel177.setText("Errors:");

        jLabel179.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel179.setText("Elecció:");

        jLabel180.setText("Temps:");

        jLabel181.setText("PC:");

        eleccioTemps.setText("00:00:00");

        eleccioTempsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        eleccioTempsPC.setText("0");

        eleccioErrorsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        eleccioErrorsPC.setText("0");

        jLabel185.setText("PC:");

        jLabel186.setText("Errors:");

        jLabel188.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel188.setText("Alternança:");

        jLabel189.setText("Temps:");

        jLabel190.setText("PC:");

        alternTemps.setText("00:00:00");

        alternTempsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        alternTempsPC.setText("0");

        alternErrorsPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        alternErrorsPC.setText("0");

        jLabel194.setText("PC:");

        jLabel195.setText("Errors:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel161)
                            .addComponent(jLabel170)
                            .addComponent(jLabel179)
                            .addComponent(jLabel188))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel195)
                                    .addComponent(jLabel189))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(alternTemps)
                                    .addComponent(alternErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel194)
                                    .addComponent(jLabel190))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(alternTempsPC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(alternErrorsPC))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(alternTempsPCField, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                    .addComponent(alternErrorsPCField)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel186)
                                    .addComponent(jLabel180))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eleccioTemps)
                                    .addComponent(eleccioErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(jLabel185)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(eleccioErrorsPC))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(jLabel181)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(eleccioTempsPC)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(eleccioTempsPCField, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                                    .addComponent(eleccioErrorsPCField))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel163)
                                    .addComponent(jLabel162))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lecturaTemps)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel167)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lecturaTempsPC))
                                    .addGroup(jPanel15Layout.createSequentialGroup()
                                        .addComponent(lecturaErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel166)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lecturaErrorsPC)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lecturaErrorsPCField)
                                    .addComponent(lecturaTempsPCField, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel177)
                                    .addComponent(jLabel171))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(compteigTemps)
                                    .addComponent(compteigErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel176)
                                    .addComponent(jLabel172))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(compteigTempsPC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(compteigErrorsPC))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(compteigTempsPCField)
                                    .addComponent(compteigErrorsPCField))))))
                .addGap(4, 4, 4))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel161)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel162)
                        .addComponent(lecturaTemps))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lecturaTempsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lecturaTempsPC)
                            .addComponent(jLabel167))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lecturaErrorsPC)
                            .addComponent(lecturaErrorsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel166)
                            .addComponent(jLabel163)
                            .addComponent(lecturaErrors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel170)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel171)
                        .addComponent(compteigTemps)
                        .addComponent(jLabel172))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(compteigTempsPC)
                            .addComponent(compteigTempsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(compteigErrorsPC)
                            .addComponent(compteigErrorsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel176)
                            .addComponent(compteigErrors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel177))))
                .addGap(18, 18, 18)
                .addComponent(jLabel179)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eleccioTempsPC)
                    .addComponent(eleccioTempsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel181)
                    .addComponent(eleccioTemps)
                    .addComponent(jLabel180))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eleccioErrorsPC)
                    .addComponent(eleccioErrorsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel185)
                    .addComponent(jLabel186)
                    .addComponent(eleccioErrors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel188)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel190)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel189)
                                .addComponent(alternTemps))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel195)
                                    .addComponent(alternErrors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel15Layout.createSequentialGroup()
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(alternTempsPC)
                                .addComponent(alternTempsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(alternErrorsPC)
                                .addComponent(alternErrorsPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel194)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inhibició", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel198.setText("Temps d'elecció:");

        jLabel199.setText("Temps de lectura:");

        eleccioTemps2.setText("0");

        lecturaTemps2.setText("0");

        jLabel233.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel233.setText("-");

        jLabel202.setText("PD inhibició:");

        inhibicioPD.setText("0");

        inhibicioPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        inhibicioPC.setText("0");

        jLabel205.setText("PC:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel205)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inhibicioPC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inhibicioPCField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel199)
                                    .addComponent(jLabel198)
                                    .addComponent(jLabel202))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel16Layout.createSequentialGroup()
                                            .addComponent(jLabel233)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lecturaTemps2))
                                        .addComponent(eleccioTemps2))
                                    .addComponent(inhibicioPD))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(eleccioTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lecturaTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inhibicioPDField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel198)
                    .addComponent(eleccioTemps2)
                    .addComponent(eleccioTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel199)
                    .addComponent(lecturaTemps2)
                    .addComponent(jLabel233)
                    .addComponent(lecturaTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel202)
                    .addComponent(inhibicioPD)
                    .addComponent(inhibicioPDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel205)
                    .addComponent(inhibicioPC)
                    .addComponent(inhibicioPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flexibilitat", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel206.setText("Temps de compteig:");

        alternanTemps2.setText("0");

        compteigTemps2.setText("0");

        jLabel234.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel234.setText("-");

        jLabel210.setText("PD flexibilitat:");

        flexibilitatPD.setText("0");

        flexibilitatPC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        flexibilitatPC.setText("0");

        jLabel213.setText("PC:");

        jLabel207.setText("Temps d'alternança:");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel213)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(flexibilitatPC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(flexibilitatPCField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel17Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel206)
                                            .addComponent(jLabel210)))
                                    .addComponent(jLabel207))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel17Layout.createSequentialGroup()
                                            .addComponent(jLabel234)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(compteigTemps2))
                                        .addComponent(alternanTemps2))
                                    .addComponent(flexibilitatPD))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(alternanTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(compteigTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(flexibilitatPDField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alternanTemps2)
                    .addComponent(jLabel207)
                    .addComponent(alternanTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compteigTemps2)
                    .addComponent(jLabel234)
                    .addComponent(jLabel206)
                    .addComponent(compteigTemps2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel210)
                    .addComponent(flexibilitatPD)
                    .addComponent(flexibilitatPDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel213)
                    .addComponent(flexibilitatPC)
                    .addComponent(flexibilitatPCField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        calculPercentilsFiveDigit.setText("Marcar data");
        calculPercentilsFiveDigit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculPercentilsFiveDigitActionPerformed(evt);
            }
        });

        jButton22.setText("Veure taula");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel4Layout = new javax.swing.GroupLayout(Panel4);
        Panel4.setLayout(Panel4Layout);
        Panel4Layout.setHorizontalGroup(
            Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel160)
                    .addGroup(Panel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Panel4Layout.createSequentialGroup()
                                .addComponent(calculPercentilsFiveDigit)
                                .addGap(18, 18, 18)
                                .addComponent(dataFive))
                            .addGroup(Panel4Layout.createSequentialGroup()
                                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton22))))
                .addContainerGap(972, Short.MAX_VALUE))
        );
        Panel4Layout.setVerticalGroup(
            Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel160)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel4Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculPercentilsFiveDigit)
                    .addComponent(dataFive))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton22)
                .addContainerGap(352, Short.MAX_VALUE))
        );

        fiveDigitsScroll4.setViewportView(Panel4);

        fiveDigitsTab.add(fiveDigitsScroll4, "card5");

        tabbedPanel.addTab("FIVE DIGIT", fiveDigitsTab);

        colorTrailsTab1.setLayout(new java.awt.CardLayout());

        jLabel164.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel164.setText("Fluència verbal");

        fluenciaVerbalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fluenciaVerbalTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fluenciaVerbalTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        fluenciaVerbalTable.setRowSelectionAllowed(false);
        fluenciaVerbalTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        fluenciaVerbalTable.setSortable(false);
        fluenciaVerbalTable.setSortsOnUpdates(false);
        jScrollPane19.setViewportView(fluenciaVerbalTable);
        if (fluenciaVerbalTable.getColumnModel().getColumnCount() > 0) {
            fluenciaVerbalTable.getColumnModel().getColumn(0).setResizable(false);
            fluenciaVerbalTable.getColumnModel().getColumn(1).setResizable(false);
            fluenciaVerbalTable.getColumnModel().getColumn(3).setResizable(false);
            fluenciaVerbalTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton17.setText("Marcar data");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        dataFluencia.setText("Data: Encara no s'ha realitzat el test");

        jButton21.setText("Veure Taula");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout digitsDirectePanel2Layout = new javax.swing.GroupLayout(digitsDirectePanel2);
        digitsDirectePanel2.setLayout(digitsDirectePanel2Layout);
        digitsDirectePanel2Layout.setHorizontalGroup(
            digitsDirectePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsDirectePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsDirectePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(digitsDirectePanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(digitsDirectePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton17)
                            .addComponent(dataFluencia)
                            .addComponent(jButton21)))
                    .addComponent(jLabel164))
                .addContainerGap(830, Short.MAX_VALUE))
        );
        digitsDirectePanel2Layout.setVerticalGroup(
            digitsDirectePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsDirectePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel164)
                .addGap(18, 18, 18)
                .addGroup(digitsDirectePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                    .addGroup(digitsDirectePanel2Layout.createSequentialGroup()
                        .addComponent(jButton17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataFluencia)
                        .addGap(18, 18, 18)
                        .addComponent(jButton21)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        digitsDirecteScroll2.setViewportView(digitsDirectePanel2);

        colorTrailsTab1.add(digitsDirecteScroll2, "card1");

        tabbedPanel.addTab("FLUÈNCIA VERBAL", colorTrailsTab1);

        dataPanel.add(tabbedPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.add(dataPanel, java.awt.BorderLayout.CENTER);

        acceptaBtn.setText("Accepta");
        acceptaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptaBtnActionPerformed(evt);
            }
        });

        cancelaBtn.setText("Cancel·la");
        cancelaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelaBtnActionPerformed(evt);
            }
        });

        anteriorBtn.setText("Anterior");
        anteriorBtn.setEnabled(false);
        anteriorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorBtnActionPerformed(evt);
            }
        });

        seguentBtn.setText("Següent");
        seguentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguentBtnActionPerformed(evt);
            }
        });

        paginaLabel.setText("1");

        paginaLabel2.setText("/ 10");

        sepBottom.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anteriorBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(seguentBtn)
                .addGap(18, 18, 18)
                .addComponent(paginaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paginaLabel2)
                .addGap(18, 18, 18)
                .addComponent(sepBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1006, Short.MAX_VALUE)
                .addComponent(acceptaBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelaBtn)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceptaBtn)
                            .addComponent(cancelaBtn)
                            .addComponent(anteriorBtn)
                            .addComponent(seguentBtn)
                            .addComponent(paginaLabel)
                            .addComponent(paginaLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sepBottom))
                .addContainerGap())
        );

        mainPanel.add(buttonPanel, java.awt.BorderLayout.SOUTH);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptaBtnActionPerformed
        Utils.guardar(dataPanel,pacientActual.getId(), "Sessio1_T"+valoracio );
        this.guardarResultats();
        Utils.generaResultatsCSV(pacientActual.getId());
        ((MenuAvaluador)parent).checkCsv();
        this.dispose();
    }//GEN-LAST:event_acceptaBtnActionPerformed

    private void cancelaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelaBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelaBtnActionPerformed

    private void anteriorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorBtnActionPerformed
        if (timer.isRunning())
            timer.stop();
        JPanel currentPanel = (JPanel) tabbedPanel.getSelectedComponent();
        CardLayout card = (CardLayout)currentPanel.getLayout();
        pagina--;
        paginaLabel.setText((pagina+1)+"");
        card.show(currentPanel, "card"+(pagina+1));
        
        if (pagina == 0){
            anteriorBtn.setEnabled(false);
            seguentBtn.setEnabled(true);
        }
        else if (pagina == numPaginesTotal-2){
            seguentBtn.setEnabled(true);
        }
    }//GEN-LAST:event_anteriorBtnActionPerformed

    private void seguentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguentBtnActionPerformed
        if (timer.isRunning())
            timer.stop();
        JPanel currentPanel = (JPanel) tabbedPanel.getSelectedComponent();
        CardLayout card = (CardLayout)currentPanel.getLayout();
        pagina++;
        paginaLabel.setText((pagina+1)+"");
        card.show(currentPanel, "card"+(pagina+1));
        if (pagina == numPaginesTotal-1){
            seguentBtn.setEnabled(false);
            anteriorBtn.setEnabled(true);
        }
        else if (pagina == 1){
            anteriorBtn.setEnabled(true);
        }
    }//GEN-LAST:event_seguentBtnActionPerformed

    private void resetHistoriaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaAActionPerformed
        for (int i = 0; i<this.ML1ATable.getRowCount(); i++){
            ML1ATable.setValueAt("0", i, 3);
            ML1ATable.setValueAt("0", i, 4);
        }
        ML1Total.setText(historiaBprimerTotal.getText());
        textHistoriaAprimer.setText("");
        textHistoriaAsegon.setText("");
        this.historiaAprimerTotal.setText("0");
        this.historiaAsegonTotal.setText("0");
    }//GEN-LAST:event_resetHistoriaAActionPerformed

    private void resetHistoriaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaBActionPerformed
        for (int i = 0; i<this.ML1BTable.getRowCount(); i++){
            ML1BTable.setValueAt("0", i, 3);
        }
        textHistoriaBprimer.setText("");
        ML1Total.setText(textHistoriaAprimer.getText());
    }//GEN-LAST:event_resetHistoriaBActionPerformed

    private void resetHistoriaA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaA1ActionPerformed
        for (int i = 0; i<this.ML2ATable.getRowCount(); i++){
            ML2ATable.setValueAt("0", i, 3);
        }
        ML2Total.setText(historiaBprimerTotal2.getText());
        textHistoriaAprimer2.setText("");
        historiaAprimerTotal2.setText("0");
    }//GEN-LAST:event_resetHistoriaA1ActionPerformed

    private void resetHistoriaB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB1ActionPerformed
        for (int i = 0; i<this.ML2BTable.getRowCount(); i++){
            ML2BTable.setValueAt("0", i, 3);
        }
        textHistoriaBprimer2.setText("");
        historiaBprimerTotal2.setText("0");
        ML2Total.setText(historiaAprimerTotal2.getText());
    }//GEN-LAST:event_resetHistoriaB1ActionPerformed

    private void resetHistoriaB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB2ActionPerformed
        for (int i = 0; i<this.BNTATable.getRowCount(); i++){
            BNTATable.setValueAt("0", i, 2);
            BNTATable.setValueAt("0", i, 3);
        }
        percentilBNTA.setText("0");
        nssaBNTA.setText("0");
        this.correctesBntA.setText("0");
        this.semanticaBntA.setText("0");
        this.totalBntA.setText("0");
    }//GEN-LAST:event_resetHistoriaB2ActionPerformed

    private void resetHistoriaB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB3ActionPerformed
        for (int i = 0; i<this.BNTBTable.getRowCount(); i++){
            BNTBTable.setValueAt("0", i, 2);
            BNTBTable.setValueAt("0", i, 3);
        }
        percentilBNTB.setText("0");
        nssaBNTB.setText("0");
        this.correctesBntB.setText("0");
        this.semanticaBntB.setText("0");
        this.totalBntB.setText("0");
    }//GEN-LAST:event_resetHistoriaB3ActionPerformed

    private void resetHistoriaB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB4ActionPerformed
        for (int i = 0; i<this.BNTCTable.getRowCount(); i++){
            BNTCTable.setValueAt("0", i, 2);
            BNTCTable.setValueAt("0", i, 3);
        }
        percentilBNTC.setText("0");
        nssaBNTC.setText("0");
        this.correctesBntC.setText("0");
        this.semanticaBntC.setText("0");
        this.totalBntC.setText("0");
    }//GEN-LAST:event_resetHistoriaB4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
          calcularDigits(true);
          DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataDD.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        calcularDigits(false);
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataDI.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (timer.isRunning()){
            temps1.setText(this.fiveDigitStart1.getText());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (timer.isRunning()){
            temps2.setText(this.fiveDigitStart1.getText());
            timer.stop();
            fiveDigitStart1.setText("<html><center>Comença Crono<br>Lectura");
            lecturaTemps.setText(this.temps2.getText());
            fiveDigitStart1.setEnabled(true);
        }else {
            fiveDigitStart1.setText("<html><center>Comença Crono<br>Lectura");
            fiveDigitStart1.setEnabled(true);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void fiveDigitStart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveDigitStart1ActionPerformed
        temps1.setText("00:00.00");
        temps2.setText("00:00.00");
        startTime = System.currentTimeMillis();
        timer.start();
        fiveDigitStart1.setEnabled(false);
    }//GEN-LAST:event_fiveDigitStart1ActionPerformed

    private void fiveDigitStart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveDigitStart2ActionPerformed
        temps3.setText("00:00.00");
        temps4.setText("00:00.00");
        startTime = System.currentTimeMillis();
        timer.start();
        fiveDigitStart2.setEnabled(false);
    }//GEN-LAST:event_fiveDigitStart2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (timer.isRunning()){
            temps3.setText(this.fiveDigitStart2.getText());
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (timer.isRunning()){
            temps4.setText(this.fiveDigitStart2.getText());
            timer.stop();
            fiveDigitStart2.setText("<html><center>Comença Crono<br>Lectura");
            compteigTemps.setText(this.temps4.getText());
            fiveDigitStart2.setEnabled(true);
        }else {
            fiveDigitStart2.setText("<html><center>Comença Crono<br>Lectura");
            fiveDigitStart2.setEnabled(true);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void fiveDigitStart3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveDigitStart3ActionPerformed
        temps5.setText("00:00.00");
        temps6.setText("00:00.00");
        startTime = System.currentTimeMillis();
        timer.start();
        fiveDigitStart3.setEnabled(false);
    }//GEN-LAST:event_fiveDigitStart3ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (timer.isRunning()){
            temps5.setText(this.fiveDigitStart3.getText());
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (timer.isRunning()){
            temps6.setText(this.fiveDigitStart3.getText());
            timer.stop();
            fiveDigitStart3.setText("<html><center>Comença Crono<br>Lectura");
            eleccioTemps.setText(this.temps6.getText());
            fiveDigitStart3.setEnabled(true);
        }else {
            fiveDigitStart3.setText("<html><center>Comença Crono<br>Lectura");
            fiveDigitStart3.setEnabled(true);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void fiveDigitStart4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveDigitStart4ActionPerformed
        temps7.setText("00:00.00");
        temps8.setText("00:00.00");
        startTime = System.currentTimeMillis();
        timer.start();
        fiveDigitStart4.setEnabled(false);
    }//GEN-LAST:event_fiveDigitStart4ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        if (timer.isRunning()){
            temps7.setText(this.fiveDigitStart4.getText());
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (timer.isRunning()){
            temps8.setText(this.fiveDigitStart4.getText());
            timer.stop();
            fiveDigitStart4.setText("<html><center>Comença Crono<br>Lectura");
            this.alternTemps.setText(this.temps8.getText());
            fiveDigitStart4.setEnabled(true);
        }else {
            fiveDigitStart4.setText("<html><center>Comença Crono<br>Lectura");
            fiveDigitStart4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void resetDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetDDActionPerformed
        
    }//GEN-LAST:event_resetDDActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        calcularBNTC();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataBnt3.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        calcularBNTB();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataBnt2.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        calcularBNTA();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataBnt1.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int MLI = calculaMLI(Integer.parseInt(ML1Total.getText()));
        puntuacioML1.setText(MLI+"");
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataMl1.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int MLII = calculaMLII(Integer.parseInt(ML2Total.getText()));
        puntuacioML2.setText(MLII+"");
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataMl2.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        FileDialog fd = new FileDialog(this, "Esculli un arxiu", FileDialog.LOAD);
        fd.setDirectory(System.getProperty("user.home"));
        fd.setFile("*.pdf");
        fd.setVisible(true);
        String filename = fd.getFile();
        String dir=fd.getDirectory();
        if (filename != null){
            try {
                File f = new File(Utils.PACIENT_DATA_PATH+pacientActual.getId()+File.separator);
                if (!f.exists()){
                    f.mkdir();
                }
                Files.copy(Paths.get(dir+filename), Paths.get(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE.pdf"), StandardCopyOption.REPLACE_EXISTING);
                
            } catch (IOException ex) {
                Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                obrePdfBtn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void obrePdfBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrePdfBtnActionPerformed
        File file = new File(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE_T"+valoracio+".pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_obrePdfBtnActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        FileDialog fd = new FileDialog(this, "Esculli un arxiu", FileDialog.LOAD);
        fd.setDirectory(System.getProperty("user.home"));
        fd.setFile("*.xlsx");
        fd.setVisible(true);
        String filename = fd.getFile();
        String dir=fd.getDirectory();
        if (filename != null){
            try {
                File f = new File(Utils.PACIENT_DATA_PATH+pacientActual.getId()+File.separator);
                if (!f.exists()){
                    f.mkdir();
                }
                Files.copy(Paths.get(dir+filename), Paths.get(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE_T"+valoracio+".xlsx"), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ex) {
                Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
                obreExcelBtn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void obreExcelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obreExcelBtnActionPerformed
        File file = new File(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE_T"+valoracio+".xlsx");
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_obreExcelBtnActionPerformed

    private void colorTrailsCronoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorTrailsCronoBtnActionPerformed
        if (timerColor.isRunning()){
            timerColor.stop();
            colorTrailsCronoBtn.setText("Comença crono Color Trails 1");
            this.colorTrailsTable.setValueAt(secondsColor1+"", 0, 1);
            colorTrailsCronoLabel.setText("");
        } else {
            this.secondsColor1 = 0;
            startTime = System.currentTimeMillis();
            this.timerColor.start();
            colorTrailsCronoBtn.setText("Marcar crono");
        }
    }//GEN-LAST:event_colorTrailsCronoBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataColor.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void calculPercentilsFiveDigitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculPercentilsFiveDigitActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataFive.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_calculPercentilsFiveDigitActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        dataFluencia.setText("Data del test: "+dateFormat.format(date));
    }//GEN-LAST:event_jButton17ActionPerformed

    private void colorTrailsCronoBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorTrailsCronoBtn1ActionPerformed
        if (timerColor2.isRunning()){
            timerColor2.stop();
            colorTrailsCronoBtn1.setText("Comença crono Color Trails 2");
            this.colorTrailsTable.setValueAt(secondsColor2+"", 4, 1);
            colorTrailsCronoLabel1.setText("");
        } else {
            this.secondsColor2 = 0;
            startTime = System.currentTimeMillis();
            this.timerColor2.start();
            colorTrailsCronoBtn1.setText("Marcar crono");
        }
    }//GEN-LAST:event_colorTrailsCronoBtn1ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        File file = new File(Utils.RES_PATH+"ColorTrails.pdf");
        if (file.exists()){
            try {
                Desktop.getDesktop().open(file);
            } catch (IOException ex) {
                Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        File file = new File(Utils.RES_PATH+"FluenciaVerbal.pdf");
        if (file.exists()){
            try {
                Desktop.getDesktop().open(file);
            } catch (IOException ex) {
                Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        File file = new File(Utils.RES_PATH+"FiveDigit.pdf");
        if (file.exists()){
            try {
                Desktop.getDesktop().open(file);
            } catch (IOException ex) {
                Logger.getLogger(Sessio1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sessio1(null,null, "").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTable BNTATable;
    private org.jdesktop.swingx.JXTable BNTBTable;
    private org.jdesktop.swingx.JXTable BNTCTable;
    private javax.swing.JScrollPane BNTScroll5;
    private javax.swing.JScrollPane BNTScroll6;
    private javax.swing.JScrollPane BNTScroll7;
    private javax.swing.JPanel BNTTab;
    private org.jdesktop.swingx.JXTable ML1ATable;
    private org.jdesktop.swingx.JXTable ML1BTable;
    private javax.swing.JPanel ML1Panel;
    private javax.swing.JPanel ML1Panel1;
    private javax.swing.JScrollPane ML1Scroll;
    private javax.swing.JScrollPane ML1Scroll2;
    private javax.swing.JPanel ML1Tab;
    private javax.swing.JLabel ML1Total;
    private org.jdesktop.swingx.JXTable ML2ATable;
    private org.jdesktop.swingx.JXTable ML2BTable;
    private javax.swing.JPanel ML2Panel2;
    private javax.swing.JPanel ML2Panel4;
    private org.jdesktop.swingx.JXTable ML2RecTableA;
    private org.jdesktop.swingx.JXTable ML2RecTableB;
    private javax.swing.JScrollPane ML2Scroll1;
    private javax.swing.JScrollPane ML2Scroll3;
    private javax.swing.JScrollPane ML2Scroll4;
    private javax.swing.JPanel ML2Tab;
    private javax.swing.JLabel ML2Total;
    private javax.swing.JPanel MLPanel3;
    private javax.swing.JPanel MLPanel4;
    private javax.swing.JPanel MLPanel5;
    private javax.swing.JPanel MLPanel6;
    private javax.swing.JPanel Panel;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JPanel Panel3;
    private javax.swing.JPanel Panel4;
    private javax.swing.JButton acceptaBtn;
    private javax.swing.JTextField alternErrors;
    private javax.swing.JLabel alternErrorsPC;
    private javax.swing.JTextField alternErrorsPCField;
    private javax.swing.JLabel alternTemps;
    private javax.swing.JLabel alternTempsPC;
    private javax.swing.JTextField alternTempsPCField;
    private javax.swing.JLabel alternanTemps2;
    private javax.swing.JTextField alternanTemps2Field;
    private javax.swing.JButton anteriorBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton calculPercentilsFiveDigit;
    private javax.swing.JButton cancelaBtn;
    private javax.swing.JPanel cogstateTab;
    private javax.swing.JButton colorTrailsCronoBtn;
    private javax.swing.JButton colorTrailsCronoBtn1;
    private javax.swing.JLabel colorTrailsCronoLabel;
    private javax.swing.JLabel colorTrailsCronoLabel1;
    private javax.swing.JPanel colorTrailsTab;
    private javax.swing.JPanel colorTrailsTab1;
    private org.jdesktop.swingx.JXTable colorTrailsTable;
    private javax.swing.JTextField compteigErrors;
    private javax.swing.JLabel compteigErrorsPC;
    private javax.swing.JTextField compteigErrorsPCField;
    private javax.swing.JLabel compteigTemps;
    private javax.swing.JLabel compteigTemps2;
    private javax.swing.JTextField compteigTemps2Field;
    private javax.swing.JLabel compteigTempsPC;
    private javax.swing.JTextField compteigTempsPCField;
    private javax.swing.JLabel correctesBntA;
    private javax.swing.JLabel correctesBntB;
    private javax.swing.JLabel correctesBntC;
    private javax.swing.JLabel dataBnt1;
    private javax.swing.JLabel dataBnt2;
    private javax.swing.JLabel dataBnt3;
    private javax.swing.JLabel dataColor;
    private javax.swing.JLabel dataDD;
    private javax.swing.JLabel dataDI;
    private javax.swing.JLabel dataFive;
    private javax.swing.JLabel dataFluencia;
    private javax.swing.JLabel dataMl1;
    private javax.swing.JLabel dataMl2;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel digitsDirectePanel;
    private javax.swing.JPanel digitsDirectePanel1;
    private javax.swing.JPanel digitsDirectePanel2;
    private javax.swing.JPanel digitsDirectePanel3;
    private javax.swing.JScrollPane digitsDirecteScroll;
    private javax.swing.JScrollPane digitsDirecteScroll1;
    private javax.swing.JScrollPane digitsDirecteScroll2;
    private javax.swing.JScrollPane digitsDirecteScroll3;
    private org.jdesktop.swingx.JXTable digitsDirecteTable;
    private javax.swing.JPanel digitsInversPanel;
    private javax.swing.JScrollPane digitsInversScroll;
    private org.jdesktop.swingx.JXTable digitsInversTable;
    private javax.swing.JPanel digitsTab;
    private javax.swing.JTextField eleccioErrors;
    private javax.swing.JLabel eleccioErrorsPC;
    private javax.swing.JTextField eleccioErrorsPCField;
    private javax.swing.JLabel eleccioTemps;
    private javax.swing.JLabel eleccioTemps2;
    private javax.swing.JTextField eleccioTemps2Field;
    private javax.swing.JLabel eleccioTempsPC;
    private javax.swing.JTextField eleccioTempsPCField;
    private javax.swing.JButton fiveDigitStart1;
    private javax.swing.JButton fiveDigitStart2;
    private javax.swing.JButton fiveDigitStart3;
    private javax.swing.JButton fiveDigitStart4;
    private javax.swing.JScrollPane fiveDigitsScroll;
    private javax.swing.JScrollPane fiveDigitsScroll1;
    private javax.swing.JScrollPane fiveDigitsScroll2;
    private javax.swing.JScrollPane fiveDigitsScroll3;
    private javax.swing.JScrollPane fiveDigitsScroll4;
    private javax.swing.JPanel fiveDigitsTab;
    private javax.swing.JLabel flexibilitatPC;
    private javax.swing.JTextField flexibilitatPCField;
    private javax.swing.JLabel flexibilitatPD;
    private javax.swing.JTextField flexibilitatPDField;
    private org.jdesktop.swingx.JXTable fluenciaVerbalTable;
    private javax.swing.JLabel historiaAprimerTotal;
    private javax.swing.JLabel historiaAprimerTotal2;
    private javax.swing.JLabel historiaAsegonTotal;
    private javax.swing.JLabel historiaBprimerTotal;
    private javax.swing.JLabel historiaBprimerTotal2;
    private javax.swing.JLabel inhibicioPC;
    private javax.swing.JTextField inhibicioPCField;
    private javax.swing.JLabel inhibicioPD;
    private javax.swing.JTextField inhibicioPDField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel149;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel150;
    private javax.swing.JLabel jLabel151;
    private javax.swing.JLabel jLabel152;
    private javax.swing.JLabel jLabel153;
    private javax.swing.JLabel jLabel154;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel156;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel158;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel161;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel163;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel165;
    private javax.swing.JLabel jLabel166;
    private javax.swing.JLabel jLabel167;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel170;
    private javax.swing.JLabel jLabel171;
    private javax.swing.JLabel jLabel172;
    private javax.swing.JLabel jLabel176;
    private javax.swing.JLabel jLabel177;
    private javax.swing.JLabel jLabel179;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel180;
    private javax.swing.JLabel jLabel181;
    private javax.swing.JLabel jLabel185;
    private javax.swing.JLabel jLabel186;
    private javax.swing.JLabel jLabel188;
    private javax.swing.JLabel jLabel189;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel190;
    private javax.swing.JLabel jLabel194;
    private javax.swing.JLabel jLabel195;
    private javax.swing.JLabel jLabel198;
    private javax.swing.JLabel jLabel199;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel202;
    private javax.swing.JLabel jLabel205;
    private javax.swing.JLabel jLabel206;
    private javax.swing.JLabel jLabel207;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel210;
    private javax.swing.JLabel jLabel213;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel233;
    private javax.swing.JLabel jLabel234;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField lecturaErrors;
    private javax.swing.JLabel lecturaErrorsPC;
    private javax.swing.JTextField lecturaErrorsPCField;
    private javax.swing.JLabel lecturaTemps;
    private javax.swing.JLabel lecturaTemps2;
    private javax.swing.JTextField lecturaTemps2Field;
    private javax.swing.JLabel lecturaTempsPC;
    private javax.swing.JTextField lecturaTempsPCField;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nssaBNTA;
    private javax.swing.JLabel nssaBNTB;
    private javax.swing.JLabel nssaBNTC;
    private javax.swing.JLabel nssaDD;
    private javax.swing.JLabel nssaDI;
    private javax.swing.JButton obreExcelBtn;
    private javax.swing.JButton obrePdfBtn;
    private javax.swing.JLabel paginaLabel;
    private javax.swing.JLabel paginaLabel2;
    private javax.swing.JLabel percentilBNTA;
    private javax.swing.JLabel percentilBNTB;
    private javax.swing.JLabel percentilBNTC;
    private javax.swing.JLabel percentilDD;
    private javax.swing.JLabel percentilDI;
    private javax.swing.JLabel puntuacioDirectaDD;
    private javax.swing.JLabel puntuacioDirectaDI;
    private javax.swing.JLabel puntuacioML1;
    private javax.swing.JLabel puntuacioML2;
    private javax.swing.JButton resetDD;
    private javax.swing.JButton resetDI;
    private javax.swing.JButton resetHistoriaA;
    private javax.swing.JButton resetHistoriaA1;
    private javax.swing.JButton resetHistoriaB;
    private javax.swing.JButton resetHistoriaB1;
    private javax.swing.JButton resetHistoriaB2;
    private javax.swing.JButton resetHistoriaB3;
    private javax.swing.JButton resetHistoriaB4;
    private javax.swing.JButton seguentBtn;
    private javax.swing.JLabel semanticaBntA;
    private javax.swing.JLabel semanticaBntB;
    private javax.swing.JLabel semanticaBntC;
    private javax.swing.JSeparator sepBottom;
    private javax.swing.JLabel spanDD;
    private javax.swing.JLabel spanDI;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JLabel temps1;
    private javax.swing.JLabel temps2;
    private javax.swing.JLabel temps3;
    private javax.swing.JLabel temps4;
    private javax.swing.JLabel temps5;
    private javax.swing.JLabel temps6;
    private javax.swing.JLabel temps7;
    private javax.swing.JLabel temps8;
    private javax.swing.JTextArea textHistoriaAprimer;
    private javax.swing.JTextArea textHistoriaAprimer2;
    private javax.swing.JTextArea textHistoriaAsegon;
    private javax.swing.JTextArea textHistoriaBprimer;
    private javax.swing.JTextArea textHistoriaBprimer2;
    private javax.swing.JLabel totalBntA;
    private javax.swing.JLabel totalBntB;
    private javax.swing.JLabel totalBntC;
    private javax.swing.JLabel totalRec;
    private javax.swing.JLabel totalRecA;
    private javax.swing.JLabel totalRecB;
    // End of variables declaration//GEN-END:variables

    
    private void initDigitsDirecteTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", "0"},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", "0"},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", "0"},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", "0"},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", "0"},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", "0"},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", "0"},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", "0"}
            },
            new String [] {
                header+"Ítem", header+"Intent", header+"Resposta", header+"<center>Puntuació intent<br>(0-1)", header+"Puntuació ítem"
            }
        );
        
        
//        boolean colors[][] = new boolean[digitsDirecteTable.getRowCount()][digitsDirecteTable.getColumnCount()];
//        for (boolean[] r: colors)
//            Arrays.fill(r, false);

        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        digitsDirecteTable.setModel(model);
        
        //DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        //centerRenderer.setHorizontalAlignment( JLabel.CENTER );

        
        digitsDirecteTable.getColumnModel().getColumn(4).setCellRenderer( new customRenderer(true) );
        digitsDirecteTable.getColumnModel().getColumn(0).setCellRenderer( new customRenderer(true) );
        digitsDirecteTable.getColumnModel().getColumn(2).setCellRenderer( new customRenderer(true) );
        
        for (int i=0; i<digitsDirecteTable.getColumnModel().getColumnCount();i++){
            digitsDirecteTable.getColumnModel().getColumn(i).setResizable(false);
            digitsDirecteTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        digitsDirecteTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        digitsDirecteTable.getTableHeader().setReorderingAllowed(false);
        
        
        
        
        
        for (int i = 0; i<digitsDirecteTable.getRowCount(); i++){
            digitsDirecteTable.setRowHeight(i, 30);
        }
        
        Action action;
        action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int num0 = 0;
                int num1 = 0;
                
                int sumaAnteriors = 1;
                
                if (row > 1){
                    sumaAnteriors = 0;
                    sumaAnteriors+=Integer.parseInt((String)table.getValueAt(row-1,3));
                    sumaAnteriors+=Integer.parseInt((String)table.getValueAt(row-2,3));
                }
                
                if (row != 0){
                    for (int i = 0; i < row; i++){
                        if (table.getValueAt(i,3).equals("0")) num0++;
                    }
                }
                for (int j = row+1; j < table.getRowCount(); j++){
                    if (table.getValueAt(j,3).equals("1")) num1++;
                }
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                if (sumaAnteriors > 0 && num1 < 1) {
                    if (val == 0) {
                        table.setValueAt("1", row, 3);
                        table.setValueAt(table.getValueAt(row, 1), row, 2);
                    } else {
                        table.setValueAt("0", row, 3);
                        table.setValueAt("", row, 2);
                    }
                }
                
                
                
                int sumaTotal = 0;
                int suma = 0;
                int span = 0;
                
                model.setEditable(4,true);
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                    if (i%2 == 1){
                        suma = Integer.parseInt((String)table.getValueAt(i, 3))+Integer.parseInt((String)table.getValueAt(i-1, 3));
                        table.setValueAt(suma+"", i, 4);
                    }
                }
                model.setEditable(4,false);
                if (sumaAnteriors > 0 && num1 < 1){
                    puntuacioDirectaDD.setText(sumaTotal+"");
                    sumaTotal+=num0;
                    span = sumaTotal%2==0 ? sumaTotal/2 : sumaTotal/2+1;
                    spanDD.setText(span+"");
                }
            }
        };
        
        resetDD.addActionListener(new ActionListener()
        {
          public void actionPerformed(ActionEvent e)
          {
            for (int i = 0; i<digitsDirecteTable.getRowCount(); i++){
            digitsDirecteTable.setValueAt("", i, 2);
            digitsDirecteTable.setValueAt("0", i, 3);
                if (i%2 == 1){
                    model.setEditable(4,true);
                    digitsDirecteTable.setValueAt("0", i, 4);
                    model.setEditable(4,false);
                }
            }
            spanDD.setText("0");
            puntuacioDirectaDD.setText("0");
            percentilDD.setText("0");
            nssaDD.setText("0");
          }
        });
        
        
        
        ButtonColumn buttonColumn = new ButtonColumn(digitsDirecteTable, action, 3);
        digitsDirecteTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        digitsDirecteTable.packAll();
        digitsDirecteTable.getColumn(2).setPreferredWidth(400);
    }
    
    
    private void initDigitsInversTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "3 - 1","1 - 3", null, "0", null},
            {null, "2 - 4","4 - 2", null, "0", "0"},
            {"2", "4 - 6","6 - 4", null, "0", null},
            {null, "5 - 7","7 - 5", null, "0", "0"},
            {"3", "6 - 2 - 9", "9 - 2 - 6", null, "0", null},
            {null, "4 - 7 - 5", "5 - 7 - 4", null, "0", "0"},
            {"4", "8 - 2 - 7 - 9", "9 - 7 - 2 - 8", null, "0", null},
            {null, "4 - 9 - 6 - 8", "8 - 6 - 9 - 4", null, "0", "0"},
            {"5", "6 - 5 - 8 - 4 - 3", "3 - 4 - 8 - 5 - 6", null, "0", null},
            {null, "1 - 5 - 4 - 8 - 6", "6 - 8 - 4 - 5 - 1", null, "0", "0"},
            {"6", "5 - 3 - 7 - 4 - 1 - 8", "8 - 1 - 4 - 7 - 3 - 5", null, "0", null},
            {null, "7 - 2 - 4 - 8 - 5 - 6", "6 - 5 - 8 - 4 - 2 - 7", null, "0", "0"},
            {"7", "8 - 1 - 4 - 9 - 3 - 6 - 2", "2 - 6 - 3 - 9 - 4 - 1 - 8", null, "0", null},
            {null, "4 - 7 - 3 - 9 - 6 - 2 - 8", "8 - 2 - 6 - 9 - 3 - 7 - 4", null, "0", "0"},
            {"8", "9 - 4 - 3 - 7 - 6 - 2 - 1 - 8", "8 - 1 - 2 - 6 - 7 - 3 - 4 - 9", null, "0", null},
            {null, "7 - 2 - 8 - 1 - 5 - 6 - 4 - 3", "3 - 4 - 6 - 5 - 1 - 8 - 2 - 7", null, "0", "0"}
        },
        new String [] {
            header+"Ítem", header+"Intent", header+"Resposta correcta", header+"Resposta", header+"<center>Puntuació intent<br>(0-1)", header+"Puntuació ítem"
        }
    );
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true, true, false
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        digitsInversTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        digitsInversTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        digitsInversTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
        digitsInversTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        
        for (int i=0; i<digitsInversTable.getColumnModel().getColumnCount();i++){
            digitsInversTable.getColumnModel().getColumn(i).setResizable(false);
            digitsInversTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        digitsInversTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        digitsInversTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<digitsInversTable.getRowCount(); i++){
            digitsInversTable.setRowHeight(i, 30);
        }
        
        Action action;
        action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                model.setEditable(5,true);
                model.setEditable(4,true);
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));

                int sumaAnteriors = 1;
                
                if (row > 1){
                    sumaAnteriors = 0;
                    sumaAnteriors+=Integer.parseInt((String)table.getValueAt(row-1,4));
                    sumaAnteriors+=Integer.parseInt((String)table.getValueAt(row-2,4));
                }
                
                int num0 = 0;
                int num1 = 0;
                if (row != 0){
                    for (int i = 0; i < row; i++){
                        if (table.getValueAt(i,4).equals("0")) num0++;
                    }
                }
                for (int j = row+1; j < table.getRowCount(); j++){
                    if (table.getValueAt(j,4).equals("1")) num1++;
                }

                if (sumaAnteriors > 0 && num1 < 1) {
                    if (val == 0) {
                        table.setValueAt("1", row, 4);
                        table.setValueAt(table.getValueAt(row, 2), row, 3);
                    } else {
                        table.setValueAt("0", row, 4);
                        table.setValueAt("", row, 3);
                    }
                }

                int sumaTotal = 0;
                int suma = 0;
                int span = 0;
                
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                    if (i%2 == 1){
                        suma = Integer.parseInt((String)table.getValueAt(i, 4))+Integer.parseInt((String)table.getValueAt(i-1, 4));
                        table.setValueAt(suma+"", i, 5);
                        table.setRowHeight(i, 30);
                    }
                }
                model.setEditable(5,false);
                if (sumaAnteriors > 0 && num1 < 1){
                    sumaTotal+=num0;
                    puntuacioDirectaDI.setText(sumaTotal+"");
                    span = sumaTotal%2==0 ? sumaTotal/2 : sumaTotal/2+1;
                    spanDI.setText(span+"");
                    puntuacioDirectaDI.setText(sumaTotal+"");
                }
            }
        };
        
        resetDI.addActionListener(new ActionListener()
        {
          public void actionPerformed(ActionEvent e)
          {
            for (int i = 0; i<digitsInversTable.getRowCount(); i++){
            digitsInversTable.setValueAt("", i, 3);
            digitsInversTable.setValueAt("0", i, 4);
                if (i%2 == 1){
                    model.setEditable(5,true);
                    digitsInversTable.setValueAt("0", i, 5);
                    model.setEditable(5,false);
                }
            }
            spanDI.setText("0");
            puntuacioDirectaDI.setText("0");
            percentilDI.setText("0");
            nssaDI.setText("0");
          }
        });
        
        ButtonColumn buttonColumn = new ButtonColumn(digitsInversTable, action, 4);
        digitsInversTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        digitsInversTable.packAll();
        digitsInversTable.getColumn(3).setPreferredWidth(400);
    }

    private void initML1ATable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "La Maria", "<html><i>Maria</i> o variant", "0", "0"},
            {"2", "i el Pedro", "<html><i>Pedro</i> o variant", "0", "0"},
            {"3", "són amics", "<html><i>amics</i> (en qualsevol context)", "0", "0"},
            {"4", "des de fa 30", "<html>es requereix <i>trenta</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0", "0"},
            {"5", "anys", "<html>es requereix <i>anys</i>", "0", "0"},
            {"6", "Cada", "<html><i>cada</i>, tots (en referencia només als dimarts), o <i>els dimarts</i>", "0", "0"},
            {"7", "dimarts", "<html>es requereix <i>dimarts</i> (en qualsevol context)", "0", "0"},
            {"8", "queda", "<html>qualsevol indicació que reflecteixi que els personatges queden intencionadament", "0", "0"},
            {"9", "per esmorzar", "<html>es requereix <i>esmorzar</i> (en qualsevol context)", "0", "0"},
            {"10", "al bar", "<html>es requereix <i>bar</i>", "0", "0"},
            {"11", "Cervanted", "<html>es requereix <i>Cervantes</i> (en qualsevol context)", "0", "0"},
            {"12", "Després surten junts a passejar", "indicació que els personatges passegen", "0", "0"},
            {"13", "pel parc", "<html>es requereix <i>parc</i> (en qualsevol context)", "0", "0"},
            {"14", "del Retiro.", "<html>es requereix <i>Retiro</i> (en qualsevol context)", "0", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"<center>Puntuació<br>Primer record", header+"<center>Puntuació<br>Segon record"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML1ATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML1ATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML1ATable.getColumnModel().getColumnCount();i++){
            ML1ATable.getColumnModel().getColumn(i).setResizable(false);
            ML1ATable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML1ATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML1ATable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML1ATable.getRowCount(); i++){
            ML1ATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaAprimerTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(Integer.parseInt(historiaBprimerTotal.getText())+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                }
                historiaAsegonTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(Integer.parseInt(historiaBprimerTotal.getText())+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML1ATable, action1, 3);
        ButtonColumn buttonColumn2 = new ButtonColumn(ML1ATable, action2, 4);
        ML1ATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML1ATable.packAll();
    }

    private void initML1BTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "Elena", "<html><i>Elena</i> o variant", "0"},
            {"2", "Pérez,", "<html>es requereix<i>Pérez</i>","0"},
            {"3", "del sud", "<html><i>sud</i> (en qualsevol context)", "0"},
            {"4", "de Madrid,", "<html><i>Madrid</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
            {"5", "treballadora", "indicació que tenia una feina", "0"},
            {"6", "com a cuinera", "<html>es requereix <i>cuinera</i> o variant", "0"},
            {"7", "al menjador", "<html>es requereix <i>menjador</i>", "0"},
            {"8", "d'una escola,", "<html>es requereix <i>escola</i> o <i>col·legi</i>", "0"},
            {"9", "va denunciar", "<html>indicació de denuncia o reclamació davant l'autoritat (en qualsevol context)", "0"},
            {"10", "a la comisseria", "<html>indicació de lloc de treball de la policia, oficina policial", "0"},
            {"11", "de policia", "<html><i>policia</i> (en qualsevol context)", "0"},
            {"12", "que habia estat assaltada", "indicació d'assalt, atracament", "0"},
            {"13", "la nit anterior", "indicació que l'assalt va ser la nit anterior", "0"},
            {"14", "al carrer Padilla,", "<html>carrer <i>Padilla</i> (en qualsevol context)", "0"},
            {"15", "i que li habien robat", "<html>indicació que la van robar", "0"},
            {"16", "56 euros.,", "<html>indicació que va ser substreta una quantitat entre 49-60 euros", "0"},
            {"17", "Tenia quatre", "<html>es requereix <i>quatre</i> juntament a la idea que eren seus", "0"},
            {"18", "nens petits", "<html>es requereix <i>nens</i> o variant", "0"},
            {"19", "no habia pogut pagar el lloguer", "<html>indicació que reflecteixi que el lloguer no havia estat pagat", "0"},
            {"20", "i portada dos dies", "<html>es requereix <i>dos dies</i> o variant que contingui<i>dos</i>", "0"},
            {"21", "sense menjar.", "<html>indicació que els nens o la familia no havien menjat", "0"},
            {"22", "La policia,", "<html>indicació de policia, un o més agents (en qualsevol context)", "0"},
            {"23", "commoguda per la història de la dona", "<html>indicació que la història va provocar compassió", "0"},
            {"24", "va realitzar una col·lecta", "<html>indicació que es van recollir diners o menjar", "0"},
            {"25", "per ajudar-la.", "<html>indicació que els diners o el menjar recollits eren per a ella o pels seus fills", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML1BTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML1BTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML1BTable.getColumnModel().getColumnCount();i++){
            ML1BTable.getColumnModel().getColumn(i).setResizable(false);
            ML1BTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        ML1BTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML1BTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML1BTable.getRowCount(); i++){
            ML1BTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaBprimerTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(sumaTotal+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML1BTable, action1, 3);
        ML1BTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML1BTable.packAll();
    }
    
    private void initML2ATable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "La Maria", "<html><i>Maria</i> o variant", "0"},
            {"2", "i el Pedro", "<html><i>Pedro</i> o variant", "0"},
            {"3", "són amics", "<html><i>amics</i> (en qualsevol context)", "0"},
            {"4", "des de fa 30", "<html>es requereix <i>trenta</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
            {"5", "anys", "<html>es requereix <i>anys</i>", "0"},
            {"6", "Cada", "<html><i>cada</i>, tots (en referencia només als dimarts), o <i>els dimarts</i>", "0"},
            {"7", "dimarts", "<html>es requereix <i>dimarts</i> (en qualsevol context)", "0", "0"},
            {"8", "queda", "<html>qualsevol indicació que reflecteixi que els personatges queden intencionadament", "0"},
            {"9", "per esmorzar", "<html>es requereix <i>esmorzar</i> (en qualsevol context)", "0"},
            {"10", "al bar", "<html>es requereix <i>bar</i>", "0"},
            {"11", "Cervanted", "<html>es requereix <i>Cervantes</i> (en qualsevol context)", "0"},
            {"12", "Després surten junts a passejar", "indicació que els personatges passegen", "0"},
            {"13", "pel parc", "<html>es requereix <i>parc</i> (en qualsevol context)", "0"},
            {"14", "del Retiro.", "<html>es requereix <i>Retiro</i> (en qualsevol context)", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML2ATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2ATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2ATable.getColumnModel().getColumnCount();i++){
            ML2ATable.getColumnModel().getColumn(i).setResizable(false);
            ML2ATable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2ATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2ATable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2ATable.getRowCount(); i++){
            ML2ATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaAprimerTotal2.setText(sumaTotal+"");
                ML2Total.setText(""+sumaTotal+historiaBprimerTotal2.getText());
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2ATable, action1, 3);
        ML2ATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2ATable.packAll();
    }

    private void initTabs() {
        numPaginesTotal = ((JPanel)tabbedPanel.getSelectedComponent()).getComponentCount();
        paginaLabel2.setText("/ "+(numPaginesTotal)+"");
        tabbedPanel.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                pagina = 0;
                
                if (timer.isRunning())
                    timer.stop();
                
                if (((JPanel)tabbedPanel.getSelectedComponent()).getName() != null){
                    if (((JPanel)tabbedPanel.getSelectedComponent()).getName().equals("BNT")){
                        numPaginesTotal = 1;
                        CardLayout card = (CardLayout)((JPanel)tabbedPanel.getSelectedComponent()).getLayout();
                        card.show(((JPanel)tabbedPanel.getSelectedComponent()), "card"+(valoracio));
                    } else {
                        numPaginesTotal = ((JPanel)tabbedPanel.getSelectedComponent()).getComponentCount();
                    }
                }
                else {
                    numPaginesTotal = ((JPanel)tabbedPanel.getSelectedComponent()).getComponentCount();
                }
                
                if (numPaginesTotal > 1){
                    CardLayout card = (CardLayout)((JPanel)tabbedPanel.getSelectedComponent()).getLayout();
                    card.show(((JPanel)tabbedPanel.getSelectedComponent()), "card"+(pagina+1));
                    anteriorBtn.setEnabled(false);
                    seguentBtn.setEnabled(true);
                }else {
                    anteriorBtn.setEnabled(false);
                    seguentBtn.setEnabled(false);
                }
                paginaLabel.setText((pagina+1)+"");
                paginaLabel2.setText("/ "+(numPaginesTotal)+"");
                
            }
        });
    }

    private void initML2BTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
            new Object [][] {
                {"1", "Elena", "<html><i>Elena</i> o variant", "0"},
                {"2", "Pérez,", "<html>es requereix<i>Pérez</i>","0"},
                {"3", "del sud", "<html><i>sud</i> (en qualsevol context)", "0"},
                {"4", "de Madrid,", "<html><i>Madrid</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
                {"5", "treballadora", "indicació que tenia una feina", "0"},
                {"6", "com a cuinera", "<html>es requereix <i>cuinera</i> o variant", "0"},
                {"7", "al menjador", "<html>es requereix <i>menjador</i>", "0"},
                {"8", "d'una escola,", "<html>es requereix <i>escola</i> o <i>col·legi</i>", "0"},
                {"9", "va denunciar", "<html>indicació de denuncia o reclamació davant l'autoritat (en qualsevol context)", "0"},
                {"10", "a la comisseria", "<html>indicació de lloc de treball de la policia, oficina policial", "0"},
                {"11", "de policia", "<html><i>policia</i> (en qualsevol context)", "0"},
                {"12", "que habia estat assaltada", "indicació d'assalt, atracament", "0"},
                {"13", "la nit anterior", "indicació que l'assalt va ser la nit anterior", "0"},
                {"14", "al carrer Padilla,", "<html>carrer <i>Padilla</i> (en qualsevol context)", "0"},
                {"15", "i que li habien robat", "<html>indicació que la van robar", "0"},
                {"16", "56 euros.,", "<html>indicació que va ser substreta una quantitat entre 49-60 euros", "0"},
                {"17", "Tenia quatre", "<html>es requereix <i>quatre</i> juntament a la idea que eren seus", "0"},
                {"18", "nens petits", "<html>es requereix <i>nens</i> o variant", "0"},
                {"19", "no habia pogut pagar el lloguer", "<html>indicació que reflecteixi que el lloguer no havia estat pagat", "0"},
                {"20", "i portada dos dies", "<html>es requereix <i>dos dies</i> o variant que contingui<i>dos</i>", "0"},
                {"21", "sense menjar.", "<html>indicació que els nens o la familia no havien menjat", "0"},
                {"22", "La policia,", "<html>indicació de policia, un o més agents (en qualsevol context)", "0"},
                {"23", "commoguda per la història de la dona", "<html>indicació que la història va provocar compassió", "0"},
                {"24", "va realitzar una col·lecta", "<html>indicació que es van recollir diners o menjar", "0"},
                {"25", "per ajudar-la.", "<html>indicació que els diners o el menjar recollits eren per a ella o pels seus fills", "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML2BTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2BTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2BTable.getColumnModel().getColumnCount();i++){
            ML2BTable.getColumnModel().getColumn(i).setResizable(false);
            ML2BTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2BTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2BTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2BTable.getRowCount(); i++){
            ML2BTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaBprimerTotal2.setText(sumaTotal+"");
                ML2Total.setText(""+(sumaTotal+Integer.parseInt(historiaAprimerTotal2.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2BTable, action1, 3);
        ML2BTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2BTable.packAll();
    }

    private void initML2RecTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        String si = "<html>N&nbsp;&nbsp;&nbsp;<b><font color=\"rgb(80,130,190)\">   S</font></b>";
        String no = "<html><font color=\"rgb(80,130,190)\"><b>N   </b></font>&nbsp;&nbsp;&nbsp;S";
        customModel model = new customModel(
            new Object [][] {
                {"1", "Una de les persones de la història, es deia Maria?", si, "0"},
                {"2", "L'altra persona, es deia Pedro?", si,"0"},
                {"3", "Es deia a la història que estaven casats?", no, "0"},
                {"4", "Eren amics des de feia 20 anys?", no, "0"},
                {"5", "Quedaven cada dimarts?", si, "0"},
                {"6", "Menjaven al bar El Retiro?", no, "0"},
                {"7", "Desrés d'esmorzar, anaven a observar ocells a casa del Pedro?", no, "0"},
                {"8", "Passejaven pel parc del Retiro?", si, "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Resposta", header+"Puntuació"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        ML2RecTableA.setModel(model);
        
        customModel model2 = new customModel(
            new Object [][] {
                {"9", "La dona, es deia Diana Pérez?", no,"0"},
                {"10", "Vivia al sud de Madrid?", si, "0"},
                {"11", "La dona era cuinera?", si, "0"},
                {"12", "Traballava a un restaurant?", no, "0"},
                {"13", "Tenia quatre fills?", si, "0"},
                {"14", "Els fills eren adolescents?", no, "0"},
                {"15", "Va tenir lloc el robatori al carrer Reial?", no, "0"},
                {"16", "Va dir la dona que li havien robat dos dies abans?", no, "0"},
                {"17", "Va denunciar la dona el robatori a comissaria?", si, "0"},
                {"18", "Van robar a la dona 75 euros?", no, "0"},
                {"19", "Havia estat la família sense menjar durant quatre dies?", no, "0"},
                {"20", "La dona, havia de pagar el lloguer?", si, "0"},
                {"21", "La policia va detenir el lladre?", no, "0"},
                {"22", "La policia es va commoure amb la història de la dona?", si, "0"},
                {"23", "¿La policia va organitzar una col·lecta?", si, "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Resposta", header+"Puntuació"
            }
        );
        
        model2.setTypes(types);
        model2.setCanEdit(canEdit);
        
        ML2RecTableB.setModel(model2);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2RecTableA.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        ML2RecTableA.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2RecTableA.getColumnModel().getColumnCount();i++){
            ML2RecTableA.getColumnModel().getColumn(i).setResizable(false);
            ML2RecTableA.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2RecTableA.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2RecTableA.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2RecTableA.getRowCount(); i++){
            ML2RecTableA.setRowHeight(i, 30);
        }
        
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2RecTableB.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        ML2RecTableB.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2RecTableB.getColumnModel().getColumnCount();i++){
            ML2RecTableB.getColumnModel().getColumn(i).setResizable(false);
            ML2RecTableB.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2RecTableB.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2RecTableB.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2RecTableB.getRowCount(); i++){
            ML2RecTableB.setRowHeight(i, 30);
        }
        
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                
                System.out.println(table.getRowCount());
                if (table.getRowCount() <= 8){
                    totalRecA.setText(sumaTotal+"");
                }else{
                    totalRecB.setText(sumaTotal+"");
                }
                totalRec.setText(""+(Integer.parseInt(totalRecA.getText())+Integer.parseInt(totalRecB.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                
                if (table.getRowCount() == 8){
                    totalRecA.setText(sumaTotal+"");
                }else{
                    totalRecB.setText(sumaTotal+"");
                }
                totalRec.setText(""+(Integer.parseInt(totalRecA.getText())+Integer.parseInt(totalRecB.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2RecTableA, action1, 3);
        ML2RecTableA.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2RecTableA.packAll();
        
        ButtonColumn buttonColumn2 = new ButtonColumn(ML2RecTableB, action1, 3);
        ML2RecTableB.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2RecTableB.packAll();
    }

    private void initBNTATable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Llit(un moble)","","0","0"},
                {"2", "Escombra (serveix per netejar),","","0","0"},
                {"3", "Banc (serveix per seure)","","0","0"},
                {"4", "Pop (animal marí)","","0","0"},
                {"5", "Bolet (quelcom per menjar)","","0","0"},
                {"6", "Helicòpter (serveix per viatjar per l'aire)","","0","0"},
                {"7", "Corona de flors","", "0","0"},
                {"8", "Pinces (utensili)","","0","0"},
                {"9", "Compàs (serveix per dibuixar)","","0","0"},
                {"10", "Magdalena (quelcom per menjar)","","0","0"},
                {"11", "Balda (part d'una porta)","","0","0"},
                {"12", "Canoa (s'utlititza a l'aigua)","","0","0"},
                {"13", "Pelicà (una au)","","0","0"},
                {"14", "Unicorn (animal mític)","","0","0"},
                {"15", "Transportador (serveix per mesurar angles)","","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version A","Resposta pacient", " Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true ,true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTATable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=3; i<BNTATable.getColumnModel().getColumnCount(); i++){
            BNTATable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTATable.getColumnModel().getColumnCount() > 0) {
            BNTATable.getColumnModel().getColumn(0).setResizable(false);
            BNTATable.getColumnModel().getColumn(1).setResizable(false);
            BNTATable.getColumnModel().getColumn(2).setResizable(false);
            BNTATable.getColumnModel().getColumn(3).setResizable(false);
            BNTATable.getColumnModel().getColumn(4).setResizable(false);
        }
        BNTATable.getTableHeader().setReorderingAllowed(false);
        
        BNTATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTATable.getRowCount(); i++){
            BNTATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                correctesBntA.setText(sumaTotal+"");
                totalBntA.setText(""+(sumaTotal+Integer.parseInt(semanticaBntA.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                }
                semanticaBntA.setText(sumaTotal+"");
                totalBntA.setText(""+(sumaTotal+Integer.parseInt(correctesBntA.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTATable, action1, 3);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTATable, action2, 4);
        BNTATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTATable.packAll();
    }

    private void initBNTBTable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Arbre (creix al camp)","","0","0"},
                {"2", "Flor (creix al jardí)","","0","0"},
                {"3", "Xiulet (serveix per bufar)","","0","0"},
                {"4", "Escales mecàniques (serveix per pujar)","","0","0"},
                {"5", "Penjador (es troba en un armari)","","0","0"},
                {"6", "Morrió (s'utilitza pels gossos)","","0","0"},
                {"7", "Volcà (un tipus de muntanya)","", "0","0"},
                {"8", "Gla (prové d'un arbre)","","0","0"},
                {"9", "Cactus (quelcom que creix)","","0","0"},
                {"10", "Arpa (intrument musical)","","0","0"},
                {"11", "Dard (serveix per llançar)","","0","0"},
                {"12", "Soga (per penjar)","","0","0"},
                {"13", "Xanques (s'usen per caminar més alt)","","0","0"},
                {"14", "Esfinx (es troba a Egipte)","","0","0"},
                {"15", "Pèrgola (s'usa al jardí)","","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version B", "Resposta pacient" ," Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTBTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTBTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTBTable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=3; i<BNTBTable.getColumnModel().getColumnCount(); i++){
            BNTBTable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTBTable.getColumnModel().getColumnCount() > 0) {
            BNTBTable.getColumnModel().getColumn(0).setResizable(false);
            BNTBTable.getColumnModel().getColumn(1).setResizable(false);
            BNTBTable.getColumnModel().getColumn(2).setResizable(false);
            BNTBTable.getColumnModel().getColumn(3).setResizable(false);
            BNTBTable.getColumnModel().getColumn(4).setResizable(false);
        }
        BNTBTable.getTableHeader().setReorderingAllowed(false);
        BNTBTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTBTable.getRowCount(); i++){
            BNTBTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                correctesBntB.setText(sumaTotal+"");
                totalBntB.setText(""+(sumaTotal+Integer.parseInt(semanticaBntB.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                }
                semanticaBntB.setText(sumaTotal+"");
                totalBntB.setText(""+(sumaTotal+Integer.parseInt(correctesBntB.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTBTable, action1, 3);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTBTable, action2, 4);
        BNTBTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTBTable.packAll();
    }

    private void initBNTCTable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Casa (tipus d'edifici)","","0","0"},
                {"2", "Respall de dents (s'usa a la boca)","","0","0"},
                {"3", "Cargol (un animal)","","0","0"},
                {"4", "Cadira de rodes (es troba a l'hospital)","","0","0"},
                {"5", "Llapis (serveix per escriure)","","0","0"},
                {"6", "Màscara (part d'una disfressa)","","0","0"},
                {"7", "Acordió (instrument musical)","", "0","0"},
                {"8", "Piràmide (es troba a Egipte)","","0","0"},
                {"9", "Armònica (instrument musical)","","0","0"},
                {"10", "Globus terraqui (un tipus de mapa)","","0","0"},
                {"11", "Trípode (el fan servir els fotògrafs)","","0","0"},
                {"12", "Pergamí (un document)","","0","0"},
                {"13", "Jou (s'utilitza per a animals de tir)","","0","0"},
                {"14", "Estetoscopi (el fan servir els metges)","","0","0"},
                {"15", "Àbac (serveix per comptar)","","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version C","Resposta pacient", " Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTCTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTCTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTCTable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=3; i<BNTCTable.getColumnModel().getColumnCount(); i++){
            BNTCTable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTCTable.getColumnModel().getColumnCount() > 0) {
            BNTCTable.getColumnModel().getColumn(0).setResizable(false);
            BNTCTable.getColumnModel().getColumn(1).setResizable(false);
            BNTCTable.getColumnModel().getColumn(2).setResizable(false);
            BNTCTable.getColumnModel().getColumn(3).setResizable(false);
            BNTCTable.getColumnModel().getColumn(4).setResizable(false);
        }
        BNTCTable.getTableHeader().setReorderingAllowed(false);
        BNTCTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTCTable.getRowCount(); i++){
            BNTCTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                correctesBntC.setText(sumaTotal+"");
                totalBntC.setText(""+(sumaTotal+Integer.parseInt(semanticaBntC.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                }
                semanticaBntC.setText(sumaTotal+"");
                totalBntC.setText(""+(sumaTotal+Integer.parseInt(correctesBntC.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTCTable, action1, 3);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTCTable, action2, 4);
        BNTCTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTCTable.packAll();
    }

    private void initHashDD() {
        taulaDigitsDD = new HashMap<>();
        List<Object> auxList;
        HashMap<Integer, List<Object>> auxMap = new HashMap<>();
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(0, auxList);
        auxMap.put(1, auxList);
        auxMap.put(2, auxList);
        auxMap.put(3, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(9, auxList);
        taulaDigitsDD.put("50-56", new HashMap(auxMap));
        
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(8, auxList);
        taulaDigitsDD.put("57-59", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(4, auxList);
        taulaDigitsDD.put("60-62", new HashMap(auxMap));
        
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(7, auxList);
        taulaDigitsDD.put("63-65", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(17, "99");
        auxMap.put(8, auxList);
        taulaDigitsDD.put("66-68", new HashMap(auxMap));
        
        taulaDigitsDD.put("69-71", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(4, auxList);
        taulaDigitsDD.put("72-74", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(16, "1");
        auxMap.put(7, auxList);
        taulaDigitsDD.put("75-77", new HashMap(auxMap));
        
        auxList = Arrays.asList(17, "99");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(8, auxList);
        taulaDigitsDD.put("78-80", new HashMap(auxMap));
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(7, auxList);
        taulaDigitsDD.put("81-90", new HashMap(auxMap));
        
    }

    private void calcularDigits(boolean digits) {
        int edatPacient = pacientActual.getEdat();
        String edat = "";
        if (edatPacient<=56){
            edat = "50-56";
        }
        else if (edatPacient>=57 && edatPacient<=59){
            edat = "57-59";
        }
        else if (edatPacient>=60 && edatPacient<=62){
            edat = "60-62";
        }
        else if (edatPacient>=63 && edatPacient<=65){
            edat = "63-65";
        }
        else if (edatPacient>=66 && edatPacient<=68){
            edat = "66-68";
        }
        else if (edatPacient>=69 && edatPacient<=71){
            edat = "69-71";
        }
        else if (edatPacient>=72 && edatPacient<=74){
            edat = "72-74";
        }
        else if (edatPacient>=75 && edatPacient<=77){
            edat = "75-77";
        }
        else if (edatPacient>=78 && edatPacient<=80){
            edat = "78-80";
        }
        else if (edatPacient<=81){
            edat = "81-90";
        }
        
        List<Object> list;
        if (digits){
            System.out.println(Integer.parseInt(spanDD.getText()));
            System.out.println(edat);
            list = taulaDigitsDD.get(edat).get(Integer.parseInt(spanDD.getText()));
            percentilDD.setText((String) list.get(1));
        } else {
            list = taulaDigitsDI.get(edat).get(Integer.parseInt(spanDI.getText()));
            percentilDI.setText((String) list.get(1));
        }
        int scaledScore = (int) list.get(0);
        
        int anysEscola = pacientActual.getAnysEscola();
        int modificador = 0;
        
        if (anysEscola <= 2){
            modificador = 2;
        }
        else if (anysEscola >=3 && anysEscola <=7){
            modificador = 1;
        }
        else if (anysEscola >=8 && anysEscola <=12){
            modificador = 0;
        }
        else if (anysEscola >=13 && anysEscola <=16){
            modificador = -1;
        }
        else if (anysEscola >=17){
            modificador = -2;
        }
        if (digits)
            nssaDD.setText(scaledScore+modificador+"");
        else
            nssaDI.setText(scaledScore+modificador+"");
    }

    private void initHashDI() {
    
        taulaDigitsDI = new HashMap<>();
        List<Object> auxList;
        HashMap<Integer, List<Object>> auxMap = new HashMap<>();
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(0, auxList);
        auxMap.put(1, auxList);
        auxList = Arrays.asList(3, "1");
        auxMap.put(2, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(7, auxList);
        taulaDigitsDI.put("50-56", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(2, auxList);
        taulaDigitsDI.put("57-59", new HashMap(auxMap));
        
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(5, auxList);
        taulaDigitsDI.put("60-62", new HashMap(auxMap));
        
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(6, auxList);
        taulaDigitsDI.put("63-65", new HashMap(auxMap));
        
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(3, auxList);
        taulaDigitsDI.put("66-68", new HashMap(auxMap));
        
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(4, auxList);
        auxList = Arrays.asList(17, "99");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(7, auxList);
        taulaDigitsDI.put("69-71", new HashMap(auxMap));
        
        taulaDigitsDI.put("72-74", new HashMap(auxMap));
        
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(2, auxList);
        taulaDigitsDI.put("75-77", new HashMap(auxMap));
        
        taulaDigitsDI.put("78-80", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(3, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(6, auxList);
        taulaDigitsDI.put("81-90", new HashMap(auxMap));
    
    }

    private void initColorTrails() {
        String header = "<html><center><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
            new Object [][] {
                {"<html><b>Color Trails 1 - Time in seconds",null, "X", null, null, null},
                {"<html><b>Color Trails 1 - Errors",null, null, "X", "X", "X"},
                {"<html><b>Color Trails 1 - Near-Misses",null, null, "X", "X", "X"},
                {"<html><b>Color Trails 1 - Prompts",null, null, "X", "X", "X"},
                {"<html><b>Color Trails 2 - Time in seconds",null, "X", null, null, null},
                {"<html><b>Color Trails 2 - Errors",null, null, "X", "X", "X"},
                {"<html><b>Color Trails 2 - Near-Misses",null, null, "X", "X", "X"},
                {"<html><b>Color Trails 2 - Prompts",null, null, "X", "X", "X"},
                {"<html><b>Interference Index</b><br>(Color Trails 2 times raw score<br>minus Color Trails 1 time raw score)<br>/Color Trails 1 time raw score",null, null, "X", "X", "X"}
            },
            new String [] {
                "",header+"Raw<br>score", header+"Percentile<br>range", header+"Standard<br>score", header+"T<br>score", header+"Percentile<br>score"
            }
        );
        
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, true, true, false, false, false
        };
        
        System.out.println(model.getColumnCount());
        System.out.println(model.getRowCount());
        boolean edit[][] = new boolean[model.getColumnCount()][model.getRowCount()];
        for (boolean[] r: edit)
            Arrays.fill(r, false);
        
        Arrays.fill(edit[1],true);
        Arrays.fill(edit[2],true);
        
        model.setCanEditMatrix(edit);
        
        model.setCustom(true);
        model.setEditable(2, 0, false);
        model.setEditable(2, 4, false);
        model.setEditable(3, 0, true);
        model.setEditable(3, 4, true);
        model.setEditable(4, 0, true);
        model.setEditable(4, 4, true);
        model.setEditable(5, 0, true);
        model.setEditable(5, 4, true);
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        colorTrailsTable.setModel(model);
        
        //digitsDirecteTable.getColumnModel().getColumn(4).setCellRenderer( new customRenderer(true) );
        //digitsDirecteTable.getColumnModel().getColumn(0).setCellRenderer( new customRenderer(true) );
        
        
        for (int i=1; i<colorTrailsTable.getColumnModel().getColumnCount();i++){
            colorTrailsTable.getColumnModel().getColumn(i).setResizable(false);
            colorTrailsTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
            colorTrailsTable.getColumnModel().getColumn(i).setPreferredWidth(120);
            colorTrailsTable.getColumnModel().getColumn(i).setCellRenderer( new customRenderer(true) );
        }
        
        colorTrailsTable.getColumnModel().getColumn(0).setResizable(false);
        
        //digitsDirecteTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        colorTrailsTable.getTableHeader().setReorderingAllowed(false);
        
        //colorTrailsTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<colorTrailsTable.getRowCount()-1; i++){
            colorTrailsTable.setRowHeight(i, 30);
        }
        colorTrailsTable.setRowHeight(8, 80);
        colorTrailsTable.getColumn(3).setPreferredWidth(120);
        colorTrailsTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        colorTrailsTable.packAll();
        
    }

    private void initTimer() {
        this.llistaBtn5digits = new JButton[4];
        llistaBtn5digits[0] = fiveDigitStart1;
        llistaBtn5digits[1] = fiveDigitStart2;
        llistaBtn5digits[2] = fiveDigitStart3;
        llistaBtn5digits[3] = fiveDigitStart4;
        timeFormatter = new DecimalFormat("00");
        timer = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                long now = System.currentTimeMillis();
                long dif = now - startTime;

                long minutes = dif / (60 * 1000);
                dif = Math.round(dif % (60 * 1000));
                long seconds = dif / 1000;
                dif = Math.round(dif % 1000);
                long centiseconds = dif / 10;

                llistaBtn5digits[pagina].setText(timeFormatter.format(minutes) + ":"
                        + timeFormatter.format(seconds) + "."
                        + timeFormatter.format(centiseconds));
            }
        });
        
        timerColor = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                long now = System.currentTimeMillis();
                long dif = now - startTime;
                
                secondsColor1 = dif / 1000;
                
                long minutes = dif / (60 * 1000);
                dif = Math.round(dif % (60 * 1000));
                long seconds = dif / 1000;
                dif = Math.round(dif % 1000);
                long centiseconds = dif / 10;
                colorTrailsCronoLabel.setText(timeFormatter.format(minutes) + ":"
                        + timeFormatter.format(seconds) + "."
                        + timeFormatter.format(centiseconds));
            }
            
        });
        
        timerColor2 = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                long now = System.currentTimeMillis();
                long dif = now - startTime;
                
                secondsColor2 = dif / 1000;
                
                long minutes = dif / (60 * 1000);
                dif = Math.round(dif % (60 * 1000));
                long seconds = dif / 1000;
                dif = Math.round(dif % 1000);
                long centiseconds = dif / 10;
                colorTrailsCronoLabel1.setText(timeFormatter.format(minutes) + ":"
                        + timeFormatter.format(seconds) + "."
                        + timeFormatter.format(centiseconds));
            }
            
        });
        
    }

    private void initFluenciaVerbalTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
            new Object [][] {
                {"1.", null,"1.",null,"1.",null,"1.",null},
                {"2.", null,"2.",null,"2.",null,"2.",null},
                {"3.", null,"3.",null,"3.",null,"3.",null},
                {"4.", null,"4.",null,"4.",null,"4.",null},
                {"5.", null,"5.",null,"5.",null,"5.",null},
                {"6.", null,"6.",null,"6.",null,"6.",null},
                {"7.", null,"7.",null,"7.",null,"7.",null},
                {"8.", null,"8.",null,"8.",null,"8.",null},
                {"9.", null,"9.",null,"9.",null,"9.",null},
                {"10.", null,"10.",null,"10.",null,"10.",null},
                {"11.", null,"11.",null,"11.",null,"11.",null},
                {"12.", null,"12.",null,"12.",null,"12.",null},
                {"13.", null,"13.",null,"13.",null,"13.",null},
                {"14.", null,"14.",null,"14.",null,"14.",null},
                {"15.", null,"15.",null,"15.",null,"15.",null},
                {"16.", null,"16.",null,"16.",null,"16.",null},
                {"17.", null,"17.",null,"17.",null,"17.",null},
                {"18.", null,"18.",null,"18.",null,"18.",null},
                {"19.", null,"19.",null,"19.",null,"19.",null},
                {"20.", null,"20.",null,"20.",null,"20.",null},
                {"21.", null,"21.",null,"21.",null,"21.",null},
                {"22.", null,"22.",null,"22.",null,"22.",null},
                {"23.", null,"23.",null,"23.",null,"23.",null},
                {"24.", null,"24.",null,"24.",null,"24.",null},
                {"25.", null,"25.",null,"25.",null,"25.",null},
                {"<html><b>Total", null,"<html><b>Total",null,"<html><b>Total",null,"<html><b>Total",null}
            },
            new String [] {
                "", header+"P", "", header+"M","", header+"R","", header+"ANIMALS"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class,java.lang.String.class
        };
        boolean[] canEdit = new boolean [] {
            false, true, false, true,false, true,false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        fluenciaVerbalTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        fluenciaVerbalTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        fluenciaVerbalTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        fluenciaVerbalTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
        fluenciaVerbalTable.getColumnModel().getColumn(7).setCellRenderer( centerRenderer );
        
        for (int i=0; i<fluenciaVerbalTable.getColumnModel().getColumnCount();i++){
            fluenciaVerbalTable.getColumnModel().getColumn(i).setResizable(false);
            fluenciaVerbalTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        
        fluenciaVerbalTable.getTableHeader().setReorderingAllowed(false);
        fluenciaVerbalTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<fluenciaVerbalTable.getRowCount(); i++){
            fluenciaVerbalTable.setRowHeight(i, 20);
        }
        
        fluenciaVerbalTable.setRowHeight(25, 35);
        
        
        fluenciaVerbalTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        fluenciaVerbalTable.packAll();
        fluenciaVerbalTable.getColumn(1).setPreferredWidth(150);
        fluenciaVerbalTable.getColumn(3).setPreferredWidth(150);
        fluenciaVerbalTable.getColumn(5).setPreferredWidth(150);
        fluenciaVerbalTable.getColumn(7).setPreferredWidth(150);
    }

    private int calculaMLI(int punt) {
        int percentil = 0;
        int edat = pacientActual.getEdat();
        if(edat <= 64){
            if (punt <=3){
               percentil = 1; 
            } else if (punt>=4 && punt<=5){
                percentil = 2;
            }else if (punt>=6 && punt<=7){
                percentil = 3;
            }else if (punt==8){
                percentil = 4;
            }else if (punt>=9 && punt<=10){
                percentil = 5;
            }else if (punt>=11 && punt<=12){
                percentil = 6;
            }else if (punt>=13 && punt<=14){
                percentil = 7;
            }else if (punt>=15 && punt<=17){
                percentil = 8;
            }else if (punt>=18 && punt<=19){
                percentil = 9;
            }else if (punt>=20 && punt<=21){
                percentil = 10;
            }else if (punt>=22 && punt<=23){
                percentil = 11;
            }else if (punt>=24 && punt<=25){
                percentil = 12;
            }else if (punt>=26 && punt<=28){
                percentil = 13;
            }else if (punt>=29 && punt<=30){
                percentil = 14;
            }else if (punt>=31 && punt<=32){
                percentil = 15;
            }else if (punt>=33 && punt<=35){
                percentil = 16;
            }else if (punt>=36 && punt<=37){
                percentil = 17;
            }else if (punt>=38 && punt<=40){
                percentil = 18;
            }else if (punt>=41){
                percentil = 19;
            }
            
        } else if (edat >= 65 && edat<=69){
            
            if (punt <=4){
               percentil = 1; 
            } else if (punt>=5 && punt<=6){
                percentil = 2;
            }else if (punt>=7 && punt<=9){
                percentil = 3;
            }else if (punt>=10 && punt<=11){
                percentil = 4;
            }else if (punt>=12 && punt<=14){
                percentil = 5;
            }else if (punt>=15 && punt<=17){
                percentil = 6;
            }else if (punt>=18 && punt<=19){
                percentil = 7;
            }else if (punt>=20 && punt<=22){
                percentil = 8;
            }else if (punt>=23 && punt<=24){
                percentil = 9;
            }else if (punt>=25 && punt<=27){
                percentil = 10;
            }else if (punt>=28 && punt<=30){
                percentil = 11;
            }else if (punt>=31 && punt<=33){
                percentil = 12;
            }else if (punt>=34 && punt<=35){
                percentil = 13;
            }else if (punt>=36 && punt<=38){
                percentil = 14;
            }else if (punt>=39 && punt<=41){
                percentil = 15;
            }else if (punt>=42 && punt<=44){
                percentil = 16;
            }else if (punt>=45 && punt<=47){
                percentil = 17;
            }else if (punt>=48 && punt<=50){
                percentil = 18;
            }else if (punt>=51){
                percentil = 19;
            }
            
        } else if (edat >= 70 && edat<=74){
            
            if (punt <=3){
               percentil = 1; 
            } else if (punt>=4 && punt<=5){
                percentil = 2;
            }else if (punt>=6 && punt<=8){
                percentil = 3;
            }else if (punt>=9 && punt<=10){
                percentil = 4;
            }else if (punt>=11 && punt<=12){
                percentil = 5;
            }else if (punt>=13 && punt<=15){
                percentil = 6;
            }else if (punt>=16 && punt<=17){
                percentil = 7;
            }else if (punt>=18 && punt<=20){
                percentil = 8;
            }else if (punt>=21 && punt<=22){
                percentil = 9;
            }else if (punt>=23 && punt<=25){
                percentil = 10;
            }else if (punt>=26 && punt<=28){
                percentil = 11;
            }else if (punt>=29 && punt<=31){
                percentil = 12;
            }else if (punt>=32 && punt<=34){
                percentil = 13;
            }else if (punt>=35 && punt<=37){
                percentil = 14;
            }else if (punt>=38 && punt<=40){
                percentil = 15;
            }else if (punt>=41 && punt<=43){
                percentil = 16;
            }else if (punt>=44 && punt<=46){
                percentil = 17;
            }else if (punt>=47 && punt<=49){
                percentil = 18;
            }else if (punt>=50){
                percentil = 19;
            }
            
        }else if (edat >= 75 && edat<=79){
            
            if (punt <=1){
               percentil = 1; 
            } else if (punt>=2 && punt<=3){
                percentil = 2;
            }else if (punt>=4 && punt<=6){
                percentil = 3;
            }else if (punt>=7 && punt<=8){
                percentil = 4;
            }else if (punt>=9 && punt<=10){
                percentil = 5;
            }else if (punt>=11 && punt<=13){
                percentil = 6;
            }else if (punt>=14 && punt<=16){
                percentil = 7;
            }else if (punt>=17 && punt<=18){
                percentil = 8;
            }else if (punt>=19 && punt<=21){
                percentil = 9;
            }else if (punt>=22 && punt<=23){
                percentil = 10;
            }else if (punt>=24 && punt<=26){
                percentil = 11;
            }else if (punt>=27 && punt<=29){
                percentil = 12;
            }else if (punt>=30 && punt<=32){
                percentil = 13;
            }else if (punt>=33 && punt<=35){
                percentil = 14;
            }else if (punt>=36 && punt<=38){
                percentil = 15;
            }else if (punt>=39 && punt<=41){
                percentil = 16;
            }else if (punt>=42 && punt<=44){
                percentil = 17;
            }else if (punt>=45 && punt<=47){
                percentil = 18;
            }else if (punt>=48){
                percentil = 19;
            }
            
        }else if (edat >= 80){
            
            if (punt == 0){
               percentil = 2; 
            }else if (punt>=1 && punt<=2){
                percentil = 3;
            }else if (punt>=3 && punt<=5){
                percentil = 4;
            }else if (punt>=6 && punt<=7){
                percentil = 5;
            }else if (punt>=8 && punt<=10){
                percentil = 6;
            }else if (punt>=11 && punt<=12){
                percentil = 7;
            }else if (punt>=13 && punt<=15){
                percentil = 8;
            }else if (punt>=16 && punt<=17){
                percentil = 9;
            }else if (punt>=18 && punt<=20){
                percentil = 10;
            }else if (punt>=21 && punt<=23){
                percentil = 11;
            }else if (punt>=24 && punt<=26){
                percentil = 12;
            }else if (punt>=27 && punt<=29){
                percentil = 13;
            }else if (punt>=30 && punt<=32){
                percentil = 14;
            }else if (punt>=33 && punt<=35){
                percentil = 15;
            }else if (punt>=36 && punt<=38){
                percentil = 16;
            }else if (punt>=39 && punt<=41){
                percentil = 17;
            }else if (punt>=42 && punt<=44){
                percentil = 18;
            }else if (punt>=45){
                percentil = 19;
            }
            
        }
        
        return percentil;
    }

    private int calculaMLII(int punt) {
        int edat = pacientActual.getEdat();
        int percentil = 0;
        
        if(edat <= 64){
            if (punt == 0){
               percentil = 2;
            }else if (punt>=1 && punt<=2){
                percentil = 3;
            }else if (punt>=3 && punt<=4){
                percentil = 4;
            }else if (punt>=5 && punt<=7){
                percentil = 5;
            }else if (punt>=8 && punt<=9){
                percentil = 6;
            }else if (punt>=10 && punt<=11){
                percentil = 7;
            }else if (punt>=12 && punt<=13){
                percentil = 8;
            }else if (punt>=14 && punt<=15){
                percentil = 9;
            }else if (punt>=16 && punt<=17){
                percentil = 10;
            }else if (punt>=18 && punt<=19){
                percentil = 11;
            }else if (punt>=20 && punt<=21){
                percentil = 12;
            }else if (punt>=22 && punt<=23){
                percentil = 13;
            }else if (punt>=24 && punt<=25){
                percentil = 14;
            }else if (punt>=26 && punt<=27){
                percentil = 15;
            }else if (punt>=28 && punt<=29){
                percentil = 16;
            }else if (punt>=30 && punt<=31){
                percentil = 17;
            }else if (punt>=32 && punt<=33){
                percentil = 18;
            }else if (punt>=34){
                percentil = 19;
            }
            
        } else if (edat >= 65 && edat<=69){
            
            if (punt ==0){
               percentil = 2; 
            } else if (punt==1){
                percentil = 3;
            }else if (punt>=2 && punt<=3){
                percentil = 4;
            }else if (punt==4){
                percentil = 5;
            }else if (punt>=5 && punt<=6){
                percentil = 6;
            }else if (punt>=7 && punt<=8){
                percentil = 7;
            }else if (punt>=9 && punt<=10){
                percentil = 8;
            }else if (punt>=11 && punt<=12){
                percentil = 9;
            }else if (punt>=13 && punt<=14){
                percentil = 10;
            }else if (punt>=15 && punt<=16){
                percentil = 11;
            }else if (punt>=17 && punt<=18){
                percentil = 12;
            }else if (punt>=19 && punt<=21){
                percentil = 13;
            }else if (punt>=22 && punt<=23){
                percentil = 14;
            }else if (punt>=24 && punt<=26){
                percentil = 15;
            }else if (punt>=27 && punt<=29){
                percentil = 16;
            }else if (punt>=30 && punt<=32){
                percentil = 17;
            }else if (punt>=33 && punt<=35){
                percentil = 18;
            }else if (punt>=36){
                percentil = 19;
            }
            
        } else if (edat >= 70 && edat<=74){
            
            if (punt == 0){
               percentil = 4; 
            } else if (punt>=1 && punt<=2){
                percentil = 5;
            }else if (punt==3){
                percentil = 6;
            }else if (punt>=4 && punt<=5){
                percentil = 7;
            }else if (punt>=6 && punt<=7){
                percentil = 8;
            }else if (punt>=8 && punt<=10){
                percentil = 9;
            }else if (punt>=11 && punt<=12){
                percentil = 10;
            }else if (punt>=13 && punt<=14){
                percentil = 11;
            }else if (punt>=15 && punt<=17){
                percentil = 12;
            }else if (punt>=18 && punt<=19){
                percentil = 13;
            }else if (punt>=20 && punt<=22){
                percentil = 14;
            }else if (punt>=23 && punt<=25){
                percentil = 15;
            }else if (punt>=26 && punt<=28){
                percentil = 16;
            }else if (punt>=29 && punt<=32){
                percentil = 17;
            }else if (punt>=33 && punt<=34){
                percentil = 18;
            }else if (punt>=35){
                percentil = 19;
            }
            
        }else if (edat >= 75 && edat<=79){
            
            if (punt == 0){
               percentil = 4; 
            } else if (punt>=1 && punt<=2){
                percentil = 5;
            }else if (punt==3){
                percentil = 6;
            }else if (punt>=4 && punt<=5){
                percentil = 7;
            }else if (punt>=6 && punt<=7){
                percentil = 8;
            }else if (punt>=8 && punt<=9){
                percentil = 9;
            }else if (punt>=10 && punt<=11){
                percentil = 10;
            }else if (punt>=12 && punt<=13){
                percentil = 11;
            }else if (punt>=14 && punt<=15){
                percentil = 12;
            }else if (punt>=16 && punt<=17){
                percentil = 13;
            }else if (punt>=18 && punt<=20){
                percentil = 14;
            }else if (punt>=21 && punt<=22){
                percentil = 15;
            }else if (punt>=23 && punt<=25){
                percentil = 16;
            }else if (punt>=26 && punt<=28){
                percentil = 17;
            }else if (punt>=29 && punt<=31){
                percentil = 18;
            }else if (punt>=32){
                percentil = 19;
            }
            
        }else if (edat >= 80){
            
            if (punt>=0 && punt<=1){
                percentil = 6;
            }else if (punt>=2 && punt<=3){
                percentil = 7;
            }else if (punt==4){
                percentil = 8;
            }else if (punt>=5 && punt<=6){
                percentil = 9;
            }else if (punt>=7 && punt<=8){
                percentil = 10;
            }else if (punt>=9 && punt<=10){
                percentil = 11;
            }else if (punt>=11 && punt<=12){
                percentil = 12;
            }else if (punt>=13 && punt<=15){
                percentil = 13;
            }else if (punt>=16 && punt<=17){
                percentil = 14;
            }else if (punt>=18 && punt<=20){
                percentil = 15;
            }else if (punt>=21 && punt<=22){
                percentil = 16;
            }else if (punt>=23 && punt<=25){
                percentil = 17;
            }else if (punt>=26 && punt<=28){
                percentil = 18;
            }else if (punt>=29){
                percentil = 19;
            }
            
        }
        
        return percentil;
        
    }

    private void initHashBNTA() {
        
        taulaBNTA = new HashMap<>();
        List<Object> auxList;
        HashMap<Integer, List<Object>> auxMap = new HashMap<>();
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(0, auxList);
        auxMap.put(1, auxList);
        auxMap.put(2, auxList);
        auxMap.put(3, auxList);
        auxMap.put(4, auxList);
        auxMap.put(5, auxList);
        auxMap.put(6, auxList);
        auxMap.put(7, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(14, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(15, auxList);
        taulaBNTA.put("50-56", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(14, auxList);
        taulaBNTA.put("57-59", new HashMap(auxMap));
        
        taulaBNTA.put("60-62", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(7, auxList);
        taulaBNTA.put("63-65", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(14, auxList);
        taulaBNTA.put("66-68", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(9, auxList);
        taulaBNTA.put("69-71", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(11, auxList);
        taulaBNTA.put("72-74", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTA.put("75-77", new HashMap(auxMap));
        
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(17, "99");
        auxMap.put(14, auxList);
        taulaBNTA.put("78-80", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(5, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTA.put("81+", new HashMap(auxMap));
        
    }
    
    private void convertEdat(){
        int edatP = pacientActual.getEdat();
        String edat = "";
        if (edatP<=56){
            edat = "50-56";
        }
        else if (edatP>=57 && edatP<=59){
            edat = "57-59";
        }
        else if (edatP>=60 && edatP<=62){
            edat = "60-62";
        }
        else if (edatP>=63 && edatP<=65){
            edat = "63-65";
        }
        else if (edatP>=66 && edatP<=68){
            edat = "66-68";
        }
        else if (edatP>=69 && edatP<=71){
            edat = "69-71";
        }
        else if (edatP>=72 && edatP<=74){
            edat = "72-74";
        }
        else if (edatP>=75 && edatP<=77){
            edat = "75-77";
        }
        else if (edatP>=78 && edatP<=80){
            edat = "78-80";
        }
        else if (edatP<=81){
            edat = "81+";
        }
        edatPacient =  edat;
    }
    
    private void calcularBNTA() {
        List<Object> list;
        System.out.println(Integer.parseInt(correctesBntA.getText()));
        System.out.println(edatPacient);
        list = taulaBNTA.get(edatPacient).get(Integer.parseInt(correctesBntA.getText()));
        percentilBNTA.setText((String) list.get(1));
        
        int scaledScore = (int) list.get(0);
        
        int anysEscola = pacientActual.getAnysEscola();
        int modificador = 0;
        
        if (anysEscola == 0){
            modificador = 3;
        }
        else if (anysEscola >=1 && anysEscola <=4){
            modificador = 2;
        }
        else if (anysEscola >=5 && anysEscola <=8){
            modificador = 1;
        }
        else if (anysEscola >=9 && anysEscola <=12){
            modificador = 0;
        }
        else if (anysEscola >=13 && anysEscola <=15){
            modificador = -1;
        }
        else if (anysEscola >=16 && anysEscola <=19){
            modificador = -2;
        }
        else if (anysEscola == 20){
            modificador = -3;
        }
        
        nssaBNTA.setText(scaledScore+modificador+"");
    }

    private void initHashBNTB() {
        taulaBNTB = new HashMap<>();
        List<Object> auxList;
        HashMap<Integer, List<Object>> auxMap = new HashMap<>();
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(0, auxList);
        auxMap.put(1, auxList);
        auxMap.put(2, auxList);
        auxMap.put(3, auxList);
        auxMap.put(4, auxList);
        auxMap.put(5, auxList);
        auxMap.put(6, auxList);
        auxMap.put(7, auxList);
        auxList = Arrays.asList(3, "1");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(14, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(15, auxList);
        taulaBNTB.put("50-56", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(10, auxList);
        taulaBNTB.put("57-59", new HashMap(auxMap));
        
        taulaBNTB.put("60-62", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTB.put("63-65", new HashMap(auxMap));
        
        taulaBNTB.put("66-68", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(14, auxList);
        taulaBNTB.put("69-71", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTB.put("72-74", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(9, auxList);
        taulaBNTB.put("75-77", new HashMap(auxMap));
        
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(17, "99");
        auxMap.put(14, auxList);
        taulaBNTB.put("78-80", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTB.put("81+", new HashMap(auxMap));
    }
    
    private void calcularBNTB() {
        List<Object> list;
        System.out.println(Integer.parseInt(correctesBntB.getText()));
        System.out.println(edatPacient);
        list = taulaBNTB.get(edatPacient).get(Integer.parseInt(correctesBntB.getText()));
        percentilBNTB.setText((String) list.get(1));
        
        int scaledScore = (int) list.get(0);
        
        int anysEscola = pacientActual.getAnysEscola();
        int modificador = 0;
        
        if (anysEscola == 0){
            modificador = 0;
        }
        else if (anysEscola == 1){
            modificador = 3;
        }
        else if (anysEscola >=2 && anysEscola <=4){
            modificador = 2;
        }
        else if (anysEscola >=6 && anysEscola <=9){
            modificador = 1;
        }
        else if (anysEscola >=10 && anysEscola <=13){
            modificador = 0;
        }
        else if (anysEscola >=14 && anysEscola <=16){
            modificador = -1;
        }
        else if (anysEscola >=16 && anysEscola <=20){
            modificador = -2;
        }
        
        nssaBNTB.setText(scaledScore+modificador+"");
    }

    private void initHashBNTC() {
        taulaBNTC = new HashMap<>();
        List<Object> auxList;
        HashMap<Integer, List<Object>> auxMap = new HashMap<>();
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(0, auxList);
        auxMap.put(1, auxList);
        auxMap.put(2, auxList);
        auxMap.put(3, auxList);
        auxMap.put(4, auxList);
        auxMap.put(5, auxList);
        auxMap.put(6, auxList);
        auxMap.put(7, auxList);
        auxMap.put(8, auxList);
        auxMap.put(9, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(14, auxList);
        auxList = Arrays.asList(18, ">99");
        auxMap.put(15, auxList);
        taulaBNTC.put("50-56", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(13, auxList);
        taulaBNTC.put("57-59", new HashMap(auxMap));
        
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(10, auxList);
        taulaBNTC.put("60-62", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(14, auxList);
        taulaBNTC.put("63-65", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(11, "60-71");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(14, auxList);
        taulaBNTC.put("66-68", new HashMap(auxMap));
        
        auxList = Arrays.asList(2, "<1");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(4, "2");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(10, "41-59");
        auxMap.put(11, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(13, auxList);
        taulaBNTC.put("69-71", new HashMap(auxMap));
        
        auxList = Arrays.asList(3, "1");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(5, "3-5");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(13, "82-89");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(14, auxList);
        taulaBNTC.put("72-74", new HashMap(auxMap));
        
        auxList = Arrays.asList(7, "11-18");
        auxMap.put(8, auxList);
        taulaBNTC.put("75-77", new HashMap(auxMap));
        
        auxList = Arrays.asList(6, "6-10");
        auxMap.put(7, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(8, auxList);
        auxList = Arrays.asList(8, "19-28");
        auxMap.put(9, auxList);
        auxList = Arrays.asList(9, "29-40");
        auxMap.put(10, auxList);
        auxList = Arrays.asList(12, "72-81");
        auxMap.put(12, auxList);
        auxList = Arrays.asList(15, "95-97");
        auxMap.put(14, auxList);
        taulaBNTC.put("78-80", new HashMap(auxMap));
        
        auxList = Arrays.asList(4, "2");
        auxMap.put(6, auxList);
        auxList = Arrays.asList(14, "90-94");
        auxMap.put(13, auxList);
        auxList = Arrays.asList(16, "98");
        auxMap.put(14, auxList);
        taulaBNTC.put("81+", new HashMap(auxMap));
    }
    
    private void calcularBNTC() {
        List<Object> list;
        System.out.println(Integer.parseInt(correctesBntC.getText()));
        System.out.println(edatPacient);
        list = taulaBNTC.get(edatPacient).get(Integer.parseInt(correctesBntC.getText()));
        percentilBNTC.setText((String) list.get(1));
        
        int scaledScore = (int) list.get(0);
        
        int anysEscola = pacientActual.getAnysEscola();
        int modificador = 0;
        
        if (anysEscola == 0){
            modificador = 4;
        }
        else if (anysEscola >=1 && anysEscola <=3){
            modificador = 3;
        }
        else if (anysEscola >=4 && anysEscola <=6){
            modificador = 2;
        }
        else if (anysEscola >=7 && anysEscola <=9){
            modificador = 1;
        }
        else if (anysEscola >=10 && anysEscola <=12){
            modificador = 0;
        }
        else if (anysEscola >=13 && anysEscola <=14){
            modificador = -1;
        }
        else if (anysEscola >=15 && anysEscola <=17){
            modificador = -2;
        }
        else if (anysEscola >=18 && anysEscola <=20){
            modificador = -3;
        }
        
        nssaBNTC.setText(scaledScore+modificador+"");
    }

    private void initCogstateButtons() {
        File file = new File(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE_T"+valoracio+".pdf");
        if (file.exists()){
            obrePdfBtn.setEnabled(true);
        }
        file = new File(Utils.PACIENT_DATA_PATH+this.pacientActual.getId()+File.separator+this.pacientActual.getId()+"COGSTATE_T"+valoracio+".xlsx");
        if (file.exists()){
            obreExcelBtn.setEnabled(true);
        }
    }
    
    private void guardarResultats(){
        Properties prop = new Properties();
	OutputStream output = null;

	try {
            
        File f = new File(Utils.PACIENT_DATA_PATH+pacientActual.getId()+File.separator);
            if (!f.exists()){
                f.mkdir();
            }
            File file = new File(Utils.PACIENT_DATA_PATH+pacientActual.getId()+File.separator+"resultsSessio1_T"+valoracio+".dat");
                
		output = new FileOutputStream(file);
                
        // Digits directe
        Utils.setProperty(prop,"puntuacioDirectaDD",puntuacioDirectaDD);
        Utils.setProperty(prop,"spanDD",spanDD);
        Utils.setProperty(prop,"nssaDD",nssaDD);
        Utils.setProperty(prop,"percentilDD",percentilDD);
        // Digits invers
        Utils.setProperty(prop,"puntuacioDirectaDI",puntuacioDirectaDI);
        Utils.setProperty(prop,"spanDI",spanDI);
        Utils.setProperty(prop,"nssaDI",nssaDI);
        Utils.setProperty(prop,"percentilDI",percentilDI);
        // Memoria logica I
        Utils.setProperty(prop,"historiaAprimerTotal",historiaAprimerTotal);
        Utils.setProperty(prop,"textHistoriaAprimer",textHistoriaAprimer);
        Utils.setProperty(prop,"historiaAsegonTotal",historiaAsegonTotal);
        Utils.setProperty(prop,"textHistoriaAsegon",textHistoriaAsegon);
        Utils.setProperty(prop,"historiaBprimerTotal",historiaBprimerTotal);
        Utils.setProperty(prop,"textHistoriaBprimer",textHistoriaBprimer);
        Utils.setProperty(prop,"ML1Total",ML1Total);
        Utils.setProperty(prop,"puntuacioML1",puntuacioML1);
        // Memoria logica II
        Utils.setProperty(prop,"historiaAprimerTotal2",historiaAprimerTotal2);
        Utils.setProperty(prop,"textHistoriaAprimer2",textHistoriaAprimer2);
        Utils.setProperty(prop,"historiaBprimerTotal2",historiaBprimerTotal2);
        Utils.setProperty(prop,"textHistoriaBprimer2",textHistoriaBprimer2);
        Utils.setProperty(prop,"ML2Total",ML2Total);
        Utils.setProperty(prop,"puntuacioML2",puntuacioML2);
        Utils.setProperty(prop,"totalRecA",totalRecA);
        Utils.setProperty(prop,"totalRecB",totalRecB);
        Utils.setProperty(prop,"totalRec",totalRec);
        
        if (valoracio.equals("1")){
            // BNT A
            Utils.setProperty(prop,"totalBnt"+valoracio,totalBntA);
            Utils.setProperty(prop,"semanticaBnt"+valoracio,semanticaBntA);
            Utils.setProperty(prop,"percentilBNT"+valoracio,percentilBNTA);
            Utils.setProperty(prop,"nssaBNT"+valoracio,nssaBNTA);
        } else if (valoracio.equals("2")){
            // BNT B
            Utils.setProperty(prop,"totalBnt"+valoracio,totalBntB);
            Utils.setProperty(prop,"semanticaBnt"+valoracio,semanticaBntB);
            Utils.setProperty(prop,"percentilBNT"+valoracio,percentilBNTB);
            Utils.setProperty(prop,"nssaBNT"+valoracio,nssaBNTB);
        } else if (valoracio.equals("3")){
            // BNT C
            Utils.setProperty(prop,"totalBnt"+valoracio,totalBntC);
            Utils.setProperty(prop,"semanticaBnt"+valoracio,semanticaBntC);
            Utils.setProperty(prop,"percentilBNT"+valoracio,percentilBNTC);
            Utils.setProperty(prop,"nssaBNT"+valoracio,nssaBNTC);
        }
        
        // Color trails 1 time in seconds
            System.out.println((String)colorTrailsTable.getValueAt(0,1));
        prop.setProperty("color1timeRaw",getStringFromTable((String)colorTrailsTable.getValueAt(0,1)));
        prop.setProperty("color1timeStandard",getStringFromTable((String)colorTrailsTable.getValueAt(0,3)));
        prop.setProperty("color1timeTscore",getStringFromTable((String)colorTrailsTable.getValueAt(0,4)));
        prop.setProperty("color1timePercentile",getStringFromTable((String)colorTrailsTable.getValueAt(0,5)));
        // Color trails 1 errors
        prop.setProperty("color1errorRaw",getStringFromTable((String)colorTrailsTable.getValueAt(1,1)));
        prop.setProperty("color1errorPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(1,2)));
        // Color trails 1 Near misses
        prop.setProperty("color1nearRaw",getStringFromTable((String)colorTrailsTable.getValueAt(2,1)));
        prop.setProperty("color1nearPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(2,2)));
        // Color trails 1 prompts
        prop.setProperty("color1promptsRaw",getStringFromTable((String)colorTrailsTable.getValueAt(3,1)));
        prop.setProperty("color1promptsPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(3,2)));
        // Color trails 2 time in seconds
        prop.setProperty("color2timeRaw",getStringFromTable((String)colorTrailsTable.getValueAt(4,1)));
        prop.setProperty("color2timeStandard",getStringFromTable((String)colorTrailsTable.getValueAt(4,3)));
        prop.setProperty("color2timeTscore",getStringFromTable((String)colorTrailsTable.getValueAt(4,4)));
        prop.setProperty("color2timePercentile",getStringFromTable((String)colorTrailsTable.getValueAt(4,5)));
        // Color trails 2 errors
        prop.setProperty("color2errorRaw",getStringFromTable((String)colorTrailsTable.getValueAt(5,1)));
        prop.setProperty("color2errorPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(5,2)));
        // Color trails 2 Near misses
        prop.setProperty("color2nearRaw",getStringFromTable((String)colorTrailsTable.getValueAt(6,1)));
        prop.setProperty("color2nearPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(6,2)));
        // Color trails 2 prompts
        prop.setProperty("color2promptsRaw",getStringFromTable((String)colorTrailsTable.getValueAt(7,1)));
        prop.setProperty("color2promptsPercentile",getStringFromTable((String)colorTrailsTable.getValueAt(7,2)));
        // Color trails interference index
        prop.setProperty("colorInterferenceRaw",getStringFromTable((String)colorTrailsTable.getValueAt(8,1)));
        prop.setProperty("colorInterferencePercentile",getStringFromTable((String)colorTrailsTable.getValueAt(8,2)));
        // Five digit
        Utils.setProperty(prop,"lecturaTemps",lecturaTemps);
        Utils.setProperty(prop,"lecturaTempsPCField",lecturaTempsPCField);
        Utils.setProperty(prop,"lecturaErrorsField",lecturaErrors);
        Utils.setProperty(prop,"lecturaErrorsPCField",lecturaErrorsPCField);
        // Five digit
        Utils.setProperty(prop,"compteigTemps",compteigTemps);
        Utils.setProperty(prop,"compteigTempsPCField",compteigTempsPCField);
        Utils.setProperty(prop,"compteigErrors",compteigErrors);
        Utils.setProperty(prop,"compteigErrorsPCField",compteigErrorsPCField);
        // Five digit
        Utils.setProperty(prop,"lecturaTemps",eleccioTemps);
        Utils.setProperty(prop,"lecturaTempsPCField",eleccioTempsPCField);
        Utils.setProperty(prop,"lecturaErrorsField",eleccioErrors);
        Utils.setProperty(prop,"lecturaErrorsPCField",eleccioErrorsPCField);
        // Five digit
        Utils.setProperty(prop,"alternTemps",alternTemps);
        Utils.setProperty(prop,"alternTempsPCField",alternTempsPCField);
        Utils.setProperty(prop,"alternErrors",alternErrors);
        Utils.setProperty(prop,"alternErrorsPCField",alternErrorsPCField);
        // Five digit
        Utils.setProperty(prop,"inhibicioPCField",inhibicioPCField);
        Utils.setProperty(prop,"flexibilitatPCField",flexibilitatPCField);
        // Fluencia verbal
        prop.setProperty("fluenciaP",getStringFromTable((String)fluenciaVerbalTable.getValueAt(25,1)));
        prop.setProperty("fluenciaM",getStringFromTable((String)fluenciaVerbalTable.getValueAt(25,3)));
        prop.setProperty("fluenciaR",getStringFromTable((String)fluenciaVerbalTable.getValueAt(25,5)));
        prop.setProperty("fluenciaAnimals",getStringFromTable((String)fluenciaVerbalTable.getValueAt(25,7)));

        prop.store(output, "Sessio1");
                

	} catch (IOException io) {
		io.printStackTrace();
        } finally {
            if (output != null) {
		try {
                    output.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
	}
    }

    private String getStringFromTable(String string) {
        if (string != null){
            return string;
        }
        else {
            return "";
        }
    }
}

class customRenderer extends javax.swing.table.DefaultTableCellRenderer {
    Color color = java.awt.Color.WHITE;
    boolean cust = false;
    boolean[][] customColors;
    
    public customRenderer (Color color, boolean center){
        this.color = color;
        if (center){
            this.setHorizontalAlignment( JLabel.CENTER );
        }
    }
    
    public customRenderer (Color color, boolean[][] customColors,boolean center){
        setOpaque(true);
        this.customColors = customColors;
        this.cust = true;
        this.color = color;
        if (center){
            this.setHorizontalAlignment( JLabel.CENTER );
        }
    }
    
    public customRenderer (boolean center){
        if (center){
            this.setHorizontalAlignment( JLabel.CENTER );
        }
    }
        
    public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, java.lang.Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        java.awt.Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        if(cust){
            if (row == 0 && column == 1 || row == 3 && column == 4){//customColors[row][column]){
                cellComponent.setBackground(java.awt.Color.ORANGE);
            }
            else {
                cellComponent.setBackground(java.awt.Color.WHITE);
            }
        }else {
            cellComponent.setBackground(color);
        }
        return cellComponent;
    }
}

class customModel extends DefaultTableModel{
    
    boolean[][] customEdit;
    boolean cust = false;
            
    public customModel(Object[][] data, Object[] columnNames){
        super(data,columnNames);
    }
    Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
    };
    boolean[] canEdit = new boolean [] {
        false, false, true, true, false
    };

    public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
    }

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        if (cust)
            return customEdit [columnIndex][rowIndex];
        else
            return canEdit [columnIndex];
    }

    public void setEditable(int column, boolean value){
        canEdit[column] = value;
    }
    
    public void setEditable(int column, int row, boolean value){
        customEdit[column] [row] = value;
    }

    public void setTypes(Class[] types){
        this.types = types;
    }

    void setCanEdit(boolean[] canEdit) {
        this.canEdit = canEdit;
    }
    
    void setCanEditMatrix(boolean[][] customEdit) {
        this.customEdit = customEdit;
    }
    
    void setCustom(boolean cust){
        this.cust = cust;
    }
}