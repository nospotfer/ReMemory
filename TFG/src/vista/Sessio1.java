/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTable;
import javax.swing.UIManager;
import controlador.ButtonColumn;
import controlador.VerticalTableHeaderCellRenderer;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.text.Highlighter;
import org.jdesktop.swingx.decorator.HighlighterFactory;

/**
 *
 * @author USER
 */
public class Sessio1 extends javax.swing.JFrame {

    int pagina = 0;
    int numPaginesTotal = 2;
    
    /**
     * Creates new form Sessio1
     */
    public Sessio1() {
        initComponents();
        
        initTabs();
        
        initDigitsDirecteTable();
        initDigitsInversTable();
        
        initML1ATable();
        initML1BTable();
        
        initML2ATable();
        initML2BTable();
        initML2RecTable();
        
        initBNTATable();
        initBNTBTable();
        initBNTCTable();
        
        anteriorBtn.setEnabled(false);
        this.toFront();
        this.repaint();
    
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        dataPanel = new javax.swing.JPanel();
        tabbedPanel = new javax.swing.JTabbedPane();
        digitsTab = new javax.swing.JPanel();
        digitsDirecteScroll = new javax.swing.JScrollPane();
        digitsDirectePanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        digitsDirecteTable = new org.jdesktop.swingx.JXTable();
        jPanel9 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jLabel85 = new javax.swing.JLabel();
        percentilDD = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        nssaDD = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        puntuacioDirectaDD = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        spanDD = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        digitsInversScroll = new javax.swing.JScrollPane();
        digitsInversPanel = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        digitsInversTable = new org.jdesktop.swingx.JXTable();
        jPanel11 = new javax.swing.JPanel();
        jLabel89 = new javax.swing.JLabel();
        puntuacioDirectaDI = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        spanDI = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel91 = new javax.swing.JLabel();
        percentilDI = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        nssaDI = new javax.swing.JLabel();
        ML1Tab = new javax.swing.JPanel();
        ML1Scroll = new javax.swing.JScrollPane();
        ML1Panel = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ML1ATable = new org.jdesktop.swingx.JXTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        historiaAprimerTotal = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        historiaAsegonTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textHistoriaAprimer = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textHistoriaAsegon = new javax.swing.JTextArea();
        resetHistoriaA = new javax.swing.JButton();
        ML1Scroll2 = new javax.swing.JScrollPane();
        ML1Panel1 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        ML1BTable = new org.jdesktop.swingx.JXTable();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        textHistoriaBprimer = new javax.swing.JTextArea();
        jLabel43 = new javax.swing.JLabel();
        resetHistoriaB = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        puntuacioML1 = new javax.swing.JLabel();
        ML1Total = new javax.swing.JLabel();
        historiaBprimerTotal = new javax.swing.JLabel();
        ML2Tab = new javax.swing.JPanel();
        ML2Scroll1 = new javax.swing.JScrollPane();
        ML2Panel2 = new javax.swing.JPanel();
        jLabel109 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        ML2ATable = new org.jdesktop.swingx.JXTable();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        historiaAprimerTotal2 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        textHistoriaAprimer2 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        resetHistoriaA1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ML2Scroll3 = new javax.swing.JScrollPane();
        MLPanel3 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        ML2BTable = new org.jdesktop.swingx.JXTable();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jScrollPane14 = new javax.swing.JScrollPane();
        textHistoriaBprimer2 = new javax.swing.JTextArea();
        jLabel54 = new javax.swing.JLabel();
        resetHistoriaB1 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        puntuacioML2 = new javax.swing.JLabel();
        ML2Total = new javax.swing.JLabel();
        historiaBprimerTotal2 = new javax.swing.JLabel();
        ML2Scroll4 = new javax.swing.JScrollPane();
        ML2Panel4 = new javax.swing.JPanel();
        jLabel113 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        ML2RecTableA = new org.jdesktop.swingx.JXTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        totalRecA = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        ML2RecTableB = new org.jdesktop.swingx.JXTable();
        jLabel59 = new javax.swing.JLabel();
        totalRecB = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        totalRec = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BNTTab = new javax.swing.JPanel();
        BNTScroll5 = new javax.swing.JScrollPane();
        MLPanel4 = new javax.swing.JPanel();
        jLabel111 = new javax.swing.JLabel();
        jScrollPane16 = new javax.swing.JScrollPane();
        BNTATable = new org.jdesktop.swingx.JXTable();
        jLabel62 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        resetHistoriaB2 = new javax.swing.JButton();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        semanticaBntA = new javax.swing.JLabel();
        correctesBntA = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        totalBntA = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel81 = new javax.swing.JLabel();
        puntuacioML7 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        puntuacioML8 = new javax.swing.JLabel();
        BNTScroll6 = new javax.swing.JScrollPane();
        MLPanel5 = new javax.swing.JPanel();
        jLabel112 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        BNTBTable = new org.jdesktop.swingx.JXTable();
        jLabel63 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        resetHistoriaB3 = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel73 = new javax.swing.JLabel();
        puntuacioML4 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        puntuacioML6 = new javax.swing.JLabel();
        semanticaBntB = new javax.swing.JLabel();
        correctesBntB = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        totalBntB = new javax.swing.JLabel();
        BNTScroll7 = new javax.swing.JScrollPane();
        MLPanel6 = new javax.swing.JPanel();
        jLabel114 = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        BNTCTable = new org.jdesktop.swingx.JXTable();
        jLabel64 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        resetHistoriaB4 = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        semanticaBntC = new javax.swing.JLabel();
        correctesBntC = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        totalBntC = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel83 = new javax.swing.JLabel();
        puntuacioML9 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        puntuacioML10 = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        acceptaBtn = new javax.swing.JButton();
        cancelaBtn = new javax.swing.JButton();
        anteriorBtn = new javax.swing.JButton();
        seguentBtn = new javax.swing.JButton();
        paginaLabel = new javax.swing.JLabel();
        paginaLabel2 = new javax.swing.JLabel();
        sepBottom = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sessió 1");
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        mainPanel.setLayout(new java.awt.BorderLayout());

        dataPanel.setLayout(new java.awt.BorderLayout());

        tabbedPanel.setToolTipText("");
        tabbedPanel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        digitsTab.setLayout(new java.awt.CardLayout());

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Dígits directe");

        digitsDirecteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digitsDirecteTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        digitsDirecteTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        digitsDirecteTable.setRowSelectionAllowed(false);
        digitsDirecteTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        digitsDirecteTable.setSortable(false);
        digitsDirecteTable.setSortsOnUpdates(false);
        jScrollPane4.setViewportView(digitsDirecteTable);
        if (digitsDirecteTable.getColumnModel().getColumnCount() > 0) {
            digitsDirecteTable.getColumnModel().getColumn(0).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(1).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(3).setResizable(false);
            digitsDirecteTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel9.setBackground(new java.awt.Color(250, 150, 70));

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setText("Calcular");

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel85.setText("<html>Percentil<br>range:");

        percentilDD.setBackground(new java.awt.Color(255, 255, 255));
        percentilDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilDD.setText("0");
        percentilDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilDD.setOpaque(true);

        jLabel86.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel86.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaDD.setBackground(new java.awt.Color(255, 255, 255));
        nssaDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaDD.setText("0");
        nssaDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaDD.setOpaque(true);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addGap(22, 22, 22)
                .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(percentilDD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nssaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(percentilDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nssaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(220, 218, 195));

        jLabel87.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel87.setText("<html>Puntuación directa<br>orden directo (DD)");

        puntuacioDirectaDD.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioDirectaDD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        puntuacioDirectaDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioDirectaDD.setText("0");
        puntuacioDirectaDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioDirectaDD.setOpaque(true);

        jLabel11.setText("(Max = 9)");

        jLabel88.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel88.setText("SpanDD");

        spanDD.setBackground(new java.awt.Color(255, 255, 255));
        spanDD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spanDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spanDD.setText("0");
        spanDD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        spanDD.setOpaque(true);

        jLabel12.setText("(Max = 16)");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(puntuacioDirectaDD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spanDD, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel88))
                    .addComponent(jLabel87, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puntuacioDirectaDD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout digitsDirectePanelLayout = new javax.swing.GroupLayout(digitsDirectePanel);
        digitsDirectePanel.setLayout(digitsDirectePanelLayout);
        digitsDirectePanelLayout.setHorizontalGroup(
            digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        digitsDirectePanelLayout.setVerticalGroup(
            digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsDirectePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addGroup(digitsDirectePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(digitsDirectePanelLayout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        digitsDirecteScroll.setViewportView(digitsDirectePanel);

        digitsTab.add(digitsDirecteScroll, "card1");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Dígits invers");

        digitsInversTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        digitsInversTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        digitsInversTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        digitsInversTable.setRowSelectionAllowed(false);
        digitsInversTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        digitsInversTable.setSortable(false);
        digitsInversTable.setSortsOnUpdates(false);
        jScrollPane5.setViewportView(digitsInversTable);
        if (digitsInversTable.getColumnModel().getColumnCount() > 0) {
            digitsInversTable.getColumnModel().getColumn(0).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(1).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(3).setResizable(false);
            digitsInversTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel11.setBackground(new java.awt.Color(220, 218, 195));

        jLabel89.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel89.setText("<html>Puntuación directa<br>orden directo (DI)");

        puntuacioDirectaDI.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioDirectaDI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        puntuacioDirectaDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioDirectaDI.setText("0");
        puntuacioDirectaDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioDirectaDI.setOpaque(true);

        jLabel13.setText("(Max = 9)");

        jLabel90.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel90.setText("SpanDI");

        spanDI.setBackground(new java.awt.Color(255, 255, 255));
        spanDI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        spanDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        spanDI.setText("0");
        spanDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        spanDI.setOpaque(true);

        jLabel14.setText("(Max = 16)");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spanDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(puntuacioDirectaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spanDI, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel90))
                    .addComponent(jLabel89, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puntuacioDirectaDI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(250, 150, 70));

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton9.setText("Calcular");

        jLabel91.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel91.setText("<html>Percentil<br>range:");

        percentilDI.setBackground(new java.awt.Color(255, 255, 255));
        percentilDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        percentilDI.setText("0");
        percentilDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        percentilDI.setOpaque(true);

        jLabel92.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel92.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        nssaDI.setBackground(new java.awt.Color(255, 255, 255));
        nssaDI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nssaDI.setText("0");
        nssaDI.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        nssaDI.setOpaque(true);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(percentilDI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nssaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(nssaDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(percentilDI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout digitsInversPanelLayout = new javax.swing.GroupLayout(digitsInversPanel);
        digitsInversPanel.setLayout(digitsInversPanelLayout);
        digitsInversPanelLayout.setHorizontalGroup(
            digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(digitsInversPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addGroup(digitsInversPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        digitsInversPanelLayout.setVerticalGroup(
            digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, digitsInversPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addGroup(digitsInversPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(digitsInversPanelLayout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        digitsInversScroll.setViewportView(digitsInversPanel);

        digitsTab.add(digitsInversScroll, "card2");

        tabbedPanel.addTab("DIGITS", digitsTab);

        ML1Tab.setLayout(new java.awt.CardLayout());

        jLabel106.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel106.setText("<html><center><b>Memoria Lògica I</b>");

        ML1ATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML1ATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML1ATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML1ATable.setRowSelectionAllowed(false);
        ML1ATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML1ATable.setSortable(false);
        ML1ATable.setSortsOnUpdates(false);
        jScrollPane6.setViewportView(ML1ATable);
        if (ML1ATable.getColumnModel().getColumnCount() > 0) {
            ML1ATable.getColumnModel().getColumn(0).setResizable(false);
            ML1ATable.getColumnModel().getColumn(1).setResizable(false);
            ML1ATable.getColumnModel().getColumn(3).setResizable(false);
            ML1ATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(65, 110, 160));
        jLabel32.setText("Total Historia A. Primer record:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(65, 110, 160));
        jLabel34.setText("Historia A");

        jLabel1.setText("La Maria i el Pedro són amics des de fa 30 anys. Cada dimarts queden per esmorzar al bar Cervantes.");

        jLabel3.setText("Després surten junts a passejar pel parc del Retiro.");

        historiaAprimerTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaAprimerTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAprimerTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAprimerTotal.setText("0");
        historiaAprimerTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAprimerTotal.setOpaque(true);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(65, 110, 160));
        jLabel36.setText("Total Historia A. Segon record:");

        historiaAsegonTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaAsegonTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAsegonTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAsegonTotal.setText("0");
        historiaAsegonTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAsegonTotal.setOpaque(true);

        textHistoriaAprimer.setColumns(20);
        textHistoriaAprimer.setRows(5);
        jScrollPane2.setViewportView(textHistoriaAprimer);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Transcripció primer record:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setText("Transcripció segon record:");

        textHistoriaAsegon.setColumns(20);
        textHistoriaAsegon.setRows(5);
        jScrollPane3.setViewportView(textHistoriaAsegon);

        resetHistoriaA.setText("Reset");
        resetHistoriaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ML1PanelLayout = new javax.swing.GroupLayout(ML1Panel);
        ML1Panel.setLayout(ML1PanelLayout);
        ML1PanelLayout.setHorizontalGroup(
            ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML1PanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3)
                                    .addGroup(ML1PanelLayout.createSequentialGroup()
                                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel35)
                                            .addComponent(resetHistoriaA)
                                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel32)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                                .addComponent(jLabel36)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAsegonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 109, Short.MAX_VALUE))
                                    .addComponent(jScrollPane2)))
                            .addGroup(ML1PanelLayout.createSequentialGroup()
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))))))
                .addContainerGap())
        );
        ML1PanelLayout.setVerticalGroup(
            ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1PanelLayout.createSequentialGroup()
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(historiaAprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(ML1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(historiaAsegonTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaA))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ML1Scroll.setViewportView(ML1Panel);

        ML1Tab.add(ML1Scroll, "card1");

        jLabel107.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel107.setText("<html><center><b>Memoria Lògica I</b>");

        ML1BTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML1BTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML1BTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML1BTable.setRowSelectionAllowed(false);
        ML1BTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML1BTable.setSortable(false);
        ML1BTable.setSortsOnUpdates(false);
        jScrollPane7.setViewportView(ML1BTable);
        if (ML1BTable.getColumnModel().getColumnCount() > 0) {
            ML1BTable.getColumnModel().getColumn(0).setResizable(false);
            ML1BTable.getColumnModel().getColumn(1).setResizable(false);
            ML1BTable.getColumnModel().getColumn(3).setResizable(false);
            ML1BTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(65, 110, 160));
        jLabel37.setText("Total Historia B. Primer record:");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(65, 110, 160));
        jLabel38.setText("Historia B");

        jLabel39.setText("<html>Elena Pérez, del sud de Madrid, treballadora com a cuinera al menjador d'una escola, va denunciar a la comissaria de <br> policia que havia estat assaltada la nit anterior al carrer Padilla, i que li havien robat 56 euros. Tenia quatre <br> nens petits, no havia pogut pagar el lloguer i portaven dos dies sense menjar. La policia, commoguda per la història <br> de la dona, va realitzar una col·lecta per ajudar-la.");

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(65, 110, 160));
        jLabel42.setText("Puntuació directa ML1:");

        textHistoriaBprimer.setColumns(20);
        textHistoriaBprimer.setRows(5);
        jScrollPane8.setViewportView(textHistoriaBprimer);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setText("Transcripció record:");

        resetHistoriaB.setText("Reset");
        resetHistoriaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaBActionPerformed(evt);
            }
        });

        jLabel45.setText("(max. 25)");

        jLabel46.setText("(max. 53)");

        jLabel47.setText("<html><b>Nota:</b> <i>Memoria lógica II</i> debe aplicarse transcurridos entre 20 y <br>30 minutos desde la aplicación de <i>Memoria lógica I</i>. ");

        jPanel1.setBackground(new java.awt.Color(38, 79, 131));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Calcular");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(105, 150, 200));
        jLabel44.setText("Puntuació escalar ML1:");

        puntuacioML1.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML1.setText("0");
        puntuacioML1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML1.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(puntuacioML1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44)
                    .addComponent(puntuacioML1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        ML1Total.setBackground(new java.awt.Color(255, 255, 255));
        ML1Total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ML1Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ML1Total.setText("0");
        ML1Total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ML1Total.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ML1Total.setOpaque(true);

        historiaBprimerTotal.setBackground(new java.awt.Color(255, 255, 255));
        historiaBprimerTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaBprimerTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal.setText("0");
        historiaBprimerTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaBprimerTotal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal.setOpaque(true);

        javax.swing.GroupLayout ML1Panel1Layout = new javax.swing.GroupLayout(ML1Panel1);
        ML1Panel1.setLayout(ML1Panel1Layout);
        ML1Panel1Layout.setHorizontalGroup(
            ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane8)
                                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                                .addComponent(jLabel42)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ML1Total, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel46))
                                            .addComponent(jLabel43)
                                            .addComponent(resetHistoriaB)
                                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                                .addComponent(jLabel37)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaBprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel45))
                                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 17, Short.MAX_VALUE))))
                            .addGroup(ML1Panel1Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        ML1Panel1Layout.setVerticalGroup(
            ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel107, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ML1Panel1Layout.createSequentialGroup()
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel37)
                            .addComponent(jLabel45)
                            .addComponent(historiaBprimerTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ML1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(ML1Total, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                .addContainerGap())
        );

        ML1Scroll2.setViewportView(ML1Panel1);

        ML1Tab.add(ML1Scroll2, "card2");

        tabbedPanel.addTab("ML1", ML1Tab);

        ML2Tab.setLayout(new java.awt.CardLayout());

        jLabel109.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel109.setText("<html><center><b>Memoria Lògica II</b>");

        ML2ATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2ATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2ATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2ATable.setRowSelectionAllowed(false);
        ML2ATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2ATable.setSortable(false);
        ML2ATable.setSortsOnUpdates(false);
        jScrollPane10.setViewportView(ML2ATable);
        if (ML2ATable.getColumnModel().getColumnCount() > 0) {
            ML2ATable.getColumnModel().getColumn(0).setResizable(false);
            ML2ATable.getColumnModel().getColumn(1).setResizable(false);
            ML2ATable.getColumnModel().getColumn(3).setResizable(false);
            ML2ATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(65, 110, 160));
        jLabel40.setText("Total Historia A (max 14):");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(65, 110, 160));
        jLabel41.setText("Historia A");

        jLabel2.setText("<html><b>Nota:</b> Memoria lógica II debe aplicarse transcurridos entre 20 y 30 minutos desde la aplicación de Memoria lógica I. ");

        historiaAprimerTotal2.setBackground(new java.awt.Color(255, 255, 255));
        historiaAprimerTotal2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaAprimerTotal2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaAprimerTotal2.setText("0");
        historiaAprimerTotal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaAprimerTotal2.setOpaque(true);

        textHistoriaAprimer2.setColumns(20);
        textHistoriaAprimer2.setRows(5);
        jScrollPane11.setViewportView(textHistoriaAprimer2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Transcripció record:");

        resetHistoriaA1.setText("Reset");
        resetHistoriaA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaA1ActionPerformed(evt);
            }
        });

        jLabel8.setText("La Maria i el Pedro són amics des de fa 30 anys. Cada dimarts queden per esmorzar al bar Cervantes.");

        jLabel9.setText("Després surten junts a passejar pel parc del Retiro.");

        javax.swing.GroupLayout ML2Panel2Layout = new javax.swing.GroupLayout(ML2Panel2);
        ML2Panel2.setLayout(ML2Panel2Layout);
        ML2Panel2Layout.setHorizontalGroup(
            ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane11)
                                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                                .addComponent(jLabel40)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaAprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(resetHistoriaA1)
                                            .addComponent(jLabel7))
                                        .addGap(0, 82, Short.MAX_VALUE))))
                            .addGroup(ML2Panel2Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        ML2Panel2Layout.setVerticalGroup(
            ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel109, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(ML2Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(historiaAprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaA1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ML2Scroll1.setViewportView(ML2Panel2);

        ML2Tab.add(ML2Scroll1, "card1");

        jLabel110.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel110.setText("<html><center><b>Memoria Lògica II</b>");

        ML2BTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2BTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2BTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2BTable.setRowSelectionAllowed(false);
        ML2BTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2BTable.setSortable(false);
        ML2BTable.setSortsOnUpdates(false);
        jScrollPane13.setViewportView(ML2BTable);
        if (ML2BTable.getColumnModel().getColumnCount() > 0) {
            ML2BTable.getColumnModel().getColumn(0).setResizable(false);
            ML2BTable.getColumnModel().getColumn(1).setResizable(false);
            ML2BTable.getColumnModel().getColumn(3).setResizable(false);
            ML2BTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(65, 110, 160));
        jLabel50.setText("Total Historia B:");

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(65, 110, 160));
        jLabel51.setText("Historia B");

        jLabel52.setText("<html>Elena Pérez, del sud de Madrid, treballadora com a cuinera al menjador d'una escola, va denunciar a la comissaria de <br> policia que havia estat assaltada la nit anterior al carrer Padilla, i que li havien robat 56 euros. Tenia quatre <br> nens petits, no havia pogut pagar el lloguer i portaven dos dies sense menjar. La policia, commoguda per la història <br> de la dona, va realitzar una col·lecta per ajudar-la.");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(65, 110, 160));
        jLabel53.setText("Puntuació directa MLII:");

        textHistoriaBprimer2.setColumns(20);
        textHistoriaBprimer2.setRows(5);
        jScrollPane14.setViewportView(textHistoriaBprimer2);

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel54.setText("Transcripció record:");

        resetHistoriaB1.setText("Reset");
        resetHistoriaB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB1ActionPerformed(evt);
            }
        });

        jLabel55.setText("(max. 25)");

        jLabel56.setText("(max. 39)");

        jPanel2.setBackground(new java.awt.Color(38, 79, 131));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Calcular");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(105, 150, 200));
        jLabel58.setText("Puntuació escalar MLII:");

        puntuacioML2.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML2.setText("0");
        puntuacioML2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML2.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(puntuacioML2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58)
                    .addComponent(puntuacioML2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        ML2Total.setBackground(new java.awt.Color(255, 255, 255));
        ML2Total.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ML2Total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ML2Total.setText("0");
        ML2Total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ML2Total.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ML2Total.setOpaque(true);

        historiaBprimerTotal2.setBackground(new java.awt.Color(255, 255, 255));
        historiaBprimerTotal2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        historiaBprimerTotal2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal2.setText("0");
        historiaBprimerTotal2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        historiaBprimerTotal2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        historiaBprimerTotal2.setOpaque(true);

        javax.swing.GroupLayout MLPanel3Layout = new javax.swing.GroupLayout(MLPanel3);
        MLPanel3.setLayout(MLPanel3Layout);
        MLPanel3Layout.setHorizontalGroup(
            MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MLPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane14)
                                    .addGroup(MLPanel3Layout.createSequentialGroup()
                                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel53)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ML2Total, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel56))
                                            .addComponent(jLabel54)
                                            .addComponent(resetHistoriaB1)
                                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel50)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(historiaBprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel55))
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 11, Short.MAX_VALUE))))
                            .addGroup(MLPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        MLPanel3Layout.setVerticalGroup(
            MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel3Layout.createSequentialGroup()
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(jLabel55)
                            .addComponent(historiaBprimerTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel53)
                            .addComponent(ML2Total, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel54)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 143, Short.MAX_VALUE))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE))
                .addContainerGap())
        );

        ML2Scroll3.setViewportView(MLPanel3);

        ML2Tab.add(ML2Scroll3, "card2");

        jLabel113.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel113.setText("<html><center><b>Memoria Lògica II</b>");

        ML2RecTableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2RecTableA.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2RecTableA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2RecTableA.setRowSelectionAllowed(false);
        ML2RecTableA.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2RecTableA.setSortable(false);
        ML2RecTableA.setSortsOnUpdates(false);
        jScrollPane12.setViewportView(ML2RecTableA);
        if (ML2RecTableA.getColumnModel().getColumnCount() > 0) {
            ML2RecTableA.getColumnModel().getColumn(0).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(1).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(3).setResizable(false);
            ML2RecTableA.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(65, 110, 160));
        jLabel48.setText("Total Reconeixement Historia A:");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(65, 110, 160));
        jLabel49.setText("Historia A");

        totalRecA.setBackground(new java.awt.Color(255, 255, 255));
        totalRecA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRecA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRecA.setText("0");
        totalRecA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRecA.setOpaque(true);

        ML2RecTableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ML2RecTableB.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ML2RecTableB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ML2RecTableB.setRowSelectionAllowed(false);
        ML2RecTableB.setSelectionBackground(new java.awt.Color(255, 255, 255));
        ML2RecTableB.setSortable(false);
        ML2RecTableB.setSortsOnUpdates(false);
        jScrollPane15.setViewportView(ML2RecTableB);
        if (ML2RecTableB.getColumnModel().getColumnCount() > 0) {
            ML2RecTableB.getColumnModel().getColumn(0).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(1).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(3).setResizable(false);
            ML2RecTableB.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(65, 110, 160));
        jLabel59.setText("Total Reconeixement Historia B:");

        totalRecB.setBackground(new java.awt.Color(255, 255, 255));
        totalRecB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRecB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRecB.setText("0");
        totalRecB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRecB.setOpaque(true);

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(65, 110, 160));
        jLabel61.setText("Historia B");

        jPanel3.setBackground(new java.awt.Color(220, 218, 195));

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(65, 110, 160));
        jLabel60.setText("Puntuació directa ML II-Reconexement");

        totalRec.setBackground(new java.awt.Color(255, 255, 255));
        totalRec.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalRec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalRec.setText("0");
        totalRec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalRec.setOpaque(true);

        jLabel4.setText("(Historia A + Historia B)");

        jLabel6.setText("(Màxim = 23)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalRec, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(totalRec, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout ML2Panel4Layout = new javax.swing.GroupLayout(ML2Panel4);
        ML2Panel4.setLayout(ML2Panel4Layout);
        ML2Panel4Layout.setHorizontalGroup(
            ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ML2Panel4Layout.createSequentialGroup()
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ML2Panel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel49))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ML2Panel4Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalRecA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ML2Panel4Layout.createSequentialGroup()
                                .addComponent(jLabel59)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalRecB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel61)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ML2Panel4Layout.setVerticalGroup(
            ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ML2Panel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel113, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ML2Panel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel48)
                            .addComponent(totalRecA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ML2Panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(totalRecB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        ML2Scroll4.setViewportView(ML2Panel4);

        ML2Tab.add(ML2Scroll4, "card3");

        tabbedPanel.addTab("ML2", ML2Tab);

        BNTTab.setLayout(new java.awt.CardLayout());

        jLabel111.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel111.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTATable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTATable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTATable.setRowSelectionAllowed(false);
        BNTATable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTATable.setSortable(false);
        BNTATable.setSortsOnUpdates(false);
        jScrollPane16.setViewportView(BNTATable);
        if (BNTATable.getColumnModel().getColumnCount() > 0) {
            BNTATable.getColumnModel().getColumn(0).setResizable(false);
            BNTATable.getColumnModel().getColumn(1).setResizable(false);
            BNTATable.getColumnModel().getColumn(3).setResizable(false);
            BNTATable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(65, 110, 160));
        jLabel62.setText("Correctes:");

        jLabel65.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(65, 110, 160));
        jLabel65.setText("Ajuda semàntica:");

        resetHistoriaB2.setText("Reset");
        resetHistoriaB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB2ActionPerformed(evt);
            }
        });

        jLabel67.setText("(max. 25)");

        jLabel68.setText("(max. 53)");

        semanticaBntA.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntA.setText("0");
        semanticaBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntA.setOpaque(true);

        correctesBntA.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntA.setText("0");
        correctesBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntA.setOpaque(true);

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(65, 110, 160));
        jLabel71.setText("TOTAL:");

        totalBntA.setBackground(new java.awt.Color(255, 255, 255));
        totalBntA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntA.setText("0");
        totalBntA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntA.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntA.setOpaque(true);

        jPanel7.setBackground(new java.awt.Color(250, 150, 70));

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setText("Calcular");

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel81.setText("<html>Percentil<br>range:");

        puntuacioML7.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML7.setText("0");
        puntuacioML7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML7.setOpaque(true);

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel82.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        puntuacioML8.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML8.setText("0");
        puntuacioML8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML8.setOpaque(true);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addGap(22, 22, 22)
                .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(puntuacioML7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(puntuacioML8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MLPanel4Layout = new javax.swing.GroupLayout(MLPanel4);
        MLPanel4.setLayout(MLPanel4Layout);
        MLPanel4Layout.setHorizontalGroup(
            MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel68))
                            .addComponent(resetHistoriaB2)
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel67))
                            .addGroup(MLPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel4Layout.setVerticalGroup(
            MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel111, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel4Layout.createSequentialGroup()
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel62)
                            .addComponent(jLabel67)
                            .addComponent(correctesBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(semanticaBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel68))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(totalBntA, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 186, Short.MAX_VALUE))
                    .addComponent(jScrollPane16))
                .addContainerGap())
        );

        BNTScroll5.setViewportView(MLPanel4);

        BNTTab.add(BNTScroll5, "card1");

        jLabel112.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel112.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTBTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTBTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTBTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTBTable.setRowSelectionAllowed(false);
        BNTBTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTBTable.setSortable(false);
        BNTBTable.setSortsOnUpdates(false);
        jScrollPane17.setViewportView(BNTBTable);
        if (BNTBTable.getColumnModel().getColumnCount() > 0) {
            BNTBTable.getColumnModel().getColumn(0).setResizable(false);
            BNTBTable.getColumnModel().getColumn(1).setResizable(false);
            BNTBTable.getColumnModel().getColumn(3).setResizable(false);
            BNTBTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(65, 110, 160));
        jLabel63.setText("Correctes:");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(65, 110, 160));
        jLabel66.setText("Ajuda semàntica:");

        resetHistoriaB3.setText("Reset");
        resetHistoriaB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB3ActionPerformed(evt);
            }
        });

        jLabel69.setText("(max. 25)");

        jLabel72.setText("(max. 53)");

        jPanel5.setBackground(new java.awt.Color(250, 150, 70));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText("Calcular");

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel73.setText("<html>Percentil<br>range:");

        puntuacioML4.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML4.setText("0");
        puntuacioML4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML4.setOpaque(true);

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel80.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        puntuacioML6.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML6.setText("0");
        puntuacioML6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML6.setOpaque(true);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addGap(22, 22, 22)
                .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(puntuacioML4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(puntuacioML6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        semanticaBntB.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntB.setText("0");
        semanticaBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntB.setOpaque(true);

        correctesBntB.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntB.setText("0");
        correctesBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntB.setOpaque(true);

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel74.setForeground(new java.awt.Color(65, 110, 160));
        jLabel74.setText("TOTAL:");

        totalBntB.setBackground(new java.awt.Color(255, 255, 255));
        totalBntB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntB.setText("0");
        totalBntB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntB.setOpaque(true);

        javax.swing.GroupLayout MLPanel5Layout = new javax.swing.GroupLayout(MLPanel5);
        MLPanel5.setLayout(MLPanel5Layout);
        MLPanel5Layout.setHorizontalGroup(
            MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel66)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel72))
                            .addComponent(resetHistoriaB3)
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel63)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel69))
                            .addGroup(MLPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel74)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel5Layout.setVerticalGroup(
            MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel112, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel5Layout.createSequentialGroup()
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(jLabel69)
                            .addComponent(correctesBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(semanticaBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel72))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel74)
                            .addComponent(totalBntB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB3)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane17))
                .addContainerGap())
        );

        BNTScroll6.setViewportView(MLPanel5);

        BNTTab.add(BNTScroll6, "card2");

        jLabel114.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel114.setText("<html><center><b>BOSTON NAMING TEST\t\t\t </b>");

        BNTCTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "9 - 7			 ", null, "0", null},
                {null, "6 - 3", null, "0", null},
                {"2", "5 - 8 - 2			 ", null, "0", null},
                {null, "6 - 9 - 4			 ", null, "0", null},
                {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
                {null, "6 - 4 - 3 - 9			 ", null, "0", null},
                {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
                {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", null},
                {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
                {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", null},
                {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
                {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", null},
                {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
                {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", null},
                {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
                {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", null}
            },
            new String [] {
                "Ítem", "Intent", "Resposta", "<html><center>Puntuació intent<br>(0-1)", "Puntuació ítem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BNTCTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        BNTCTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BNTCTable.setRowSelectionAllowed(false);
        BNTCTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        BNTCTable.setSortable(false);
        BNTCTable.setSortsOnUpdates(false);
        jScrollPane18.setViewportView(BNTCTable);
        if (BNTCTable.getColumnModel().getColumnCount() > 0) {
            BNTCTable.getColumnModel().getColumn(0).setResizable(false);
            BNTCTable.getColumnModel().getColumn(1).setResizable(false);
            BNTCTable.getColumnModel().getColumn(3).setResizable(false);
            BNTCTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(65, 110, 160));
        jLabel64.setText("Correctes:");

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(65, 110, 160));
        jLabel75.setText("Ajuda semàntica:");

        resetHistoriaB4.setText("Reset");
        resetHistoriaB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetHistoriaB4ActionPerformed(evt);
            }
        });

        jLabel76.setText("(max. 15)");

        jLabel77.setText("(max. 15)");

        semanticaBntC.setBackground(new java.awt.Color(255, 255, 255));
        semanticaBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        semanticaBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        semanticaBntC.setText("0");
        semanticaBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        semanticaBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        semanticaBntC.setOpaque(true);

        correctesBntC.setBackground(new java.awt.Color(255, 255, 255));
        correctesBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        correctesBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctesBntC.setText("0");
        correctesBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        correctesBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        correctesBntC.setOpaque(true);

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(65, 110, 160));
        jLabel79.setText("TOTAL:");

        totalBntC.setBackground(new java.awt.Color(255, 255, 255));
        totalBntC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalBntC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalBntC.setText("0");
        totalBntC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        totalBntC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        totalBntC.setOpaque(true);

        jPanel8.setBackground(new java.awt.Color(250, 150, 70));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("Calcular");

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel83.setText("<html>Percentil<br>range:");

        puntuacioML9.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML9.setText("0");
        puntuacioML9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML9.setOpaque(true);

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel84.setText("<html>NSSA<br>NEURONORMA<br>Scaled Score<br>age-adjusted");

        puntuacioML10.setBackground(new java.awt.Color(255, 255, 255));
        puntuacioML10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        puntuacioML10.setText("0");
        puntuacioML10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        puntuacioML10.setOpaque(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7)
                .addGap(22, 22, 22)
                .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(puntuacioML10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(puntuacioML9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(puntuacioML10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout MLPanel6Layout = new javax.swing.GroupLayout(MLPanel6);
        MLPanel6.setLayout(MLPanel6Layout);
        MLPanel6Layout.setHorizontalGroup(
            MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel75)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(semanticaBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel77))
                            .addComponent(resetHistoriaB4)
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correctesBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel76))
                            .addGroup(MLPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel79)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MLPanel6Layout.setVerticalGroup(
            MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MLPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel114, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MLPanel6Layout.createSequentialGroup()
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(jLabel76)
                            .addComponent(correctesBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel75)
                            .addComponent(semanticaBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel77))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MLPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel79)
                            .addComponent(totalBntC, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(resetHistoriaB4)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane18))
                .addContainerGap())
        );

        BNTScroll7.setViewportView(MLPanel6);

        BNTTab.add(BNTScroll7, "card3");

        tabbedPanel.addTab("BNT", BNTTab);

        dataPanel.add(tabbedPanel, java.awt.BorderLayout.CENTER);

        mainPanel.add(dataPanel, java.awt.BorderLayout.CENTER);

        acceptaBtn.setText("Accepta");
        acceptaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptaBtnActionPerformed(evt);
            }
        });

        cancelaBtn.setText("Cancel·la");
        cancelaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelaBtnActionPerformed(evt);
            }
        });

        anteriorBtn.setText("Anterior");
        anteriorBtn.setEnabled(false);
        anteriorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorBtnActionPerformed(evt);
            }
        });

        seguentBtn.setText("Següent");
        seguentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguentBtnActionPerformed(evt);
            }
        });

        paginaLabel.setText("1");

        paginaLabel2.setText("/ 10");

        sepBottom.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(anteriorBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(seguentBtn)
                .addGap(18, 18, 18)
                .addComponent(paginaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paginaLabel2)
                .addGap(18, 18, 18)
                .addComponent(sepBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 405, Short.MAX_VALUE)
                .addComponent(acceptaBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelaBtn)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(acceptaBtn)
                            .addComponent(cancelaBtn)
                            .addComponent(anteriorBtn)
                            .addComponent(seguentBtn)
                            .addComponent(paginaLabel)
                            .addComponent(paginaLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(sepBottom))
                .addContainerGap())
        );

        mainPanel.add(buttonPanel, java.awt.BorderLayout.SOUTH);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptaBtnActionPerformed
//        guardar();
        this.dispose();
    }//GEN-LAST:event_acceptaBtnActionPerformed

    private void cancelaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelaBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelaBtnActionPerformed

    private void anteriorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorBtnActionPerformed
        JPanel currentPanel = (JPanel) tabbedPanel.getSelectedComponent();
        CardLayout card = (CardLayout)currentPanel.getLayout();
        pagina--;
        paginaLabel.setText((pagina+1)+"");
        card.show(currentPanel, "card"+(pagina+1));
        
        if (pagina == 0){
            anteriorBtn.setEnabled(false);
            seguentBtn.setEnabled(true);
        }
        else if (pagina == numPaginesTotal-2){
            seguentBtn.setEnabled(true);
        }
    }//GEN-LAST:event_anteriorBtnActionPerformed

    private void seguentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguentBtnActionPerformed
        JPanel currentPanel = (JPanel) tabbedPanel.getSelectedComponent();
        CardLayout card = (CardLayout)currentPanel.getLayout();
        pagina++;
        paginaLabel.setText((pagina+1)+"");
        card.show(currentPanel, "card"+(pagina+1));
        if (pagina == numPaginesTotal-1){
            seguentBtn.setEnabled(false);
            anteriorBtn.setEnabled(true);
        }
        else if (pagina == 1){
            anteriorBtn.setEnabled(true);
        }
    }//GEN-LAST:event_seguentBtnActionPerformed

    private void resetHistoriaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaAActionPerformed
        for (int i = 0; i<this.ML1ATable.getRowCount(); i++){
            ML1ATable.setValueAt("0", i, 3);
            ML1ATable.setValueAt("0", i, 4);
        }
        ML1Total.setText(historiaBprimerTotal.getText());
        textHistoriaAprimer.setText("");
        textHistoriaAsegon.setText("");
        this.historiaAprimerTotal.setText("0");
        this.historiaAsegonTotal.setText("0");
    }//GEN-LAST:event_resetHistoriaAActionPerformed

    private void resetHistoriaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaBActionPerformed
        for (int i = 0; i<this.ML1BTable.getRowCount(); i++){
            ML1BTable.setValueAt("0", i, 3);
        }
        textHistoriaBprimer.setText("");
        ML1Total.setText(textHistoriaAprimer.getText());
    }//GEN-LAST:event_resetHistoriaBActionPerformed

    private void resetHistoriaA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaA1ActionPerformed
        for (int i = 0; i<this.ML2ATable.getRowCount(); i++){
            ML2ATable.setValueAt("0", i, 3);
        }
        ML2Total.setText(historiaBprimerTotal2.getText());
        textHistoriaAprimer2.setText("");
        historiaAprimerTotal2.setText("0");
    }//GEN-LAST:event_resetHistoriaA1ActionPerformed

    private void resetHistoriaB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB1ActionPerformed
        for (int i = 0; i<this.ML2BTable.getRowCount(); i++){
            ML2BTable.setValueAt("0", i, 3);
        }
        textHistoriaBprimer2.setText("");
        historiaBprimerTotal2.setText("0");
        ML2Total.setText(historiaAprimerTotal2.getText());
    }//GEN-LAST:event_resetHistoriaB1ActionPerformed

    private void resetHistoriaB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB2ActionPerformed
        for (int i = 0; i<this.BNTATable.getRowCount(); i++){
            BNTATable.setValueAt("0", i, 2);
            BNTATable.setValueAt("0", i, 3);
        }
        this.correctesBntA.setText("0");
        this.semanticaBntA.setText("0");
        this.totalBntA.setText("0");
    }//GEN-LAST:event_resetHistoriaB2ActionPerformed

    private void resetHistoriaB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetHistoriaB3ActionPerformed

    private void resetHistoriaB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetHistoriaB4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetHistoriaB4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sessio1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sessio1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXTable BNTATable;
    private org.jdesktop.swingx.JXTable BNTBTable;
    private org.jdesktop.swingx.JXTable BNTCTable;
    private javax.swing.JScrollPane BNTScroll5;
    private javax.swing.JScrollPane BNTScroll6;
    private javax.swing.JScrollPane BNTScroll7;
    private javax.swing.JPanel BNTTab;
    private org.jdesktop.swingx.JXTable ML1ATable;
    private org.jdesktop.swingx.JXTable ML1BTable;
    private javax.swing.JPanel ML1Panel;
    private javax.swing.JPanel ML1Panel1;
    private javax.swing.JScrollPane ML1Scroll;
    private javax.swing.JScrollPane ML1Scroll2;
    private javax.swing.JPanel ML1Tab;
    private javax.swing.JLabel ML1Total;
    private org.jdesktop.swingx.JXTable ML2ATable;
    private org.jdesktop.swingx.JXTable ML2BTable;
    private javax.swing.JPanel ML2Panel2;
    private javax.swing.JPanel ML2Panel4;
    private org.jdesktop.swingx.JXTable ML2RecTableA;
    private org.jdesktop.swingx.JXTable ML2RecTableB;
    private javax.swing.JScrollPane ML2Scroll1;
    private javax.swing.JScrollPane ML2Scroll3;
    private javax.swing.JScrollPane ML2Scroll4;
    private javax.swing.JPanel ML2Tab;
    private javax.swing.JLabel ML2Total;
    private javax.swing.JPanel MLPanel3;
    private javax.swing.JPanel MLPanel4;
    private javax.swing.JPanel MLPanel5;
    private javax.swing.JPanel MLPanel6;
    private javax.swing.JButton acceptaBtn;
    private javax.swing.JButton anteriorBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelaBtn;
    private javax.swing.JLabel correctesBntA;
    private javax.swing.JLabel correctesBntB;
    private javax.swing.JLabel correctesBntC;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel digitsDirectePanel;
    private javax.swing.JScrollPane digitsDirecteScroll;
    private org.jdesktop.swingx.JXTable digitsDirecteTable;
    private javax.swing.JPanel digitsInversPanel;
    private javax.swing.JScrollPane digitsInversScroll;
    private org.jdesktop.swingx.JXTable digitsInversTable;
    private javax.swing.JPanel digitsTab;
    private javax.swing.JLabel historiaAprimerTotal;
    private javax.swing.JLabel historiaAprimerTotal2;
    private javax.swing.JLabel historiaAsegonTotal;
    private javax.swing.JLabel historiaBprimerTotal;
    private javax.swing.JLabel historiaBprimerTotal2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel nssaDD;
    private javax.swing.JLabel nssaDI;
    private javax.swing.JLabel paginaLabel;
    private javax.swing.JLabel paginaLabel2;
    private javax.swing.JLabel percentilDD;
    private javax.swing.JLabel percentilDI;
    private javax.swing.JLabel puntuacioDirectaDD;
    private javax.swing.JLabel puntuacioDirectaDI;
    private javax.swing.JLabel puntuacioML1;
    private javax.swing.JLabel puntuacioML10;
    private javax.swing.JLabel puntuacioML2;
    private javax.swing.JLabel puntuacioML4;
    private javax.swing.JLabel puntuacioML6;
    private javax.swing.JLabel puntuacioML7;
    private javax.swing.JLabel puntuacioML8;
    private javax.swing.JLabel puntuacioML9;
    private javax.swing.JButton resetHistoriaA;
    private javax.swing.JButton resetHistoriaA1;
    private javax.swing.JButton resetHistoriaB;
    private javax.swing.JButton resetHistoriaB1;
    private javax.swing.JButton resetHistoriaB2;
    private javax.swing.JButton resetHistoriaB3;
    private javax.swing.JButton resetHistoriaB4;
    private javax.swing.JButton seguentBtn;
    private javax.swing.JLabel semanticaBntA;
    private javax.swing.JLabel semanticaBntB;
    private javax.swing.JLabel semanticaBntC;
    private javax.swing.JSeparator sepBottom;
    private javax.swing.JLabel spanDD;
    private javax.swing.JLabel spanDI;
    private javax.swing.JTabbedPane tabbedPanel;
    private javax.swing.JTextArea textHistoriaAprimer;
    private javax.swing.JTextArea textHistoriaAprimer2;
    private javax.swing.JTextArea textHistoriaAsegon;
    private javax.swing.JTextArea textHistoriaBprimer;
    private javax.swing.JTextArea textHistoriaBprimer2;
    private javax.swing.JLabel totalBntA;
    private javax.swing.JLabel totalBntB;
    private javax.swing.JLabel totalBntC;
    private javax.swing.JLabel totalRec;
    private javax.swing.JLabel totalRecA;
    private javax.swing.JLabel totalRecB;
    // End of variables declaration//GEN-END:variables

    
    private void initDigitsDirecteTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "9 - 7			 ", null, "0", null},
            {null, "6 - 3", null, "0", "0"},
            {"2", "5 - 8 - 2			 ", null, "0", null},
            {null, "6 - 9 - 4			 ", null, "0", "0"},
            {"3", "7 - 2 - 8 - 6			 ", null, "0", null},
            {null, "6 - 4 - 3 - 9			 ", null, "0", "0"},
            {"4", "4 - 2 - 7 - 3 - 1			 ", null, "0", null},
            {null, "7 - 5 - 8 - 3 - 6			 ", null, "0", "0"},
            {"5", "3 - 9 - 2 - 4 - 8 - 7			 ", null, "0", null},
            {null, "6 - 1 - 9 - 7 - 4 - 2			 ", null, "0", "0"},
            {"6", "4 - 1 - 7 - 9 - 3 - 8 - 6			 ", null, "0", null},
            {null, "6 - 9 - 1 - 7 - 4 - 2 - 8			 ", null, "0", "0"},
            {"7", "3 - 8 - 2 - 9 - 6 - 1 - 7 - 4			 ", null, "0", null},
            {null, "5 - 8 - 1 - 3 - 2 - 6 - 4 - 7			 ", null, "0", "0"},
            {"8", "2 - 7 - 5 - 8 - 6 - 3 - 1 - 9 - 4			 ", null, "0", null},
            {null, "7 - 1 - 3 - 9 - 4 - 2 - 5 - 6 - 8			 ", null, "0", "0"}
        },
        new String [] {
            header+"Ítem", header+"Intent", header+"Resposta", header+"<center>Puntuació intent<br>(0-1)", header+"Puntuació ítem"
        }
    );
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        digitsDirecteTable.setModel(model);
        
        //DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        //centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        digitsDirecteTable.getColumnModel().getColumn(0).setCellRenderer( new customRenderer( true) );
        digitsDirecteTable.getColumnModel().getColumn(4).setCellRenderer( new customRenderer(true) );
        
        for (int i=0; i<digitsDirecteTable.getColumnModel().getColumnCount();i++){
            digitsDirecteTable.getColumnModel().getColumn(i).setResizable(false);
            digitsDirecteTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        digitsDirecteTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        digitsDirecteTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<digitsDirecteTable.getRowCount(); i++){
            digitsDirecteTable.setRowHeight(i, 30);
        }
        
        Action action;
        action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                
                int sumaTotal = 0;
                int suma = 0;
                
                model.setEditable(4,true);
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                    if (i%2 == 1){
                        suma = Integer.parseInt((String)table.getValueAt(i, 3))+Integer.parseInt((String)table.getValueAt(i-1, 3));
                        table.setValueAt(suma+"", i, 4);
                        table.setRowHeight(i, 30);
                    }
                }
                model.setEditable(4,false);
                puntuacioDirectaDD.setText(sumaTotal+"");
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(digitsDirecteTable, action, 3);
        digitsDirecteTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        digitsDirecteTable.packAll();
        digitsDirecteTable.getColumn(2).setPreferredWidth(400);
    }
    
    
    private void initDigitsInversTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "3 - 1","1 - 3", null, "0", null},
            {null, "2 - 4","4 - 2", null, "0", "0"},
            {"2", "4 - 6","6 - 4", null, "0", null},
            {null, "5 - 7","7 - 5", null, "0", "0"},
            {"3", "6 - 2 - 9", "9 - 2 - 6", null, "0", null},
            {null, "4 - 7 - 5", "5 - 7 - 4", null, "0", "0"},
            {"4", "8 - 2 - 7 - 9", "9 - 7 - 2 - 8", null, "0", null},
            {null, "4 - 9 - 6 - 8", "8 - 6 - 9 - 4", null, "0", "0"},
            {"5", "6 - 5 - 8 - 4 - 3", "3 - 4 - 8 - 5 - 6", null, "0", null},
            {null, "1 - 5 - 4 - 8 - 6", "6 - 8 - 4 - 5 - 1", null, "0", "0"},
            {"6", "5 - 3 - 7 - 4 - 1 - 8", "8 - 1 - 4 - 7 - 3 - 5", null, "0", null},
            {null, "7 - 2 - 4 - 8 - 5 - 6", "6 - 5 - 8 - 4 - 2 - 7", null, "0", "0"},
            {"7", "8 - 1 - 4 - 9 - 3 - 6 - 2", "2 - 6 - 3 - 9 - 4 - 1 - 8", null, "0", null},
            {null, "4 - 7 - 3 - 9 - 6 - 2 - 8", "8 - 2 - 6 - 9 - 3 - 7 - 4", null, "0", "0"},
            {"8", "9 - 4 - 3 - 7 - 6 - 2 - 1 - 8", "8 - 1 - 2 - 6 - 7 - 3 - 4 - 9", null, "0", null},
            {null, "7 - 2 - 8 - 1 - 5 - 6 - 4 - 3", "3 - 4 - 6 - 5 - 1 - 8 - 2 - 7", null, "0", "0"}
        },
        new String [] {
            header+"Ítem", header+"Intent", header+"Resposta correcta", header+"Resposta", header+"<center>Puntuació intent<br>(0-1)", header+"Puntuació ítem"
        }
    );
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
        };
        boolean[] canEdit = new boolean [] {
            true, false, false, true, true, false
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        digitsInversTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        digitsInversTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        digitsInversTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
        
        for (int i=0; i<digitsInversTable.getColumnModel().getColumnCount();i++){
            digitsInversTable.getColumnModel().getColumn(i).setResizable(false);
            digitsInversTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        digitsInversTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        digitsInversTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<digitsInversTable.getRowCount(); i++){
            digitsInversTable.setRowHeight(i, 30);
        }
        
        Action action;
        action = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                model.setEditable(5,true);
                model.setEditable(4,true);
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                
                int sumaTotal = 0;
                int suma = 0;
                
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                    if (i%2 == 1){
                        suma = Integer.parseInt((String)table.getValueAt(i, 4))+Integer.parseInt((String)table.getValueAt(i-1, 4));
                        table.setValueAt(suma+"", i, 5);
                        table.setRowHeight(i, 30);
                    }
                }
                model.setEditable(5,false);
                puntuacioDirectaDI.setText(sumaTotal+"");
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(digitsInversTable, action, 4);
        digitsInversTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        digitsInversTable.packAll();
        digitsInversTable.getColumn(3).setPreferredWidth(400);
    }

    private void initML1ATable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "La Maria", "<html><i>Maria</i> o variant", "0", "0"},
            {"2", "i el Pedro", "<html><i>Pedro</i> o variant", "0", "0"},
            {"3", "són amics", "<html><i>amics</i> (en qualsevol context)", "0", "0"},
            {"4", "des de fa 30", "<html>es requereix <i>trenta</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0", "0"},
            {"5", "anys", "<html>es requereix <i>anys</i>", "0", "0"},
            {"6", "Cada", "<html><i>cada</i>, tots (en referencia només als dimarts), o <i>els dimarts</i>", "0", "0"},
            {"7", "dimarts", "<html>es requereix <i>dimarts</i> (en qualsevol context)", "0", "0"},
            {"8", "queda", "<html>qualsevol indicació que reflecteixi que els personatges queden intencionadament", "0", "0"},
            {"9", "per esmorzar", "<html>es requereix <i>esmorzar</i> (en qualsevol context)", "0", "0"},
            {"10", "al bar", "<html>es requereix <i>bar</i>", "0", "0"},
            {"11", "Cervanted", "<html>es requereix <i>Cervantes</i> (en qualsevol context)", "0", "0"},
            {"12", "Després surten junts a passejar", "indicació que els personatges passegen", "0", "0"},
            {"13", "pel parc", "<html>es requereix <i>parc</i> (en qualsevol context)", "0", "0"},
            {"14", "del Retiro.", "<html>es requereix <i>Retiro</i> (en qualsevol context)", "0", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"<center>Puntuació<br>Primer record", header+"<center>Puntuació<br>Primer record"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML1ATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML1ATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML1ATable.getColumnModel().getColumnCount();i++){
            ML1ATable.getColumnModel().getColumn(i).setResizable(false);
            ML1ATable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML1ATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML1ATable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML1ATable.getRowCount(); i++){
            ML1ATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaAprimerTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(Integer.parseInt(historiaBprimerTotal.getText())+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 4));
                table.setValueAt(val == 0 ? "1" : "0", row, 4);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 4));
                }
                historiaAsegonTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(Integer.parseInt(historiaBprimerTotal.getText())+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML1ATable, action1, 3);
        ButtonColumn buttonColumn2 = new ButtonColumn(ML1ATable, action2, 4);
        ML1ATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML1ATable.packAll();
    }

    private void initML1BTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "Elena", "<html><i>Elena</i> o variant", "0"},
            {"2", "Pérez,", "<html>es requereix<i>Pérez</i>","0"},
            {"3", "del sud", "<html><i>sud</i> (en qualsevol context)", "0"},
            {"4", "de Madrid,", "<html><i>Madrid</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
            {"5", "treballadora", "indicació que tenia una feina", "0"},
            {"6", "com a cuinera", "<html>es requereix <i>cuinera</i> o variant", "0"},
            {"7", "al menjador", "<html>es requereix <i>menjador</i>", "0"},
            {"8", "d'una escola,", "<html>es requereix <i>escola</i> o <i>col·legi</i>", "0"},
            {"9", "va denunciar", "<html>indicació de denuncia o reclamació davant l'autoritat (en qualsevol context)", "0"},
            {"10", "a la comisseria", "<html>indicació de lloc de treball de la policia, oficina policial", "0"},
            {"11", "de policia", "<html><i>policia</i> (en qualsevol context)", "0"},
            {"12", "que habia estat assaltada", "indicació d'assalt, atracament", "0"},
            {"13", "la nit anterior", "indicació que l'assalt va ser la nit anterior", "0"},
            {"14", "al carrer Padilla,", "<html>carrer <i>Padilla</i> (en qualsevol context)", "0"},
            {"15", "i que li habien robat", "<html>indicació que la van robar", "0"},
            {"16", "56 euros.,", "<html>indicació que va ser substreta una quantitat entre 49-60 euros", "0"},
            {"17", "Tenia quatre", "<html>es requereix <i>quatre</i> juntament a la idea que eren seus", "0"},
            {"18", "nens petits", "<html>es requereix <i>nens</i> o variant", "0"},
            {"19", "no habia pogut pagar el lloguer", "<html>indicació que reflecteixi que el lloguer no havia estat pagat", "0"},
            {"20", "i portada dos dies", "<html>es requereix <i>dos dies</i> o variant que contingui<i>dos</i>", "0"},
            {"21", "sense menjar.", "<html>indicació que els nens o la familia no havien menjat", "0"},
            {"22", "La policia,", "<html>indicació de policia, un o més agents (en qualsevol context)", "0"},
            {"23", "commoguda per la història de la dona", "<html>indicació que la història va provocar compassió", "0"},
            {"24", "va realitzar una col·lecta", "<html>indicació que es van recollir diners o menjar", "0"},
            {"25", "per ajudar-la.", "<html>indicació que els diners o el menjar recollits eren per a ella o pels seus fills", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML1BTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML1BTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML1BTable.getColumnModel().getColumnCount();i++){
            ML1BTable.getColumnModel().getColumn(i).setResizable(false);
            ML1BTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        ML1BTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML1BTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML1BTable.getRowCount(); i++){
            ML1BTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaBprimerTotal.setText(sumaTotal+"");
                ML1Total.setText(""+(sumaTotal+Integer.parseInt(historiaAprimerTotal.getText())+Integer.parseInt(historiaAsegonTotal.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML1BTable, action1, 3);
        ML1BTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML1BTable.packAll();
    }
    
    private void initML2ATable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
        new Object [][] {
            {"1", "La Maria", "<html><i>Maria</i> o variant", "0"},
            {"2", "i el Pedro", "<html><i>Pedro</i> o variant", "0"},
            {"3", "són amics", "<html><i>amics</i> (en qualsevol context)", "0"},
            {"4", "des de fa 30", "<html>es requereix <i>trenta</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
            {"5", "anys", "<html>es requereix <i>anys</i>", "0"},
            {"6", "Cada", "<html><i>cada</i>, tots (en referencia només als dimarts), o <i>els dimarts</i>", "0"},
            {"7", "dimarts", "<html>es requereix <i>dimarts</i> (en qualsevol context)", "0", "0"},
            {"8", "queda", "<html>qualsevol indicació que reflecteixi que els personatges queden intencionadament", "0"},
            {"9", "per esmorzar", "<html>es requereix <i>esmorzar</i> (en qualsevol context)", "0"},
            {"10", "al bar", "<html>es requereix <i>bar</i>", "0"},
            {"11", "Cervanted", "<html>es requereix <i>Cervantes</i> (en qualsevol context)", "0"},
            {"12", "Després surten junts a passejar", "indicació que els personatges passegen", "0"},
            {"13", "pel parc", "<html>es requereix <i>parc</i> (en qualsevol context)", "0"},
            {"14", "del Retiro.", "<html>es requereix <i>Retiro</i> (en qualsevol context)", "0"}
        },
        new String [] {
            header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
        }
    );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML2ATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2ATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2ATable.getColumnModel().getColumnCount();i++){
            ML2ATable.getColumnModel().getColumn(i).setResizable(false);
            ML2ATable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2ATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2ATable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2ATable.getRowCount(); i++){
            ML2ATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaAprimerTotal2.setText(sumaTotal+"");
                ML2Total.setText(""+sumaTotal+historiaBprimerTotal2.getText());
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2ATable, action1, 3);
        ML2ATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2ATable.packAll();
    }

    private void initTabs() {
        numPaginesTotal = ((JPanel)tabbedPanel.getSelectedComponent()).getComponentCount();
        paginaLabel2.setText("/ "+(numPaginesTotal)+"");
        tabbedPanel.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                pagina = 0;
              
                
                numPaginesTotal = ((JPanel)tabbedPanel.getSelectedComponent()).getComponentCount();
                if (numPaginesTotal > 1){
                    CardLayout card = (CardLayout)((JPanel)tabbedPanel.getSelectedComponent()).getLayout();
                    card.show(((JPanel)tabbedPanel.getSelectedComponent()), "card"+(pagina+1));
                    anteriorBtn.setEnabled(false);
                    seguentBtn.setEnabled(true);
                }else {
                    anteriorBtn.setEnabled(false);
                    seguentBtn.setEnabled(false);
                }
                paginaLabel.setText((pagina+1)+"");
                paginaLabel2.setText("/ "+(numPaginesTotal)+"");
            }
        });
    }

    private void initML2BTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        customModel model = new customModel(
            new Object [][] {
                {"1", "Elena", "<html><i>Elena</i> o variant", "0"},
                {"2", "Pérez,", "<html>es requereix<i>Pérez</i>","0"},
                {"3", "del sud", "<html><i>sud</i> (en qualsevol context)", "0"},
                {"4", "de Madrid,", "<html><i>Madrid</i> (en qualsevol context), no es requereix el nombre específic d'anys", "0"},
                {"5", "treballadora", "indicació que tenia una feina", "0"},
                {"6", "com a cuinera", "<html>es requereix <i>cuinera</i> o variant", "0"},
                {"7", "al menjador", "<html>es requereix <i>menjador</i>", "0"},
                {"8", "d'una escola,", "<html>es requereix <i>escola</i> o <i>col·legi</i>", "0"},
                {"9", "va denunciar", "<html>indicació de denuncia o reclamació davant l'autoritat (en qualsevol context)", "0"},
                {"10", "a la comisseria", "<html>indicació de lloc de treball de la policia, oficina policial", "0"},
                {"11", "de policia", "<html><i>policia</i> (en qualsevol context)", "0"},
                {"12", "que habia estat assaltada", "indicació d'assalt, atracament", "0"},
                {"13", "la nit anterior", "indicació que l'assalt va ser la nit anterior", "0"},
                {"14", "al carrer Padilla,", "<html>carrer <i>Padilla</i> (en qualsevol context)", "0"},
                {"15", "i que li habien robat", "<html>indicació que la van robar", "0"},
                {"16", "56 euros.,", "<html>indicació que va ser substreta una quantitat entre 49-60 euros", "0"},
                {"17", "Tenia quatre", "<html>es requereix <i>quatre</i> juntament a la idea que eren seus", "0"},
                {"18", "nens petits", "<html>es requereix <i>nens</i> o variant", "0"},
                {"19", "no habia pogut pagar el lloguer", "<html>indicació que reflecteixi que el lloguer no havia estat pagat", "0"},
                {"20", "i portada dos dies", "<html>es requereix <i>dos dies</i> o variant que contingui<i>dos</i>", "0"},
                {"21", "sense menjar.", "<html>indicació que els nens o la familia no havien menjat", "0"},
                {"22", "La policia,", "<html>indicació de policia, un o més agents (en qualsevol context)", "0"},
                {"23", "commoguda per la història de la dona", "<html>indicació que la història va provocar compassió", "0"},
                {"24", "va realitzar una col·lecta", "<html>indicació que es van recollir diners o menjar", "0"},
                {"25", "per ajudar-la.", "<html>indicació que els diners o el menjar recollits eren per a ella o pels seus fills", "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Criteri de puntuació", header+"Puntuació"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        //editModel model = new editModel(digitsDirecteTable.getRowCount(),digitsDirecteTable.getColumnCount());
        ML2BTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2BTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2BTable.getColumnModel().getColumnCount();i++){
            ML2BTable.getColumnModel().getColumn(i).setResizable(false);
            ML2BTable.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2BTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2BTable.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2BTable.getRowCount(); i++){
            ML2BTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                historiaBprimerTotal2.setText(sumaTotal+"");
                ML2Total.setText(""+(sumaTotal+Integer.parseInt(historiaAprimerTotal2.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2BTable, action1, 3);
        ML2BTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2BTable.packAll();
    }

    private void initML2RecTable() {
        String header = "<html><font color=\"rgb(255,255,255)\">";
        String si = "<html>N&nbsp;&nbsp;&nbsp;<b><font color=\"rgb(80,130,190)\">   S</font></b>";
        String no = "<html><font color=\"rgb(80,130,190)\"><b>N   </b></font>&nbsp;&nbsp;&nbsp;S";
        customModel model = new customModel(
            new Object [][] {
                {"1", "Una de les persones de la història, es deia Maria?", si, "0"},
                {"2", "L'altra persona, es deia Pedro?", si,"0"},
                {"3", "Es deia a la història que estaven casats?", no, "0"},
                {"4", "Eren amics des de feia 20 anys?", no, "0"},
                {"5", "Quedaven cada dimarts?", si, "0"},
                {"6", "Menjaven al bar El Retiro?", no, "0"},
                {"7", "Desrés d'esmorzar, anaven a observar ocells a casa del Pedro?", no, "0"},
                {"8", "Passejaven pel parc del Retiro?", si, "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Resposta", header+"Puntuació"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        ML2RecTableA.setModel(model);
        
        customModel model2 = new customModel(
            new Object [][] {
                {"9", "La dona, es deia Diana Pérez?", no,"0"},
                {"10", "Vivia al sud de Madrid?", si, "0"},
                {"11", "La dona era cuinera?", si, "0"},
                {"12", "Traballava a un restaurant?", no, "0"},
                {"13", "Tenia quatre fills?", si, "0"},
                {"14", "Els fills eren adolescents?", no, "0"},
                {"15", "Va tenir lloc el robatori al carrer Reial?", no, "0"},
                {"16", "Va dir la dona que li havien robat dos dies abans?", no, "0"},
                {"17", "Va denunciar la dona el robatori a comissaria?", si, "0"},
                {"18", "Van robar a la dona 75 euros?", no, "0"},
                {"19", "Havia estat la família sense menjar durant quatre dies?", no, "0"},
                {"20", "La dona, havia de pagar el lloguer?", si, "0"},
                {"21", "La policia va detenir el lladre?", no, "0"},
                {"22", "La policia es va commoure amb la història de la dona?", si, "0"},
                {"23", "¿La policia va organitzar una col·lecta?", si, "0"}
            },
            new String [] {
                header+"Ítem", header+"Detall", header+"Resposta", header+"Puntuació"
            }
        );
        
        model2.setTypes(types);
        model2.setCanEdit(canEdit);
        
        ML2RecTableB.setModel(model2);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2RecTableA.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        ML2RecTableA.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2RecTableA.getColumnModel().getColumnCount();i++){
            ML2RecTableA.getColumnModel().getColumn(i).setResizable(false);
            ML2RecTableA.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2RecTableA.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2RecTableA.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2RecTableA.getRowCount(); i++){
            ML2RecTableA.setRowHeight(i, 30);
        }
        
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        ML2RecTableB.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        ML2RecTableB.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        
        for (int i=0; i<ML2RecTableB.getColumnModel().getColumnCount();i++){
            ML2RecTableB.getColumnModel().getColumn(i).setResizable(false);
            ML2RecTableB.getColumn(i).setHeaderRenderer(new customRenderer(new Color(190,80,80),true));
        }
        
        ML2RecTableB.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        ML2RecTableB.getTableHeader().setReorderingAllowed(false);
        
        for (int i = 0; i<ML2RecTableB.getRowCount(); i++){
            ML2RecTableB.setRowHeight(i, 30);
        }
        
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                
                System.out.println(table.getRowCount());
                if (table.getRowCount() <= 8){
                    totalRecA.setText(sumaTotal+"");
                }else{
                    totalRecB.setText(sumaTotal+"");
                }
                totalRec.setText(""+(Integer.parseInt(totalRecA.getText())+Integer.parseInt(totalRecB.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                
                if (table.getRowCount() == 8){
                    totalRecA.setText(sumaTotal+"");
                }else{
                    totalRecB.setText(sumaTotal+"");
                }
                totalRec.setText(""+(Integer.parseInt(totalRecA.getText())+Integer.parseInt(totalRecB.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(ML2RecTableA, action1, 3);
        ML2RecTableA.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2RecTableA.packAll();
        
        ButtonColumn buttonColumn2 = new ButtonColumn(ML2RecTableB, action1, 3);
        ML2RecTableB.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        ML2RecTableB.packAll();
    }

    private void initBNTATable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Llit(un moble)","0","0"},
                {"2", "Escombra (serveix per netejar),","0","0"},
                {"3", "Banc (serveix per seure)","0","0"},
                {"4", "Pop (animal marí)","0","0"},
                {"5", "Bolet (quelcom per menjar)","0","0"},
                {"6", "Helicòpter (serveix per viatjar per l'aire)","0","0"},
                {"7", "Corona de flors", "0","0"},
                {"8", "Pinces (utensili)","0","0"},
                {"9", "Compàs (serveix per dibuixar)","0","0"},
                {"10", "Magdalena (quelcom per menjar)","0","0"},
                {"11", "Balda (part d'una porta)","0","0"},
                {"12", "Canoa (s'utlititza a l'aigua)","0","0"},
                {"13", "Pelicà (una au)","0","0"},
                {"14", "Unicorn (animal mític)","0","0"},
                {"15", "Transportador (serveix per mesurar angles)","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version A", " Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTATable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTATable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTATable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=2; i<BNTATable.getColumnModel().getColumnCount(); i++){
            BNTATable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTATable.getColumnModel().getColumnCount() > 0) {
            BNTATable.getColumnModel().getColumn(0).setResizable(false);
            BNTATable.getColumnModel().getColumn(1).setResizable(false);
            BNTATable.getColumnModel().getColumn(2).setResizable(false);
            BNTATable.getColumnModel().getColumn(3).setResizable(false);
        }
        BNTATable.getTableHeader().setReorderingAllowed(false);
        
        BNTATable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTATable.getRowCount(); i++){
            BNTATable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 2));
                table.setValueAt(val == 0 ? "1" : "0", row, 2);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 2));
                }
                correctesBntA.setText(sumaTotal+"");
                totalBntA.setText(""+(sumaTotal+Integer.parseInt(semanticaBntA.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                semanticaBntA.setText(sumaTotal+"");
                totalBntA.setText(""+(sumaTotal+Integer.parseInt(correctesBntA.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTATable, action1, 2);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTATable, action2, 3);
        BNTATable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTATable.packAll();
    }

    private void initBNTBTable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Arbre (creix al camp)","0","0"},
                {"2", "Flor (creix al jardí)","0","0"},
                {"3", "Xiulet (serveix per bufar)","0","0"},
                {"4", "Escales mecàniques (serveix per pujar)","0","0"},
                {"5", "Penjador (es troba en un armari)","0","0"},
                {"6", "Morrió (s'utilitza pels gossos)","0","0"},
                {"7", "Volcà (un tipus de muntanya)", "0","0"},
                {"8", "Gla (prové d'un arbre) ","0","0"},
                {"9", "Cactus (quelcom que creix)","0","0"},
                {"10", "Arpa (intrument musical)","0","0"},
                {"11", "Dard (serveix per llançar)","0","0"},
                {"12", "Soga (per penjar)","0","0"},
                {"13", "Xanques (s'usen per caminar més alt)","0","0"},
                {"14", "Esfinx (es troba a Egipte)","0","0"},
                {"15", "Pèrgola (s'usa al jardí)","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version B", " Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTBTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTBTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTBTable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=2; i<BNTBTable.getColumnModel().getColumnCount(); i++){
            BNTBTable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTBTable.getColumnModel().getColumnCount() > 0) {
            BNTBTable.getColumnModel().getColumn(0).setResizable(false);
            BNTBTable.getColumnModel().getColumn(1).setResizable(false);
            BNTBTable.getColumnModel().getColumn(2).setResizable(false);
            BNTBTable.getColumnModel().getColumn(3).setResizable(false);
        }
        BNTBTable.getTableHeader().setReorderingAllowed(false);
        BNTBTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTBTable.getRowCount(); i++){
            BNTBTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 2));
                table.setValueAt(val == 0 ? "1" : "0", row, 2);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 2));
                }
                correctesBntB.setText(sumaTotal+"");
                totalBntB.setText(""+(sumaTotal+Integer.parseInt(semanticaBntB.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                semanticaBntB.setText(sumaTotal+"");
                totalBntB.setText(""+(sumaTotal+Integer.parseInt(correctesBntB.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTBTable, action1, 2);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTBTable, action2, 3);
        BNTBTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTBTable.packAll();
    }

    private void initBNTCTable() {
        customModel model = new customModel(
            new Object [][] {
                {"1", "Casa (tipus d'edifici)","0","0"},
                {"2", "Respall de dents (s'usa a la boca)","0","0"},
                {"3", "Cargol (un animal)","0","0"},
                {"4", "Cadira de rodes (es troba a l'hospital)","0","0"},
                {"5", "Llapis (serveix per escriure)","0","0"},
                {"6", "Màscara (part d'una disfressa)","0","0"},
                {"7", "Acordió (instrument musical)", "0","0"},
                {"8", "Piràmide (es troba a Egipte)","0","0"},
                {"9", "Armònica (instrument musical)","0","0"},
                {"10", "Globus terraqui (un tipus de mapa)","0","0"},
                {"11", "Trípode (el fan servir els fotògrafs)","0","0"},
                {"12", "Pergamí (un document)","0","0"},
                {"13", "Jou (s'utilitza per a animals de tir)","0","0"},
                {"14", "Estetoscopi (el fan servir els metges)","0","0"},
                {"15", "Àbac (serveix per comptar)","0","0"}
            },
            new String [] {
                "", "<html><b><p style=\"font-size:14px;\"><font color=\"rgb(65,110,160)\">Short Form - Version C", " Correctes", " Ajuda semàntica"
            }
        );
        
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, true, true
        };
        
        model.setTypes(types);
        model.setCanEdit(canEdit);
        
        BNTCTable.setModel(model);
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        BNTCTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        BNTCTable.getColumn(1).setHeaderRenderer(centerRenderer);
        
        TableCellRenderer headerRenderer = new VerticalTableHeaderCellRenderer();
        for (int i=2; i<BNTCTable.getColumnModel().getColumnCount(); i++){
            BNTCTable.getColumn(i).setHeaderRenderer(headerRenderer);
        }
        
        if (BNTCTable.getColumnModel().getColumnCount() > 0) {
            BNTCTable.getColumnModel().getColumn(0).setResizable(false);
            BNTCTable.getColumnModel().getColumn(1).setResizable(false);
            BNTCTable.getColumnModel().getColumn(2).setResizable(false);
            BNTCTable.getColumnModel().getColumn(3).setResizable(false);
        }
        BNTCTable.getTableHeader().setReorderingAllowed(false);
        BNTCTable.setHighlighters(HighlighterFactory.createSimpleStriping());
        
        for (int i = 0; i<BNTCTable.getRowCount(); i++){
            BNTCTable.setRowHeight(i, 30);
        }
        
        Action action1;
        action1 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 2));
                table.setValueAt(val == 0 ? "1" : "0", row, 2);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 2));
                }
                correctesBntC.setText(sumaTotal+"");
                totalBntC.setText(""+(sumaTotal+Integer.parseInt(semanticaBntC.getText())));
            }
        };
        
        Action action2;
        action2 = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int row = Integer.parseInt(e.getActionCommand());
                int val = Integer.parseInt((String)table.getValueAt(row, 3));
                table.setValueAt(val == 0 ? "1" : "0", row, 3);
                
                int sumaTotal = 0;
                for (int i = 0; i<table.getRowCount(); i++){
                    sumaTotal += Integer.parseInt((String)table.getValueAt(i, 3));
                }
                semanticaBntC.setText(sumaTotal+"");
                totalBntC.setText(""+(sumaTotal+Integer.parseInt(correctesBntC.getText())));
            }
        };
        
        ButtonColumn buttonColumn = new ButtonColumn(BNTCTable, action1, 2);
        ButtonColumn buttonColumn2 = new ButtonColumn(BNTCTable, action2, 3);
        BNTCTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        BNTCTable.packAll();
    }

}

class customRenderer extends javax.swing.table.DefaultTableCellRenderer {
    Color color = java.awt.Color.WHITE;
    public customRenderer (Color color, boolean center){
        this.color = color;
        if (center){
            this.setHorizontalAlignment( JLabel.CENTER );
        }
    }
    
    public customRenderer (boolean center){
        if (center){
            this.setHorizontalAlignment( JLabel.CENTER );
        }
    }
    
    public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, java.lang.Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        java.awt.Component cellComponent = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
        cellComponent.setBackground(color);
        return cellComponent;
    }
}

class customModel extends DefaultTableModel{
        public customModel(Object[][] data, Object[] columnNames){
            super(data,columnNames);
        }
        Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
        };
        boolean[] canEdit = new boolean [] {
            true, false, true, true, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }

        public void setEditable(int column, boolean value){
            canEdit[column] = value;
        }
        
        public void setTypes(Class[] types){
            this.types = types;
        }

        void setCanEdit(boolean[] canEdit) {
            this.canEdit = canEdit;
        }
    }